{"version":3,"sources":["core/config/layout.ts","admin/components/AdminAppBar.tsx","admin/components/AdminToolbar.tsx","admin/pages/Faq.tsx"],"names":["drawerCollapsedWidth","drawerWidth","AdminAppBar","_ref","children","collapsed","useSettings","width","_jsx","AppBar","color","position","sx","lg","marginLeft","AdminToolbar","title","toggleDrawer","_jsxs","Toolbar","px","xs","sm","IconButton","aria-label","edge","onClick","display","marginRight","MenuIcon","Typography","variant","component","flexGrow","questions","answer","Faq","t","useTranslation","React","Fragment","Container","maxWidth","align","marginBottom","map","question","index","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","Link","RouterLink","to"],"mappings":"yHAAA,oEAAO,MAAMA,EAAuB,IACvBC,EAAc,K,iCCD3B,sCA0BeC,IAlBKC,IAAqC,IAApC,SAAEC,GAA4BD,EACjD,MAAM,UAAEE,GAAcC,cAChBC,EAAQF,EAAYL,IAAuBC,IAEjD,OACEO,cAACC,IAAM,CACLC,MAAM,UACNC,SAAS,QACTC,GAAI,CACFL,MAAO,CAAEM,GAAI,eAAeN,QAC5BO,WAAY,CAAED,GAAIN,IAClBH,SAEDA,M,iCCrBP,iEAoCeW,IAzBMZ,IAA6C,IAA5C,SAAEC,EAAQ,MAAEY,GAA0Bb,EAC1D,MAAM,aAAEc,GAAiBX,cAEzB,OACEY,eAACC,IAAO,CAACP,GAAI,CAAEQ,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAMlB,SAAA,CACpCI,cAACe,IAAU,CACTb,MAAM,UACNc,aAAW,cACXC,KAAK,QACLC,QAAST,EACTL,GAAI,CACFe,QAAS,CAAEd,GAAI,QACfe,YAAa,GACbxB,SAEFI,cAACqB,IAAQ,MAEXrB,cAACsB,IAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKpB,GAAI,CAAEqB,SAAU,GAAI7B,SACzDY,IAEFZ,O,iCC/BP,6IAaA,MAAM8B,EAAY,CAChB,CACElB,MAAO,uBACPmB,OAAQ,yBAEV,CACEnB,MAAO,uBACPmB,OAAQ,yBAEV,CACEnB,MAAO,uBACPmB,OAAQ,yBAEV,CACEnB,MAAO,uBACPmB,OAAQ,yBAEV,CACEnB,MAAO,uBACPmB,OAAQ,yBAEV,CACEnB,MAAO,uBACPmB,OAAQ,0BA0CGC,UAtCHA,KACV,MAAM,EAAEC,GAAMC,cAEd,OACEpB,eAACqB,IAAMC,SAAQ,CAAApC,SAAA,CACbI,cAACN,IAAW,CAAAE,SACVI,cAACO,IAAY,MAEfG,eAACuB,IAAS,CAACC,SAAS,KAAItC,SAAA,CACtBI,cAACsB,IAAU,CAACa,MAAM,SAASC,aAAc,EAAGb,QAAQ,KAAI3B,SACrDiC,EAAE,eAEJH,EAAUW,KAAI,CAACC,EAAUC,IACxB7B,eAAC8B,IAAS,CAAA5C,SAAA,CACRI,cAACyC,IAAgB,CAACC,WAAY1C,cAAC2C,IAAc,IAAI/C,SAC/CI,cAACsB,IAAU,CAACE,UAAU,IAAID,QAAQ,KAAI3B,SACnCiC,EAAES,EAAS9B,WAGhBR,cAAC4C,IAAgB,CAAAhD,SACfI,cAACsB,IAAU,CAACpB,MAAM,iBAAgBN,SAC/BiC,EAAES,EAASX,cARFY,KAalBvC,cAAC6C,IAAI,CACHrB,UAAWsB,IACXC,GAAI,eACJxB,QAAQ,QAAO3B,SAEdiC,EAAE","file":"static/js/38.a117370e.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminAppBarProps = {\n  children: React.ReactNode;\n};\n\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\n  const { collapsed } = useSettings();\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  return (\n    <AppBar\n      color=\"default\"\n      position=\"fixed\"\n      sx={{\n        width: { lg: `calc(100% - ${width}px)` },\n        marginLeft: { lg: width },\n      }}\n    >\n      {children}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminToolbarProps = {\n  children?: React.ReactNode;\n  title?: string;\n};\n\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\n  const { toggleDrawer } = useSettings();\n\n  return (\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        onClick={toggleDrawer}\n        sx={{\n          display: { lg: \"none\" },\n          marginRight: 2,\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\n        {title}\n      </Typography>\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default AdminToolbar;\n","import Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport AdminAppBar from \"../components/AdminAppBar\";\nimport AdminToolbar from \"../components/AdminToolbar\";\n\nconst questions = [\n  {\n    title: \"faq.questions.title1\",\n    answer: \"faq.questions.answer1\",\n  },\n  {\n    title: \"faq.questions.title2\",\n    answer: \"faq.questions.answer2\",\n  },\n  {\n    title: \"faq.questions.title3\",\n    answer: \"faq.questions.answer3\",\n  },\n  {\n    title: \"faq.questions.title4\",\n    answer: \"faq.questions.answer4\",\n  },\n  {\n    title: \"faq.questions.title5\",\n    answer: \"faq.questions.answer5\",\n  },\n  {\n    title: \"faq.questions.title6\",\n    answer: \"faq.questions.answer6\",\n  },\n];\n\nconst Faq = () => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      <AdminAppBar>\n        <AdminToolbar />\n      </AdminAppBar>\n      <Container maxWidth=\"sm\">\n        <Typography align=\"center\" marginBottom={6} variant=\"h2\">\n          {t(\"faq.title\")}\n        </Typography>\n        {questions.map((question, index) => (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography component=\"p\" variant=\"h6\">\n                {t(question.title)}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography color=\"text.secondary\">\n                {t(question.answer)}\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n        ))}\n        <Link\n          component={RouterLink}\n          to={`/${process.env.PUBLIC_URL}/admin/help`}\n          variant=\"body2\"\n        >\n          {t(\"faq.noAnswerLink\")}\n        </Link>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Faq;\n"],"sourceRoot":""}