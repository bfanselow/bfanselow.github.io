{"version":3,"sources":["../../../dist/lightgallery.es5.js","../../../../src/plugins/thumbnail/lg-thumbnail-settings.ts","../../../../src/lg-events.ts","../../../../src/plugins/thumbnail/lg-thumbnail.ts","../../../../src/plugins/zoom/lg-zoom-settings.ts","../../../../src/plugins/zoom/lg-zoom.ts","../../../../src/plugins/autoplay/lg-autoplay-settings.ts","../../../../src/plugins/autoplay/lg-autoplay.ts","../../../../src/plugins/fullscreen/lg-fullscreen-settings.ts","../../../../src/plugins/fullscreen/lg-fullscreen.ts","../../../../src/plugins/share/lg-share-settings.ts","../../../../src/plugins/share/lg-fb-share-utils.ts","../../../../src/plugins/share/lg-twitter-share-utils.ts","../../../../src/plugins/share/lg-pinterest-share-utils.ts","../../../../src/plugins/share/lg-share.ts","../../../../src/plugins/rotate/lg-rotate-settings.ts","../../../../src/plugins/rotate/lg-rotate.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","lGEvents","lightGalleryCoreSettings","mode","easing","speed","licenseKey","height","width","addClass","startClass","backdropDuration","container","startAnimationDuration","zoomFromOrigin","hideBarsDelay","showBarsAfter","slideDelay","supportLegacyBrowser","allowMediaOverlap","videoMaxSize","loadYouTubePoster","defaultCaptionHeight","ariaLabelledby","ariaDescribedby","resetScrollPosition","hideScrollbar","closable","swipeToClose","closeOnTap","showCloseIcon","showMaximizeIcon","loop","escKey","keyPress","trapFocus","controls","slideEndAnimation","hideControlOnEnd","mousewheel","getCaptionFromTitleOrAlt","appendSubHtmlTo","subHtmlSelectorRelative","preload","numberOfSlideItemsInDom","selector","selectWithin","nextHtml","prevHtml","index","iframeWidth","iframeHeight","iframeMaxWidth","iframeMaxHeight","download","counter","appendCounterTo","swipeThreshold","enableSwipe","enableDrag","dynamic","dynamicEl","extraProps","exThumbImage","isMobile","undefined","mobileSettings","plugins","strings","closeGallery","toggleMaximize","previousSlide","nextSlide","playVideo","mediaLoadingFailed","lgQuery","cssVenderPrefixes","_getSelector","firstElement","_getFirstEl","generateUUID","replace","c","r","Math","random","toString","context","document","substring","querySelector","querySelectorAll","_each","func","forEach","_setCssVendorPrefix","el","cssProperty","value","property","group1","toUpperCase","indexOf","style","charAt","toLowerCase","slice","isEventMatched","event","eventName","eventNamespace","split","filter","e","every","attr","getAttribute","setAttribute","find","$LG","first","eq","parent","parentElement","get","removeAttr","attributes","attrs","removeAttribute","wrap","className","wrapper","createElement","parentNode","insertBefore","removeChild","appendChild","classNames","classList","add","removeClass","remove","hasClass","contains","hasAttribute","attribute","toggleClass","css","_this","on","events","listener","Array","isArray","eventListeners","push","addEventListener","once","off","keys","removeEventListener","trigger","detail","customEvent","CustomEvent","dispatchEvent","load","url","fetch","then","res","text","html","innerHTML","append","insertAdjacentHTML","prepend","HTMLElement","cloneNode","firstChild","empty","scrollTop","body","documentElement","window","pageYOffset","scrollLeft","pageXOffset","offset","left","top","rect","getBoundingClientRect","bodyMarginLeft","marginLeft","parseFloat","currentStyle","getComputedStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","params","bubbles","cancelable","evt","createEvent","initCustomEvent","Element","matches","msMatchesSelector","webkitMatchesSelector","defaultDynamicOptions","convertToData","g","utils","element","insertMethod","response","htmlContent","contentDiv","spacing","defaultLgSize","lgSize","isResponsiveSizes","wWidth","innerWidth","size_1","parseInt","size","cWidth","cHeight","maxWidth","min","maxHeight","ratio","bottom","imageSize","LGel","containerRect","wHeight","elWidth","elHeight","elStyle","x","borderLeft","y","borderTop","src","iframeTitle","altAttr","srcset","sizes","sources","imgMarkup","sourceTag","JSON","parse","map","source","key","srcItms","rsWidth","rsSrc","_src","splice","j","img","complete","naturalWidth","_poster","dummyImg","videoContStyle","playVideoString","_isVideo","videoClass","youtube","vimeo","_dummy","outerHTML","elements","display","visibility","items","dynamicElements","availableDynamicOptions","il","k","a","jl","__spreadArrays","item","specified","dynamicAttr","name","label","currentItem","alt","title","thumb","subHtml","test","navigator","userAgent","isHTML5VIdeo","html5","console","error","match","wistia","lgId","LightGallery","options","lgOpened","lGalleryOn","lgBusy","currentItemsInDom","prevScrollTop","bodyPaddingRight","isDummyImageRemoved","dragOrSwipeEnabled","mediaContainerPosition","generateSettings","buildModules","settings","galleryItems","getItems","normalizeSettings","init","validateLicense","addSlideVideoInfo","buildStructure","instance","setTimeout","triggerPosterClick","arrow","openGalleryOnItemClick","_loop_1","this_1","$element","uuid","preventDefault","currentItemIndex","openGallery","plugin","warn","getSlideItem","getSlideItemId","getIdName","id","getElementById","manageSingleSlideClassName","outer","$container","subHtmlCont","addClasses","containerClassName","closeIcon","maximizeIcon","template","$lgComponents","$backdrop","$inner","$content","$toolbar","outerClassNames","refreshOnResize","hideBars","manageCloseGallery","initModules","__slideVideoInfo","getMediaContainerPosition","_a","top_1","currentImageSize","resizeVideoSlide","imgStyle","getDummyImgStyles","lgVideoStyle","getVideoContStyle","updateSlides","currentSrc","updateControls","_index","some","galleryItem","itemIndex","organizeSlideItems","loadContent","updateCurrentCounter","children","shouldHideScrollbar","bodyRect","scrollbarWidth","resetScrollBar","itemsToBeInsertedToDom","getItemsToBeInsertedToDom","addHtml","transform","setMediaContainerPosition","timeout","currentSlide_1","slide","captionHeight","thumbContainer","clearTimeout","hideBarTimeout","initPictureFill","$img","picturefill","counterHtml","subHtmlUrl","fL","currentSlide","getDummyImageContent","$currentSlide","$currentItem","_dummyImgSrc","dummyImgContentImg","cssText","setImgMarkup","currentGalleryItem","imgContent","isFirstSlideWithZoomAnimation","picture","onSlideObjectLoad","$slide","isHTML5VideoWithoutPoster","onLoad","onError","mediaObject","onLgObjectLoad","delay","isFirstSlide","triggerSlideItemLoad","_speed","getSlideType","poster","video","rec","_html5Video","responsive","srcDyItms","videoInfo","iframe","top_2","videoSize","markup","html5Video","hasPoster","loadContentOnFirstSlideLoad","prevIndex","numberOfItems","possibleNumberOfItems","max","prevIndexItem","_element","idx","numberOfExistingItems","getPreviousSlideIndex","currentItemId","setDownloadValue","downloadUrl","$download","makeSlideAnimation","direction","currentSlideItem","previousSlideItem","fromTouch","fromThumb","numberOfGalleryItems","previousSlideItem_1","top_3","arrowDisable","touchPrev","touchNext","updateCounterTotal","touchMove","startCoords","endCoords","distanceX","pageX","distanceY","pageY","allowSwipe","swipeDirection","abs","setTranslate","offsetWidth","gutter","opacity","innerHeight","scale","touchEnd","distance","triggerClick","distanceAbs","goToNextSlide","goToPrevSlide","target","isPosterElement","isMoved","isSwiping","$item","touches","touchAction","manageSwipeClass","isDraging","_touchNext","_touchPrev","_loop","keyCode","$prev","$next","$el","xValue","yValue","scaleX","scaleY","lastCall","deltaY","now","Date","getTime","isSlideElement","playButton","invalidateItems","focus","preventScroll","focusableEls","firstFocusableEl","lastFocusableEl","shiftKey","activeElement","mousedown","force","top_4","_b","destroyModules","removeTimeout","blur","module","err","destroy","refresh","destroyGallery","closeTimeout","bind","thumbnailsSettings","thumbnail","animateThumb","currentPagerPosition","alignThumbnails","thumbWidth","thumbHeight","thumbMargin","appendThumbnailsTo","toggleThumb","enableThumbDrag","enableThumbSwipe","thumbnailSwipeThreshold","loadYouTubeThumbnail","youTubeThumbSize","thumbnailPluginStrings","toggleThumbnails","Thumbnail","thumbOuterWidth","thumbTotalWidth","translateX","thumbClickable","core","setAnimateThumbStyles","build","toggleThumbBar","thumbKeyPress","setThumbMarkup","manageActiveClassOnSlideChange","$lgThumb","$target","rebuildThumbnails","thumbOuterClassNames","$thumbOuter","setThumbItemHtml","thumbDragUtils","cords","startX","endX","newTranslateX","startTime","endTime","touchMoveTime","isDragging","onThumbTouchMove","onThumbTouchEnd","targetTouches","getPossibleTransformX","position","valueOf","touchDuration","distanceXnew","speedX","getThumbHtml","thumbImg","slideVideoInfo","div","$thumb","zoomSettings","zoom","infiniteZoom","actualSize","showZoomInOutIcons","actualSizeIcons","zoomIn","zoomOut","enableZoomAfter","zoomPluginStrings","viewActualSize","Zoom","buildTemplates","zoomIcons","enableZoom","zoomableTimeout","isImageSlide","setZoomEssentials","enableZoomOnSlideItemLoad","getDragCords","getSwipeCords","getDragAllowedAxises","scaleDiff","allowX","allowY","$image","offsetHeight","zoomImage","reposition","resetToMax","originalX","originalY","offsetX","offsetY","positionChanged","dragAllowedAxises","possibleSwipeCords","getPossibleSwipeDragCords","_x","_y","scaleVal","isBeyondPossibleLeft","minX","isBeyondPossibleRight","maxX","isBeyondPossibleTop","minY","isBeyondPossibleBottom","maxY","setZoomStyles","setZoomImageSize","resetImageTranslate","imageReset","actualSizeScale","getCurrentImageActualSizeScale","naturalHeight","ZOOM_TRANSITION_DURATION","$imageWrap","$dummyImage","setActualSize","zoomInProgress","prevScale","getScale","setPageCords","beginZoom","getNaturalWidth","getActualSizeScale","getPageCords","pageCords","manageActualPixelClassNames","resetZoom","tapped","_LGel","setZoomSwipeStyles","zoomDrag","pinchZoom","zoomSwipe","$actualSize","getTouchDistance","sqrt","startDist","pinchStarted","initScale","endDist","_scale","round","Number","EPSILON","diff","touchendZoom","distanceYnew","speedY","getZoomSwipeCords","diffMinY","diffMaxY","diffMinX","difMaxX","imgRect","imageHeight","imageWidth","autoplaySettings","autoplay","slideShowAutoplay","slideShowInterval","progressBar","forceSlideShowAutoplay","autoplayControls","appendAutoplayControlsTo","autoplayPluginStrings","toggleAutoplay","Autoplay","interval","fromAuto","pausedOnTouchDrag","pausedOnSlideChange","startAutoPlay","stopAutoPlay","showProgressBar","_$progressBar_1","_$progress_1","_html","setInterval","clearInterval","fullscreenSettings","fullScreen","fullscreenPluginStrings","toggleFullscreen","FullScreen","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","isFullScreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","shareSettings","share","facebook","facebookDropdownText","twitter","twitterDropdownText","pinterest","pinterestDropdownText","additionalShareOptions","sharePluginStrings","getFacebookShareLink","encodeURIComponent","facebookShareUrl","location","href","getTwitterShareLink","twitterShareUrl","tweetText","getPinterestShareLink","description","pinterestText","media","pinterestShareUrl","Share","shareOptions","getDefaultShareOptions","setLgShareMarkup","getShareListHtml","onAfterSlide","shareHtml","shareOption","dropdownHTML","generateLink","getShareListItemHTML","type","rotateSettings","rotate","rotateSpeed","rotateLeft","rotateRight","flipHorizontal","flipVertical","rotatePluginStrings","Rotate","rotateIcons","rotateValuesList","applyStyles","triggerEvents","getCurrentRotation","st","tm","getPropertyValue","values","angle","atan2","PI","rotateEl","currentRotation","rotateAxis","isImageOrientationChanged","rotateValue","isRotated","ifFlippedHor","ifFlippedVer"],"mappings":"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","file":"static/js/4.1bd19497.chunk.js","sourcesContent":["/*!\n * lightgallery | 2.8.3 | March 1st 2025\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n    autoplay: 'lgAutoplay',\r\n    autoplayStart: 'lgAutoplayStart',\r\n    autoplayStop: 'lgAutoplayStop',\r\n};\n\nvar lightGalleryCoreSettings = {\r\n    mode: 'lg-slide',\r\n    easing: 'ease',\r\n    speed: 400,\r\n    licenseKey: '0000-0000-000-0000',\r\n    height: '100%',\r\n    width: '100%',\r\n    addClass: '',\r\n    startClass: 'lg-start-zoom',\r\n    backdropDuration: 300,\r\n    container: '',\r\n    startAnimationDuration: 400,\r\n    zoomFromOrigin: true,\r\n    hideBarsDelay: 0,\r\n    showBarsAfter: 10000,\r\n    slideDelay: 0,\r\n    supportLegacyBrowser: true,\r\n    allowMediaOverlap: false,\r\n    videoMaxSize: '1280-720',\r\n    loadYouTubePoster: true,\r\n    defaultCaptionHeight: 0,\r\n    ariaLabelledby: '',\r\n    ariaDescribedby: '',\r\n    resetScrollPosition: true,\r\n    hideScrollbar: false,\r\n    closable: true,\r\n    swipeToClose: true,\r\n    closeOnTap: true,\r\n    showCloseIcon: true,\r\n    showMaximizeIcon: false,\r\n    loop: true,\r\n    escKey: true,\r\n    keyPress: true,\r\n    trapFocus: true,\r\n    controls: true,\r\n    slideEndAnimation: true,\r\n    hideControlOnEnd: false,\r\n    mousewheel: false,\r\n    getCaptionFromTitleOrAlt: true,\r\n    appendSubHtmlTo: '.lg-sub-html',\r\n    subHtmlSelectorRelative: false,\r\n    preload: 2,\r\n    numberOfSlideItemsInDom: 10,\r\n    selector: '',\r\n    selectWithin: '',\r\n    nextHtml: '',\r\n    prevHtml: '',\r\n    index: 0,\r\n    iframeWidth: '100%',\r\n    iframeHeight: '100%',\r\n    iframeMaxWidth: '100%',\r\n    iframeMaxHeight: '100%',\r\n    download: true,\r\n    counter: true,\r\n    appendCounterTo: '.lg-toolbar',\r\n    swipeThreshold: 50,\r\n    enableSwipe: true,\r\n    enableDrag: true,\r\n    dynamic: false,\r\n    dynamicEl: [],\r\n    extraProps: [],\r\n    exThumbImage: '',\r\n    isMobile: undefined,\r\n    mobileSettings: {\r\n        controls: false,\r\n        showCloseIcon: false,\r\n        download: false,\r\n    },\r\n    plugins: [],\r\n    strings: {\r\n        closeGallery: 'Close gallery',\r\n        toggleMaximize: 'Toggle maximize',\r\n        previousSlide: 'Previous slide',\r\n        nextSlide: 'Next slide',\r\n        download: 'Download',\r\n        playVideo: 'Play video',\r\n        mediaLoadingFailed: 'Oops... Failed to load content...',\r\n    },\r\n};\n\nfunction initLgPolyfills() {\r\n    (function () {\r\n        if (typeof window.CustomEvent === 'function')\r\n            return false;\r\n        function CustomEvent(event, params) {\r\n            params = params || {\r\n                bubbles: false,\r\n                cancelable: false,\r\n                detail: null,\r\n            };\r\n            var evt = document.createEvent('CustomEvent');\r\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n            return evt;\r\n        }\r\n        window.CustomEvent = CustomEvent;\r\n    })();\r\n    (function () {\r\n        if (!Element.prototype.matches) {\r\n            Element.prototype.matches =\r\n                Element.prototype.msMatchesSelector ||\r\n                    Element.prototype.webkitMatchesSelector;\r\n        }\r\n    })();\r\n}\r\nvar lgQuery = /** @class */ (function () {\r\n    function lgQuery(selector) {\r\n        this.cssVenderPrefixes = [\r\n            'TransitionDuration',\r\n            'TransitionTimingFunction',\r\n            'Transform',\r\n            'Transition',\r\n        ];\r\n        this.selector = this._getSelector(selector);\r\n        this.firstElement = this._getFirstEl();\r\n        return this;\r\n    }\r\n    lgQuery.generateUUID = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    lgQuery.prototype._getSelector = function (selector, context) {\r\n        if (context === void 0) { context = document; }\r\n        if (typeof selector !== 'string') {\r\n            return selector;\r\n        }\r\n        context = context || document;\r\n        var fl = selector.substring(0, 1);\r\n        if (fl === '#') {\r\n            return context.querySelector(selector);\r\n        }\r\n        else {\r\n            return context.querySelectorAll(selector);\r\n        }\r\n    };\r\n    lgQuery.prototype._each = function (func) {\r\n        if (!this.selector) {\r\n            return this;\r\n        }\r\n        if (this.selector.length !== undefined) {\r\n            [].forEach.call(this.selector, func);\r\n        }\r\n        else {\r\n            func(this.selector, 0);\r\n        }\r\n        return this;\r\n    };\r\n    lgQuery.prototype._setCssVendorPrefix = function (el, cssProperty, value) {\r\n        // prettier-ignore\r\n        var property = cssProperty.replace(/-([a-z])/gi, function (s, group1) {\r\n            return group1.toUpperCase();\r\n        });\r\n        if (this.cssVenderPrefixes.indexOf(property) !== -1) {\r\n            el.style[property.charAt(0).toLowerCase() + property.slice(1)] = value;\r\n            el.style['webkit' + property] = value;\r\n            el.style['moz' + property] = value;\r\n            el.style['ms' + property] = value;\r\n            el.style['o' + property] = value;\r\n        }\r\n        else {\r\n            el.style[property] = value;\r\n        }\r\n    };\r\n    lgQuery.prototype._getFirstEl = function () {\r\n        if (this.selector && this.selector.length !== undefined) {\r\n            return this.selector[0];\r\n        }\r\n        else {\r\n            return this.selector;\r\n        }\r\n    };\r\n    lgQuery.prototype.isEventMatched = function (event, eventName) {\r\n        var eventNamespace = eventName.split('.');\r\n        return event\r\n            .split('.')\r\n            .filter(function (e) { return e; })\r\n            .every(function (e) {\r\n            return eventNamespace.indexOf(e) !== -1;\r\n        });\r\n    };\r\n    lgQuery.prototype.attr = function (attr, value) {\r\n        if (value === undefined) {\r\n            if (!this.firstElement) {\r\n                return '';\r\n            }\r\n            return this.firstElement.getAttribute(attr);\r\n        }\r\n        this._each(function (el) {\r\n            el.setAttribute(attr, value);\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.find = function (selector) {\r\n        return $LG(this._getSelector(selector, this.selector));\r\n    };\r\n    lgQuery.prototype.first = function () {\r\n        if (this.selector && this.selector.length !== undefined) {\r\n            return $LG(this.selector[0]);\r\n        }\r\n        else {\r\n            return $LG(this.selector);\r\n        }\r\n    };\r\n    lgQuery.prototype.eq = function (index) {\r\n        return $LG(this.selector[index]);\r\n    };\r\n    lgQuery.prototype.parent = function () {\r\n        return $LG(this.selector.parentElement);\r\n    };\r\n    lgQuery.prototype.get = function () {\r\n        return this._getFirstEl();\r\n    };\r\n    lgQuery.prototype.removeAttr = function (attributes) {\r\n        var attrs = attributes.split(' ');\r\n        this._each(function (el) {\r\n            attrs.forEach(function (attr) { return el.removeAttribute(attr); });\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.wrap = function (className) {\r\n        if (!this.firstElement) {\r\n            return this;\r\n        }\r\n        var wrapper = document.createElement('div');\r\n        wrapper.className = className;\r\n        this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\r\n        this.firstElement.parentNode.removeChild(this.firstElement);\r\n        wrapper.appendChild(this.firstElement);\r\n        return this;\r\n    };\r\n    lgQuery.prototype.addClass = function (classNames) {\r\n        if (classNames === void 0) { classNames = ''; }\r\n        this._each(function (el) {\r\n            // IE doesn't support multiple arguments\r\n            classNames.split(' ').forEach(function (className) {\r\n                if (className) {\r\n                    el.classList.add(className);\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.removeClass = function (classNames) {\r\n        this._each(function (el) {\r\n            // IE doesn't support multiple arguments\r\n            classNames.split(' ').forEach(function (className) {\r\n                if (className) {\r\n                    el.classList.remove(className);\r\n                }\r\n            });\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.hasClass = function (className) {\r\n        if (!this.firstElement) {\r\n            return false;\r\n        }\r\n        return this.firstElement.classList.contains(className);\r\n    };\r\n    lgQuery.prototype.hasAttribute = function (attribute) {\r\n        if (!this.firstElement) {\r\n            return false;\r\n        }\r\n        return this.firstElement.hasAttribute(attribute);\r\n    };\r\n    lgQuery.prototype.toggleClass = function (className) {\r\n        if (!this.firstElement) {\r\n            return this;\r\n        }\r\n        if (this.hasClass(className)) {\r\n            this.removeClass(className);\r\n        }\r\n        else {\r\n            this.addClass(className);\r\n        }\r\n        return this;\r\n    };\r\n    lgQuery.prototype.css = function (property, value) {\r\n        var _this = this;\r\n        this._each(function (el) {\r\n            _this._setCssVendorPrefix(el, property, value);\r\n        });\r\n        return this;\r\n    };\r\n    // Need to pass separate namespaces for separate elements\r\n    lgQuery.prototype.on = function (events, listener) {\r\n        var _this = this;\r\n        if (!this.selector) {\r\n            return this;\r\n        }\r\n        events.split(' ').forEach(function (event) {\r\n            if (!Array.isArray(lgQuery.eventListeners[event])) {\r\n                lgQuery.eventListeners[event] = [];\r\n            }\r\n            lgQuery.eventListeners[event].push(listener);\r\n            _this.selector.addEventListener(event.split('.')[0], listener);\r\n        });\r\n        return this;\r\n    };\r\n    // @todo - test this\r\n    lgQuery.prototype.once = function (event, listener) {\r\n        var _this = this;\r\n        this.on(event, function () {\r\n            _this.off(event);\r\n            listener(event);\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.off = function (event) {\r\n        var _this = this;\r\n        if (!this.selector) {\r\n            return this;\r\n        }\r\n        Object.keys(lgQuery.eventListeners).forEach(function (eventName) {\r\n            if (_this.isEventMatched(event, eventName)) {\r\n                lgQuery.eventListeners[eventName].forEach(function (listener) {\r\n                    _this.selector.removeEventListener(eventName.split('.')[0], listener);\r\n                });\r\n                lgQuery.eventListeners[eventName] = [];\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.trigger = function (event, detail) {\r\n        if (!this.firstElement) {\r\n            return this;\r\n        }\r\n        var customEvent = new CustomEvent(event.split('.')[0], {\r\n            detail: detail || null,\r\n        });\r\n        this.firstElement.dispatchEvent(customEvent);\r\n        return this;\r\n    };\r\n    // Does not support IE\r\n    lgQuery.prototype.load = function (url) {\r\n        var _this = this;\r\n        fetch(url)\r\n            .then(function (res) { return res.text(); })\r\n            .then(function (html) {\r\n            _this.selector.innerHTML = html;\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.html = function (html) {\r\n        if (html === undefined) {\r\n            if (!this.firstElement) {\r\n                return '';\r\n            }\r\n            return this.firstElement.innerHTML;\r\n        }\r\n        this._each(function (el) {\r\n            el.innerHTML = html;\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.append = function (html) {\r\n        this._each(function (el) {\r\n            if (typeof html === 'string') {\r\n                el.insertAdjacentHTML('beforeend', html);\r\n            }\r\n            else {\r\n                el.appendChild(html);\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.prepend = function (html) {\r\n        this._each(function (el) {\r\n            if (typeof html === 'string') {\r\n                el.insertAdjacentHTML('afterbegin', html);\r\n            }\r\n            else if (html instanceof HTMLElement) {\r\n                el.insertBefore(html.cloneNode(true), el.firstChild);\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.remove = function () {\r\n        this._each(function (el) {\r\n            el.parentNode.removeChild(el);\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.empty = function () {\r\n        this._each(function (el) {\r\n            el.innerHTML = '';\r\n        });\r\n        return this;\r\n    };\r\n    lgQuery.prototype.scrollTop = function (scrollTop) {\r\n        if (scrollTop !== undefined) {\r\n            document.body.scrollTop = scrollTop;\r\n            document.documentElement.scrollTop = scrollTop;\r\n            return this;\r\n        }\r\n        else {\r\n            return (window.pageYOffset ||\r\n                document.documentElement.scrollTop ||\r\n                document.body.scrollTop ||\r\n                0);\r\n        }\r\n    };\r\n    lgQuery.prototype.scrollLeft = function (scrollLeft) {\r\n        if (scrollLeft !== undefined) {\r\n            document.body.scrollLeft = scrollLeft;\r\n            document.documentElement.scrollLeft = scrollLeft;\r\n            return this;\r\n        }\r\n        else {\r\n            return (window.pageXOffset ||\r\n                document.documentElement.scrollLeft ||\r\n                document.body.scrollLeft ||\r\n                0);\r\n        }\r\n    };\r\n    lgQuery.prototype.offset = function () {\r\n        if (!this.firstElement) {\r\n            return {\r\n                left: 0,\r\n                top: 0,\r\n            };\r\n        }\r\n        var rect = this.firstElement.getBoundingClientRect();\r\n        var bodyMarginLeft = $LG('body').style().marginLeft;\r\n        // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\r\n        return {\r\n            left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\r\n            top: rect.top + this.scrollTop(),\r\n        };\r\n    };\r\n    lgQuery.prototype.style = function () {\r\n        if (!this.firstElement) {\r\n            return {};\r\n        }\r\n        return (this.firstElement.currentStyle ||\r\n            window.getComputedStyle(this.firstElement));\r\n    };\r\n    // Width without padding and border even if box-sizing is used.\r\n    lgQuery.prototype.width = function () {\r\n        var style = this.style();\r\n        return (this.firstElement.clientWidth -\r\n            parseFloat(style.paddingLeft) -\r\n            parseFloat(style.paddingRight));\r\n    };\r\n    // Height without padding and border even if box-sizing is used.\r\n    lgQuery.prototype.height = function () {\r\n        var style = this.style();\r\n        return (this.firstElement.clientHeight -\r\n            parseFloat(style.paddingTop) -\r\n            parseFloat(style.paddingBottom));\r\n    };\r\n    lgQuery.eventListeners = {};\r\n    return lgQuery;\r\n}());\r\nfunction $LG(selector) {\r\n    initLgPolyfills();\r\n    return new lgQuery(selector);\r\n}\n\nvar defaultDynamicOptions = [\r\n    'src',\r\n    'sources',\r\n    'subHtml',\r\n    'subHtmlUrl',\r\n    'html',\r\n    'video',\r\n    'poster',\r\n    'slideName',\r\n    'responsive',\r\n    'srcset',\r\n    'sizes',\r\n    'iframe',\r\n    'downloadUrl',\r\n    'download',\r\n    'width',\r\n    'facebookShareUrl',\r\n    'tweetText',\r\n    'iframeTitle',\r\n    'twitterShareUrl',\r\n    'pinterestShareUrl',\r\n    'pinterestText',\r\n    'fbHtml',\r\n    'disqusIdentifier',\r\n    'disqusUrl',\r\n];\r\n// Convert html data-attribute to camalcase\r\nfunction convertToData(attr) {\r\n    // FInd a way for lgsize\r\n    if (attr === 'href') {\r\n        return 'src';\r\n    }\r\n    attr = attr.replace('data-', '');\r\n    attr = attr.charAt(0).toLowerCase() + attr.slice(1);\r\n    attr = attr.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\r\n    return attr;\r\n}\r\nvar utils = {\r\n    /**\r\n     * Fetches HTML content from a given URL and inserts it into a specified element.\r\n     *\r\n     * @param url - The URL to fetch the HTML content from.\r\n     * @param element - The DOM element (jQuery object) to insert the HTML content into.\r\n     * @param insertMethod - The method to insert the HTML ('append' or 'replace').\r\n     */\r\n    fetchCaptionFromUrl: function (url, element, insertMethod) {\r\n        // Fetch content from the URL\r\n        fetch(url)\r\n            .then(function (response) { return response.text(); })\r\n            .then(function (htmlContent) {\r\n            if (insertMethod === 'append') {\r\n                var contentDiv = \"<div class=\\\"lg-sub-html\\\">\" + htmlContent + \"</div>\";\r\n                element.append(contentDiv);\r\n            }\r\n            else {\r\n                element.html(htmlContent);\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\r\n     */\r\n    getSize: function (el, container, spacing, defaultLgSize) {\r\n        if (spacing === void 0) { spacing = 0; }\r\n        var LGel = $LG(el);\r\n        var lgSize = LGel.attr('data-lg-size') || defaultLgSize;\r\n        if (!lgSize) {\r\n            return;\r\n        }\r\n        var isResponsiveSizes = lgSize.split(',');\r\n        // if at-least two viewport sizes are available\r\n        if (isResponsiveSizes[1]) {\r\n            var wWidth = window.innerWidth;\r\n            for (var i = 0; i < isResponsiveSizes.length; i++) {\r\n                var size_1 = isResponsiveSizes[i];\r\n                var responsiveWidth = parseInt(size_1.split('-')[2], 10);\r\n                if (responsiveWidth > wWidth) {\r\n                    lgSize = size_1;\r\n                    break;\r\n                }\r\n                // take last item as last option\r\n                if (i === isResponsiveSizes.length - 1) {\r\n                    lgSize = size_1;\r\n                }\r\n            }\r\n        }\r\n        var size = lgSize.split('-');\r\n        var width = parseInt(size[0], 10);\r\n        var height = parseInt(size[1], 10);\r\n        var cWidth = container.width();\r\n        var cHeight = container.height() - spacing;\r\n        var maxWidth = Math.min(cWidth, width);\r\n        var maxHeight = Math.min(cHeight, height);\r\n        var ratio = Math.min(maxWidth / width, maxHeight / height);\r\n        return { width: width * ratio, height: height * ratio };\r\n    },\r\n    /**\r\n     * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\r\n     * @param {jQuery Element}\r\n     * @returns {String} Transform CSS string\r\n     */\r\n    getTransform: function (el, container, top, bottom, imageSize) {\r\n        if (!imageSize) {\r\n            return;\r\n        }\r\n        var LGel = $LG(el).find('img').first();\r\n        if (!LGel.get()) {\r\n            return;\r\n        }\r\n        var containerRect = container.get().getBoundingClientRect();\r\n        var wWidth = containerRect.width;\r\n        // using innerWidth to include mobile safari bottom bar\r\n        var wHeight = container.height() - (top + bottom);\r\n        var elWidth = LGel.width();\r\n        var elHeight = LGel.height();\r\n        var elStyle = LGel.style();\r\n        var x = (wWidth - elWidth) / 2 -\r\n            LGel.offset().left +\r\n            (parseFloat(elStyle.paddingLeft) || 0) +\r\n            (parseFloat(elStyle.borderLeft) || 0) +\r\n            $LG(window).scrollLeft() +\r\n            containerRect.left;\r\n        var y = (wHeight - elHeight) / 2 -\r\n            LGel.offset().top +\r\n            (parseFloat(elStyle.paddingTop) || 0) +\r\n            (parseFloat(elStyle.borderTop) || 0) +\r\n            $LG(window).scrollTop() +\r\n            top;\r\n        var scX = elWidth / imageSize.width;\r\n        var scY = elHeight / imageSize.height;\r\n        var transform = 'translate3d(' +\r\n            (x *= -1) +\r\n            'px, ' +\r\n            (y *= -1) +\r\n            'px, 0) scale3d(' +\r\n            scX +\r\n            ', ' +\r\n            scY +\r\n            ', 1)';\r\n        return transform;\r\n    },\r\n    getIframeMarkup: function (iframeWidth, iframeHeight, iframeMaxWidth, iframeMaxHeight, src, iframeTitle) {\r\n        var title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : '';\r\n        return \"<div class=\\\"lg-media-cont lg-has-iframe\\\" style=\\\"width:\" + iframeWidth + \"; max-width:\" + iframeMaxWidth + \"; height: \" + iframeHeight + \"; max-height:\" + iframeMaxHeight + \"\\\">\\n                    <iframe class=\\\"lg-object\\\" frameborder=\\\"0\\\" \" + title + \" src=\\\"\" + src + \"\\\"  allowfullscreen=\\\"true\\\"></iframe>\\n                </div>\";\r\n    },\r\n    getImgMarkup: function (index, src, altAttr, srcset, sizes, sources) {\r\n        var srcsetAttr = srcset ? \"srcset=\\\"\" + srcset + \"\\\"\" : '';\r\n        var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\"\" : '';\r\n        var imgMarkup = \"<img \" + altAttr + \" \" + srcsetAttr + \"  \" + sizesAttr + \" class=\\\"lg-object lg-image\\\" data-index=\\\"\" + index + \"\\\" src=\\\"\" + src + \"\\\" />\";\r\n        var sourceTag = '';\r\n        if (sources) {\r\n            var sourceObj = typeof sources === 'string' ? JSON.parse(sources) : sources;\r\n            sourceTag = sourceObj.map(function (source) {\r\n                var attrs = '';\r\n                Object.keys(source).forEach(function (key) {\r\n                    // Do not remove the first space as it is required to separate the attributes\r\n                    attrs += \" \" + key + \"=\\\"\" + source[key] + \"\\\"\";\r\n                });\r\n                return \"<source \" + attrs + \"></source>\";\r\n            });\r\n        }\r\n        return \"\" + sourceTag + imgMarkup;\r\n    },\r\n    // Get src from responsive src\r\n    getResponsiveSrc: function (srcItms) {\r\n        var rsWidth = [];\r\n        var rsSrc = [];\r\n        var src = '';\r\n        for (var i = 0; i < srcItms.length; i++) {\r\n            var _src = srcItms[i].split(' ');\r\n            // Manage empty space\r\n            if (_src[0] === '') {\r\n                _src.splice(0, 1);\r\n            }\r\n            rsSrc.push(_src[0]);\r\n            rsWidth.push(_src[1]);\r\n        }\r\n        var wWidth = window.innerWidth;\r\n        for (var j = 0; j < rsWidth.length; j++) {\r\n            if (parseInt(rsWidth[j], 10) > wWidth) {\r\n                src = rsSrc[j];\r\n                break;\r\n            }\r\n        }\r\n        return src;\r\n    },\r\n    isImageLoaded: function (img) {\r\n        if (!img)\r\n            return false;\r\n        // During the onload event, IE correctly identifies any images that\r\n        // weren’t downloaded as not complete. Others should too. Gecko-based\r\n        // browsers act like NS4 in that they report this incorrectly.\r\n        if (!img.complete) {\r\n            return false;\r\n        }\r\n        // However, they do have two very useful properties: naturalWidth and\r\n        // naturalHeight. These give the true size of the image. If it failed\r\n        // to load, either of these should be zero.\r\n        if (img.naturalWidth === 0) {\r\n            return false;\r\n        }\r\n        // No other way of checking: assume it’s ok.\r\n        return true;\r\n    },\r\n    getVideoPosterMarkup: function (_poster, dummyImg, videoContStyle, playVideoString, _isVideo) {\r\n        var videoClass = '';\r\n        if (_isVideo && _isVideo.youtube) {\r\n            videoClass = 'lg-has-youtube';\r\n        }\r\n        else if (_isVideo && _isVideo.vimeo) {\r\n            videoClass = 'lg-has-vimeo';\r\n        }\r\n        else {\r\n            videoClass = 'lg-has-html5';\r\n        }\r\n        var _dummy = dummyImg;\r\n        if (typeof dummyImg !== 'string') {\r\n            _dummy = dummyImg.outerHTML;\r\n        }\r\n        return \"<div class=\\\"lg-video-cont \" + videoClass + \"\\\" style=\\\"\" + videoContStyle + \"\\\">\\n                <div class=\\\"lg-video-play-button\\\">\\n                <svg\\n                    viewBox=\\\"0 0 20 20\\\"\\n                    preserveAspectRatio=\\\"xMidYMid\\\"\\n                    focusable=\\\"false\\\"\\n                    aria-labelledby=\\\"\" + playVideoString + \"\\\"\\n                    role=\\\"img\\\"\\n                    class=\\\"lg-video-play-icon\\\"\\n                >\\n                    <title>\" + playVideoString + \"</title>\\n                    <polygon class=\\\"lg-video-play-icon-inner\\\" points=\\\"1,0 20,10 1,20\\\"></polygon>\\n                </svg>\\n                <svg class=\\\"lg-video-play-icon-bg\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle></svg>\\n                <svg class=\\\"lg-video-play-icon-circle\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle>\\n                </svg>\\n            </div>\\n            \" + _dummy + \"\\n            <img class=\\\"lg-object lg-video-poster\\\" src=\\\"\" + _poster + \"\\\" />\\n        </div>\";\r\n    },\r\n    getFocusableElements: function (container) {\r\n        var elements = container.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])');\r\n        var visibleElements = [].filter.call(elements, function (element) {\r\n            var style = window.getComputedStyle(element);\r\n            return style.display !== 'none' && style.visibility !== 'hidden';\r\n        });\r\n        return visibleElements;\r\n    },\r\n    /**\r\n     * @desc Create dynamic elements array from gallery items when dynamic option is false\r\n     * It helps to avoid frequent DOM interaction\r\n     * and avoid multiple checks for dynamic elments\r\n     *\r\n     * @returns {Array} dynamicEl\r\n     */\r\n    getDynamicOptions: function (items, extraProps, getCaptionFromTitleOrAlt, exThumbImage) {\r\n        var dynamicElements = [];\r\n        var availableDynamicOptions = __spreadArrays(defaultDynamicOptions, extraProps);\r\n        [].forEach.call(items, function (item) {\r\n            var dynamicEl = {};\r\n            for (var i = 0; i < item.attributes.length; i++) {\r\n                var attr = item.attributes[i];\r\n                if (attr.specified) {\r\n                    var dynamicAttr = convertToData(attr.name);\r\n                    var label = '';\r\n                    if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {\r\n                        label = dynamicAttr;\r\n                    }\r\n                    if (label) {\r\n                        dynamicEl[label] = attr.value;\r\n                    }\r\n                }\r\n            }\r\n            var currentItem = $LG(item);\r\n            var alt = currentItem.find('img').first().attr('alt');\r\n            var title = currentItem.attr('title');\r\n            var thumb = exThumbImage\r\n                ? currentItem.attr(exThumbImage)\r\n                : currentItem.find('img').first().attr('src');\r\n            dynamicEl.thumb = thumb;\r\n            if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {\r\n                dynamicEl.subHtml = title || alt || '';\r\n            }\r\n            dynamicEl.alt = alt || title || '';\r\n            dynamicElements.push(dynamicEl);\r\n        });\r\n        return dynamicElements;\r\n    },\r\n    isMobile: function () {\r\n        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n    },\r\n    /**\r\n     * @desc Check the given src is video\r\n     * @param {String} src\r\n     * @return {Object} video type\r\n     * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\r\n     *\r\n     * @todo - this information can be moved to dynamicEl to avoid frequent calls\r\n     */\r\n    isVideo: function (src, isHTML5VIdeo, index) {\r\n        if (!src) {\r\n            if (isHTML5VIdeo) {\r\n                return {\r\n                    html5: true,\r\n                };\r\n            }\r\n            else {\r\n                console.error('lightGallery :- data-src is not provided on slide item ' +\r\n                    (index + 1) +\r\n                    '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/');\r\n                return;\r\n            }\r\n        }\r\n        var youtube = src.match(/\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)([\\&|?][\\S]*)*/i);\r\n        var vimeo = src.match(/\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)(.*)?/i);\r\n        var wistia = src.match(/https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/);\r\n        if (youtube) {\r\n            return {\r\n                youtube: youtube,\r\n            };\r\n        }\r\n        else if (vimeo) {\r\n            return {\r\n                vimeo: vimeo,\r\n            };\r\n        }\r\n        else if (wistia) {\r\n            return {\r\n                wistia: wistia,\r\n            };\r\n        }\r\n    },\r\n};\n\n// @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\r\n// @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\r\n// Unique id for each gallery\r\nvar lgId = 0;\r\nvar LightGallery = /** @class */ (function () {\r\n    function LightGallery(element, options) {\r\n        this.lgOpened = false;\r\n        this.index = 0;\r\n        // lightGallery modules\r\n        this.plugins = [];\r\n        // false when lightGallery load first slide content;\r\n        this.lGalleryOn = false;\r\n        // True when a slide animation is in progress\r\n        this.lgBusy = false;\r\n        this.currentItemsInDom = [];\r\n        // Scroll top value before lightGallery is opened\r\n        this.prevScrollTop = 0;\r\n        this.bodyPaddingRight = 0;\r\n        this.isDummyImageRemoved = false;\r\n        this.dragOrSwipeEnabled = false;\r\n        this.mediaContainerPosition = {\r\n            top: 0,\r\n            bottom: 0,\r\n        };\r\n        if (!element) {\r\n            return this;\r\n        }\r\n        lgId++;\r\n        this.lgId = lgId;\r\n        this.el = element;\r\n        this.LGel = $LG(element);\r\n        this.generateSettings(options);\r\n        this.buildModules();\r\n        // When using dynamic mode, ensure dynamicEl is an array\r\n        if (this.settings.dynamic &&\r\n            this.settings.dynamicEl !== undefined &&\r\n            !Array.isArray(this.settings.dynamicEl)) {\r\n            throw 'When using dynamic mode, you must also define dynamicEl as an Array.';\r\n        }\r\n        this.galleryItems = this.getItems();\r\n        this.normalizeSettings();\r\n        // Gallery items\r\n        this.init();\r\n        this.validateLicense();\r\n        return this;\r\n    }\r\n    LightGallery.prototype.generateSettings = function (options) {\r\n        // lightGallery settings\r\n        this.settings = __assign(__assign({}, lightGalleryCoreSettings), options);\r\n        if (this.settings.isMobile &&\r\n            typeof this.settings.isMobile === 'function'\r\n            ? this.settings.isMobile()\r\n            : utils.isMobile()) {\r\n            var mobileSettings = __assign(__assign({}, this.settings.mobileSettings), this.settings.mobileSettings);\r\n            this.settings = __assign(__assign({}, this.settings), mobileSettings);\r\n        }\r\n    };\r\n    LightGallery.prototype.normalizeSettings = function () {\r\n        if (this.settings.slideEndAnimation) {\r\n            this.settings.hideControlOnEnd = false;\r\n        }\r\n        if (!this.settings.closable) {\r\n            this.settings.swipeToClose = false;\r\n        }\r\n        // And reset it on close to get the correct value next time\r\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n        // At the moment, Zoom from image doesn't support dynamic options\r\n        // @todo add zoomFromOrigin support for dynamic images\r\n        if (this.settings.dynamic) {\r\n            this.zoomFromOrigin = false;\r\n        }\r\n        if (this.settings.container) {\r\n            var container = this.settings.container;\r\n            if (typeof container === 'function') {\r\n                this.settings.container = container();\r\n            }\r\n            else if (typeof container === 'string') {\r\n                var el = document.querySelector(container);\r\n                this.settings.container = el !== null && el !== void 0 ? el : document.body;\r\n            }\r\n        }\r\n        else {\r\n            this.settings.container = document.body;\r\n        }\r\n        // settings.preload should not be grater than $item.length\r\n        this.settings.preload = Math.min(this.settings.preload, this.galleryItems.length);\r\n    };\r\n    LightGallery.prototype.init = function () {\r\n        var _this = this;\r\n        this.addSlideVideoInfo(this.galleryItems);\r\n        this.buildStructure();\r\n        this.LGel.trigger(lGEvents.init, {\r\n            instance: this,\r\n        });\r\n        if (this.settings.keyPress) {\r\n            this.keyPress();\r\n        }\r\n        setTimeout(function () {\r\n            _this.enableDrag();\r\n            _this.enableSwipe();\r\n            _this.triggerPosterClick();\r\n        }, 50);\r\n        this.arrow();\r\n        if (this.settings.mousewheel) {\r\n            this.mousewheel();\r\n        }\r\n        if (!this.settings.dynamic) {\r\n            this.openGalleryOnItemClick();\r\n        }\r\n    };\r\n    LightGallery.prototype.openGalleryOnItemClick = function () {\r\n        var _this = this;\r\n        var _loop_1 = function (index) {\r\n            var element = this_1.items[index];\r\n            var $element = $LG(element);\r\n            // Using different namespace for click because click event should not unbind if selector is same object('this')\r\n            // @todo manage all event listners - should have namespace that represent element\r\n            var uuid = lgQuery.generateUUID();\r\n            $element\r\n                .attr('data-lg-id', uuid)\r\n                .on(\"click.lgcustom-item-\" + uuid, function (e) {\r\n                e.preventDefault();\r\n                var currentItemIndex = _this.settings.index || index;\r\n                _this.openGallery(currentItemIndex, element);\r\n            });\r\n        };\r\n        var this_1 = this;\r\n        // Using for loop instead of using bubbling as the items can be any html element.\r\n        for (var index = 0; index < this.items.length; index++) {\r\n            _loop_1(index);\r\n        }\r\n    };\r\n    /**\r\n     * Module constructor\r\n     * Modules are build incrementally.\r\n     * Gallery should be opened only once all the modules are initialized.\r\n     * use moduleBuildTimeout to make sure this\r\n     */\r\n    LightGallery.prototype.buildModules = function () {\r\n        var _this = this;\r\n        this.settings.plugins.forEach(function (plugin) {\r\n            _this.plugins.push(new plugin(_this, $LG));\r\n        });\r\n    };\r\n    LightGallery.prototype.validateLicense = function () {\r\n        if (!this.settings.licenseKey) {\r\n            console.error('Please provide a valid license key');\r\n        }\r\n        else if (this.settings.licenseKey === '0000-0000-000-0000') {\r\n            console.warn(\"lightGallery: \" + this.settings.licenseKey + \" license key is not valid for production use\");\r\n        }\r\n    };\r\n    LightGallery.prototype.getSlideItem = function (index) {\r\n        return $LG(this.getSlideItemId(index));\r\n    };\r\n    LightGallery.prototype.getSlideItemId = function (index) {\r\n        return \"#lg-item-\" + this.lgId + \"-\" + index;\r\n    };\r\n    LightGallery.prototype.getIdName = function (id) {\r\n        return id + \"-\" + this.lgId;\r\n    };\r\n    LightGallery.prototype.getElementById = function (id) {\r\n        return $LG(\"#\" + this.getIdName(id));\r\n    };\r\n    LightGallery.prototype.manageSingleSlideClassName = function () {\r\n        if (this.galleryItems.length < 2) {\r\n            this.outer.addClass('lg-single-item');\r\n        }\r\n        else {\r\n            this.outer.removeClass('lg-single-item');\r\n        }\r\n    };\r\n    LightGallery.prototype.buildStructure = function () {\r\n        var _this = this;\r\n        var container = this.$container && this.$container.get();\r\n        if (container) {\r\n            return;\r\n        }\r\n        var controls = '';\r\n        var subHtmlCont = '';\r\n        // Create controls\r\n        if (this.settings.controls) {\r\n            controls = \"<button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-prev') + \"\\\" aria-label=\\\"\" + this.settings.strings['previousSlide'] + \"\\\" class=\\\"lg-prev lg-icon\\\"> \" + this.settings.prevHtml + \" </button>\\n                <button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-next') + \"\\\" aria-label=\\\"\" + this.settings.strings['nextSlide'] + \"\\\" class=\\\"lg-next lg-icon\\\"> \" + this.settings.nextHtml + \" </button>\";\r\n        }\r\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\r\n            subHtmlCont =\r\n                '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\r\n        }\r\n        var addClasses = '';\r\n        if (this.settings.allowMediaOverlap) {\r\n            // Do not remove space before last single quote\r\n            addClasses += 'lg-media-overlap ';\r\n        }\r\n        var ariaLabelledby = this.settings.ariaLabelledby\r\n            ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"'\r\n            : '';\r\n        var ariaDescribedby = this.settings.ariaDescribedby\r\n            ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"'\r\n            : '';\r\n        var containerClassName = \"lg-container \" + this.settings.addClass + \" \" + (document.body !== this.settings.container ? 'lg-inline' : '');\r\n        var closeIcon = this.settings.closable && this.settings.showCloseIcon\r\n            ? \"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.strings['closeGallery'] + \"\\\" id=\\\"\" + this.getIdName('lg-close') + \"\\\" class=\\\"lg-close lg-icon\\\"></button>\"\r\n            : '';\r\n        var maximizeIcon = this.settings.showMaximizeIcon\r\n            ? \"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.strings['toggleMaximize'] + \"\\\" id=\\\"\" + this.getIdName('lg-maximize') + \"\\\" class=\\\"lg-maximize lg-icon\\\"></button>\"\r\n            : '';\r\n        var template = \"\\n        <div class=\\\"\" + containerClassName + \"\\\" id=\\\"\" + this.getIdName('lg-container') + \"\\\" tabindex=\\\"-1\\\" aria-modal=\\\"true\\\" \" + ariaLabelledby + \" \" + ariaDescribedby + \" role=\\\"dialog\\\"\\n        >\\n            <div id=\\\"\" + this.getIdName('lg-backdrop') + \"\\\" class=\\\"lg-backdrop\\\"></div>\\n\\n            <div id=\\\"\" + this.getIdName('lg-outer') + \"\\\" class=\\\"lg-outer lg-use-css3 lg-css3 lg-hide-items \" + addClasses + \" \\\">\\n\\n              <div id=\\\"\" + this.getIdName('lg-content') + \"\\\" class=\\\"lg-content\\\">\\n                <div id=\\\"\" + this.getIdName('lg-inner') + \"\\\" class=\\\"lg-inner\\\">\\n                </div>\\n                \" + controls + \"\\n              </div>\\n                <div id=\\\"\" + this.getIdName('lg-toolbar') + \"\\\" class=\\\"lg-toolbar lg-group\\\">\\n                    \" + maximizeIcon + \"\\n                    \" + closeIcon + \"\\n                    </div>\\n                    \" + (this.settings.appendSubHtmlTo === '.lg-outer'\r\n            ? subHtmlCont\r\n            : '') + \"\\n                <div id=\\\"\" + this.getIdName('lg-components') + \"\\\" class=\\\"lg-components\\\">\\n                    \" + (this.settings.appendSubHtmlTo === '.lg-sub-html'\r\n            ? subHtmlCont\r\n            : '') + \"\\n                </div>\\n            </div>\\n        </div>\\n        \";\r\n        $LG(this.settings.container).append(template);\r\n        if (document.body !== this.settings.container) {\r\n            $LG(this.settings.container).css('position', 'relative');\r\n        }\r\n        this.outer = this.getElementById('lg-outer');\r\n        this.$lgComponents = this.getElementById('lg-components');\r\n        this.$backdrop = this.getElementById('lg-backdrop');\r\n        this.$container = this.getElementById('lg-container');\r\n        this.$inner = this.getElementById('lg-inner');\r\n        this.$content = this.getElementById('lg-content');\r\n        this.$toolbar = this.getElementById('lg-toolbar');\r\n        this.$backdrop.css('transition-duration', this.settings.backdropDuration + 'ms');\r\n        var outerClassNames = this.settings.mode + \" \";\r\n        this.manageSingleSlideClassName();\r\n        if (this.settings.enableDrag) {\r\n            outerClassNames += 'lg-grab ';\r\n        }\r\n        this.outer.addClass(outerClassNames);\r\n        this.$inner.css('transition-timing-function', this.settings.easing);\r\n        this.$inner.css('transition-duration', this.settings.speed + 'ms');\r\n        if (this.settings.download) {\r\n            this.$toolbar.append(\"<a id=\\\"\" + this.getIdName('lg-download') + \"\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" aria-label=\\\"\" + this.settings.strings['download'] + \"\\\" download class=\\\"lg-download lg-icon\\\"></a>\");\r\n        }\r\n        this.counter();\r\n        $LG(window).on(\"resize.lg.global\" + this.lgId + \" orientationchange.lg.global\" + this.lgId, function () {\r\n            _this.refreshOnResize();\r\n        });\r\n        this.hideBars();\r\n        this.manageCloseGallery();\r\n        this.toggleMaximize();\r\n        this.initModules();\r\n    };\r\n    LightGallery.prototype.refreshOnResize = function () {\r\n        if (this.lgOpened) {\r\n            var currentGalleryItem = this.galleryItems[this.index];\r\n            var __slideVideoInfo = currentGalleryItem.__slideVideoInfo;\r\n            this.mediaContainerPosition = this.getMediaContainerPosition();\r\n            var _a = this.mediaContainerPosition, top_1 = _a.top, bottom = _a.bottom;\r\n            this.currentImageSize = utils.getSize(this.items[this.index], this.outer, top_1 + bottom, __slideVideoInfo && this.settings.videoMaxSize);\r\n            if (__slideVideoInfo) {\r\n                this.resizeVideoSlide(this.index, this.currentImageSize);\r\n            }\r\n            if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\r\n                var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n                this.outer\r\n                    .find('.lg-current .lg-dummy-img')\r\n                    .first()\r\n                    .attr('style', imgStyle);\r\n            }\r\n            this.LGel.trigger(lGEvents.containerResize);\r\n        }\r\n    };\r\n    LightGallery.prototype.resizeVideoSlide = function (index, imageSize) {\r\n        var lgVideoStyle = this.getVideoContStyle(imageSize);\r\n        var currentSlide = this.getSlideItem(index);\r\n        currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);\r\n    };\r\n    /**\r\n     * Update slides dynamically.\r\n     * Add, edit or delete slides dynamically when lightGallery is opened.\r\n     * Modify the current gallery items and pass it via updateSlides method\r\n     * @note\r\n     * - Do not mutate existing lightGallery items directly.\r\n     * - Always pass new list of gallery items\r\n     * - You need to take care of thumbnails outside the gallery if any\r\n     * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.\r\n     * @param items Gallery items\r\n     * @param index After the update operation, which slide gallery should navigate to\r\n     * @category lGPublicMethods\r\n     * @example\r\n     * const plugin = lightGallery();\r\n     *\r\n     * // Adding slides dynamically\r\n     * let galleryItems = [\r\n     * // Access existing lightGallery items\r\n     * // galleryItems are automatically generated internally from the gallery HTML markup\r\n     * // or directly from galleryItems when dynamic gallery is used\r\n     *   ...plugin.galleryItems,\r\n     *     ...[\r\n     *       {\r\n     *         src: 'img/img-1.png',\r\n     *           thumb: 'img/thumb1.png',\r\n     *         },\r\n     *     ],\r\n     *   ];\r\n     *   plugin.updateSlides(\r\n     *     galleryItems,\r\n     *     plugin.index,\r\n     *   );\r\n     *\r\n     *\r\n     * // Remove slides dynamically\r\n     * galleryItems = JSON.parse(\r\n     *   JSON.stringify(updateSlideInstance.galleryItems),\r\n     * );\r\n     * galleryItems.shift();\r\n     * updateSlideInstance.updateSlides(galleryItems, 1);\r\n     * @see <a href=\"/demos/update-slides/\">Demo</a>\r\n     */\r\n    LightGallery.prototype.updateSlides = function (items, index) {\r\n        if (this.index > items.length - 1) {\r\n            this.index = items.length - 1;\r\n        }\r\n        if (items.length === 1) {\r\n            this.index = 0;\r\n        }\r\n        if (!items.length) {\r\n            this.closeGallery();\r\n            return;\r\n        }\r\n        var currentSrc = this.galleryItems[index].src;\r\n        this.galleryItems = items;\r\n        this.updateControls();\r\n        this.$inner.empty();\r\n        this.currentItemsInDom = [];\r\n        var _index = 0;\r\n        // Find the current index based on source value of the slide\r\n        this.galleryItems.some(function (galleryItem, itemIndex) {\r\n            if (galleryItem.src === currentSrc) {\r\n                _index = itemIndex;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        this.currentItemsInDom = this.organizeSlideItems(_index, -1);\r\n        this.loadContent(_index, true);\r\n        this.getSlideItem(_index).addClass('lg-current');\r\n        this.index = _index;\r\n        this.updateCurrentCounter(_index);\r\n        this.LGel.trigger(lGEvents.updateSlides);\r\n    };\r\n    // Get gallery items based on multiple conditions\r\n    LightGallery.prototype.getItems = function () {\r\n        // Gallery items\r\n        this.items = [];\r\n        if (!this.settings.dynamic) {\r\n            if (this.settings.selector === 'this') {\r\n                this.items.push(this.el);\r\n            }\r\n            else if (this.settings.selector) {\r\n                if (typeof this.settings.selector === 'string') {\r\n                    if (this.settings.selectWithin) {\r\n                        var selectWithin = $LG(this.settings.selectWithin);\r\n                        this.items = selectWithin\r\n                            .find(this.settings.selector)\r\n                            .get();\r\n                    }\r\n                    else {\r\n                        this.items = this.el.querySelectorAll(this.settings.selector);\r\n                    }\r\n                }\r\n                else {\r\n                    this.items = this.settings.selector;\r\n                }\r\n            }\r\n            else {\r\n                this.items = this.el.children;\r\n            }\r\n            return utils.getDynamicOptions(this.items, this.settings.extraProps, this.settings.getCaptionFromTitleOrAlt, this.settings.exThumbImage);\r\n        }\r\n        else {\r\n            return this.settings.dynamicEl || [];\r\n        }\r\n    };\r\n    LightGallery.prototype.shouldHideScrollbar = function () {\r\n        return (this.settings.hideScrollbar &&\r\n            document.body === this.settings.container);\r\n    };\r\n    LightGallery.prototype.hideScrollbar = function () {\r\n        if (!this.shouldHideScrollbar()) {\r\n            return;\r\n        }\r\n        this.bodyPaddingRight = parseFloat($LG('body').style().paddingRight);\r\n        var bodyRect = document.documentElement.getBoundingClientRect();\r\n        var scrollbarWidth = window.innerWidth - bodyRect.width;\r\n        $LG(document.body).css('padding-right', scrollbarWidth + this.bodyPaddingRight + 'px');\r\n        $LG(document.body).addClass('lg-overlay-open');\r\n    };\r\n    LightGallery.prototype.resetScrollBar = function () {\r\n        if (!this.shouldHideScrollbar()) {\r\n            return;\r\n        }\r\n        $LG(document.body).css('padding-right', this.bodyPaddingRight + 'px');\r\n        $LG(document.body).removeClass('lg-overlay-open');\r\n    };\r\n    /**\r\n     * Open lightGallery.\r\n     * Open gallery with specific slide by passing index of the slide as parameter.\r\n     * @category lGPublicMethods\r\n     * @param {Number} index  - index of the slide\r\n     * @param {HTMLElement} element - Which image lightGallery should zoom from\r\n     *\r\n     * @example\r\n     * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\r\n     * const dynamicGallery = lightGallery($dynamicGallery, {\r\n     *     dynamic: true,\r\n     *     dynamicEl: [\r\n     *         {\r\n     *              src: 'img/1.jpg',\r\n     *              thumb: 'img/thumb-1.jpg',\r\n     *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\r\n     *         },\r\n     *         ...\r\n     *     ],\r\n     * });\r\n     * $dynamicGallery.addEventListener('click', function () {\r\n     *     // Starts with third item.(Optional).\r\n     *     // This is useful if you want use dynamic mode with\r\n     *     // custom thumbnails (thumbnails outside gallery),\r\n     *     dynamicGallery.openGallery(2);\r\n     * });\r\n     *\r\n     */\r\n    LightGallery.prototype.openGallery = function (index, element) {\r\n        var _this = this;\r\n        if (index === void 0) { index = this.settings.index; }\r\n        // prevent accidental double execution\r\n        if (this.lgOpened)\r\n            return;\r\n        this.lgOpened = true;\r\n        this.outer.removeClass('lg-hide-items');\r\n        this.hideScrollbar();\r\n        // Add display block, but still has opacity 0\r\n        this.$container.addClass('lg-show');\r\n        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, index);\r\n        this.currentItemsInDom = itemsToBeInsertedToDom;\r\n        var items = '';\r\n        itemsToBeInsertedToDom.forEach(function (item) {\r\n            items = items + (\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n        });\r\n        this.$inner.append(items);\r\n        this.addHtml(index);\r\n        var transform = '';\r\n        this.mediaContainerPosition = this.getMediaContainerPosition();\r\n        var _a = this.mediaContainerPosition, top = _a.top, bottom = _a.bottom;\r\n        if (!this.settings.allowMediaOverlap) {\r\n            this.setMediaContainerPosition(top, bottom);\r\n        }\r\n        var __slideVideoInfo = this.galleryItems[index].__slideVideoInfo;\r\n        if (this.zoomFromOrigin && element) {\r\n            this.currentImageSize = utils.getSize(element, this.outer, top + bottom, __slideVideoInfo && this.settings.videoMaxSize);\r\n            transform = utils.getTransform(element, this.outer, top, bottom, this.currentImageSize);\r\n        }\r\n        if (!this.zoomFromOrigin || !transform) {\r\n            this.outer.addClass(this.settings.startClass);\r\n            this.getSlideItem(index).removeClass('lg-complete');\r\n        }\r\n        var timeout = this.settings.zoomFromOrigin\r\n            ? 100\r\n            : this.settings.backdropDuration;\r\n        setTimeout(function () {\r\n            _this.outer.addClass('lg-components-open');\r\n        }, timeout);\r\n        this.index = index;\r\n        this.LGel.trigger(lGEvents.beforeOpen);\r\n        // add class lg-current to remove initial transition\r\n        this.getSlideItem(index).addClass('lg-current');\r\n        this.lGalleryOn = false;\r\n        // Store the current scroll top value to scroll back after closing the gallery..\r\n        this.prevScrollTop = $LG(window).scrollTop();\r\n        setTimeout(function () {\r\n            // Need to check both zoomFromOrigin and transform values as we need to set set the\r\n            // default opening animation if user missed to add the lg-size attribute\r\n            if (_this.zoomFromOrigin && transform) {\r\n                var currentSlide_1 = _this.getSlideItem(index);\r\n                currentSlide_1.css('transform', transform);\r\n                setTimeout(function () {\r\n                    currentSlide_1\r\n                        .addClass('lg-start-progress lg-start-end-progress')\r\n                        .css('transition-duration', _this.settings.startAnimationDuration + 'ms');\r\n                    _this.outer.addClass('lg-zoom-from-image');\r\n                });\r\n                setTimeout(function () {\r\n                    currentSlide_1.css('transform', 'translate3d(0, 0, 0)');\r\n                }, 100);\r\n            }\r\n            setTimeout(function () {\r\n                _this.$backdrop.addClass('in');\r\n                _this.$container.addClass('lg-show-in');\r\n            }, 10);\r\n            setTimeout(function () {\r\n                if (_this.settings.trapFocus &&\r\n                    document.body === _this.settings.container) {\r\n                    _this.trapFocus();\r\n                }\r\n            }, _this.settings.backdropDuration + 50);\r\n            // lg-visible class resets gallery opacity to 1\r\n            if (!_this.zoomFromOrigin || !transform) {\r\n                setTimeout(function () {\r\n                    _this.outer.addClass('lg-visible');\r\n                }, _this.settings.backdropDuration);\r\n            }\r\n            // initiate slide function\r\n            _this.slide(index, false, false, false);\r\n            _this.LGel.trigger(lGEvents.afterOpen);\r\n        });\r\n        if (document.body === this.settings.container) {\r\n            $LG('html').addClass('lg-on');\r\n        }\r\n    };\r\n    /**\r\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\r\n     * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\r\n     * if you have dynamic captions for each media,\r\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\r\n     */\r\n    LightGallery.prototype.getMediaContainerPosition = function () {\r\n        if (this.settings.allowMediaOverlap) {\r\n            return {\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n        }\r\n        var top = this.$toolbar.get().clientHeight || 0;\r\n        var subHtml = this.outer.find('.lg-components .lg-sub-html').get();\r\n        var captionHeight = this.settings.defaultCaptionHeight ||\r\n            (subHtml && subHtml.clientHeight) ||\r\n            0;\r\n        var thumbContainer = this.outer.find('.lg-thumb-outer').get();\r\n        var thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\r\n        var bottom = thumbHeight + captionHeight;\r\n        return {\r\n            top: top,\r\n            bottom: bottom,\r\n        };\r\n    };\r\n    LightGallery.prototype.setMediaContainerPosition = function (top, bottom) {\r\n        if (top === void 0) { top = 0; }\r\n        if (bottom === void 0) { bottom = 0; }\r\n        this.$content.css('top', top + 'px').css('bottom', bottom + 'px');\r\n    };\r\n    LightGallery.prototype.hideBars = function () {\r\n        var _this = this;\r\n        // Hide controllers if mouse doesn't move for some period\r\n        setTimeout(function () {\r\n            _this.outer.removeClass('lg-hide-items');\r\n            if (_this.settings.hideBarsDelay > 0) {\r\n                _this.outer.on('mousemove.lg click.lg touchstart.lg', function () {\r\n                    _this.outer.removeClass('lg-hide-items');\r\n                    clearTimeout(_this.hideBarTimeout);\r\n                    // Timeout will be cleared on each slide movement also\r\n                    _this.hideBarTimeout = setTimeout(function () {\r\n                        _this.outer.addClass('lg-hide-items');\r\n                    }, _this.settings.hideBarsDelay);\r\n                });\r\n                _this.outer.trigger('mousemove.lg');\r\n            }\r\n        }, this.settings.showBarsAfter);\r\n    };\r\n    LightGallery.prototype.initPictureFill = function ($img) {\r\n        if (this.settings.supportLegacyBrowser) {\r\n            try {\r\n                picturefill({\r\n                    elements: [$img.get()],\r\n                });\r\n            }\r\n            catch (e) {\r\n                console.warn('lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  @desc Create image counter\r\n     *  Ex: 1/10\r\n     */\r\n    LightGallery.prototype.counter = function () {\r\n        if (this.settings.counter) {\r\n            var counterHtml = \"<div class=\\\"lg-counter\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">\\n                <span id=\\\"\" + this.getIdName('lg-counter-current') + \"\\\" class=\\\"lg-counter-current\\\">\" + (this.index + 1) + \" </span> /\\n                <span id=\\\"\" + this.getIdName('lg-counter-all') + \"\\\" class=\\\"lg-counter-all\\\">\" + this.galleryItems.length + \" </span></div>\";\r\n            this.outer.find(this.settings.appendCounterTo).append(counterHtml);\r\n        }\r\n    };\r\n    /**\r\n     *  @desc add sub-html into the slide\r\n     *  @param {Number} index - index of the slide\r\n     */\r\n    LightGallery.prototype.addHtml = function (index) {\r\n        var subHtml;\r\n        var subHtmlUrl;\r\n        if (this.galleryItems[index].subHtmlUrl) {\r\n            subHtmlUrl = this.galleryItems[index].subHtmlUrl;\r\n        }\r\n        else {\r\n            subHtml = this.galleryItems[index].subHtml;\r\n        }\r\n        if (!subHtmlUrl) {\r\n            if (subHtml) {\r\n                // get first letter of sub-html\r\n                // if first letter starts with . or # get the html form the jQuery object\r\n                var fL = subHtml.substring(0, 1);\r\n                if (fL === '.' || fL === '#') {\r\n                    if (this.settings.subHtmlSelectorRelative &&\r\n                        !this.settings.dynamic) {\r\n                        subHtml = $LG(this.items)\r\n                            .eq(index)\r\n                            .find(subHtml)\r\n                            .first()\r\n                            .html();\r\n                    }\r\n                    else {\r\n                        subHtml = $LG(subHtml).first().html();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                subHtml = '';\r\n            }\r\n        }\r\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\r\n            if (subHtmlUrl) {\r\n                utils.fetchCaptionFromUrl(subHtmlUrl, this.outer.find('.lg-sub-html'), 'replace');\r\n            }\r\n            else {\r\n                this.outer.find('.lg-sub-html').html(subHtml);\r\n            }\r\n        }\r\n        else {\r\n            var currentSlide = $LG(this.getSlideItemId(index));\r\n            if (subHtmlUrl) {\r\n                utils.fetchCaptionFromUrl(subHtmlUrl, currentSlide, 'append');\r\n            }\r\n            else {\r\n                currentSlide.append(\"<div class=\\\"lg-sub-html\\\">\" + subHtml + \"</div>\");\r\n            }\r\n        }\r\n        // Add lg-empty-html class if title doesn't exist\r\n        if (typeof subHtml !== 'undefined' && subHtml !== null) {\r\n            if (subHtml === '') {\r\n                this.outer\r\n                    .find(this.settings.appendSubHtmlTo)\r\n                    .addClass('lg-empty-html');\r\n            }\r\n            else {\r\n                this.outer\r\n                    .find(this.settings.appendSubHtmlTo)\r\n                    .removeClass('lg-empty-html');\r\n            }\r\n        }\r\n        this.LGel.trigger(lGEvents.afterAppendSubHtml, {\r\n            index: index,\r\n        });\r\n    };\r\n    /**\r\n     *  @desc Preload slides\r\n     *  @param {Number} index - index of the slide\r\n     * @todo preload not working for the first slide, Also, should work for the first and last slide as well\r\n     */\r\n    LightGallery.prototype.preload = function (index) {\r\n        for (var i = 1; i <= this.settings.preload; i++) {\r\n            if (i >= this.galleryItems.length - index) {\r\n                break;\r\n            }\r\n            this.loadContent(index + i, false);\r\n        }\r\n        for (var j = 1; j <= this.settings.preload; j++) {\r\n            if (index - j < 0) {\r\n                break;\r\n            }\r\n            this.loadContent(index - j, false);\r\n        }\r\n    };\r\n    LightGallery.prototype.getDummyImgStyles = function (imageSize) {\r\n        if (!imageSize)\r\n            return '';\r\n        return \"width:\" + imageSize.width + \"px;\\n                margin-left: -\" + imageSize.width / 2 + \"px;\\n                margin-top: -\" + imageSize.height / 2 + \"px;\\n                height:\" + imageSize.height + \"px\";\r\n    };\r\n    LightGallery.prototype.getVideoContStyle = function (imageSize) {\r\n        if (!imageSize)\r\n            return '';\r\n        return \"width:\" + imageSize.width + \"px;\\n                height:\" + imageSize.height + \"px\";\r\n    };\r\n    LightGallery.prototype.getDummyImageContent = function ($currentSlide, index, alt) {\r\n        var $currentItem;\r\n        if (!this.settings.dynamic) {\r\n            $currentItem = $LG(this.items).eq(index);\r\n        }\r\n        if ($currentItem) {\r\n            var _dummyImgSrc = void 0;\r\n            if (!this.settings.exThumbImage) {\r\n                _dummyImgSrc = $currentItem.find('img').first().attr('src');\r\n            }\r\n            else {\r\n                _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\r\n            }\r\n            if (!_dummyImgSrc)\r\n                return '';\r\n            var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n            var dummyImgContentImg = document.createElement('img');\r\n            dummyImgContentImg.alt = alt || '';\r\n            dummyImgContentImg.src = _dummyImgSrc;\r\n            dummyImgContentImg.className = \"lg-dummy-img\";\r\n            dummyImgContentImg.style.cssText = imgStyle;\r\n            $currentSlide.addClass('lg-first-slide');\r\n            this.outer.addClass('lg-first-slide-loading');\r\n            return dummyImgContentImg;\r\n        }\r\n        return '';\r\n    };\r\n    LightGallery.prototype.setImgMarkup = function (src, $currentSlide, index) {\r\n        var currentGalleryItem = this.galleryItems[index];\r\n        var alt = currentGalleryItem.alt, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n        // Use the thumbnail as dummy image which will be resized to actual image size and\r\n        // displayed on top of actual image\r\n        var imgContent = '';\r\n        var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n        if (this.isFirstSlideWithZoomAnimation()) {\r\n            imgContent = this.getDummyImageContent($currentSlide, index, altAttr);\r\n        }\r\n        else {\r\n            imgContent = utils.getImgMarkup(index, src, altAttr, srcset, sizes, sources);\r\n        }\r\n        var picture = document.createElement('picture');\r\n        picture.className = 'lg-img-wrap';\r\n        $LG(picture).append(imgContent);\r\n        $currentSlide.prepend(picture);\r\n    };\r\n    LightGallery.prototype.onSlideObjectLoad = function ($slide, isHTML5VideoWithoutPoster, onLoad, onError) {\r\n        var mediaObject = $slide.find('.lg-object').first();\r\n        if (utils.isImageLoaded(mediaObject.get()) ||\r\n            isHTML5VideoWithoutPoster) {\r\n            onLoad();\r\n        }\r\n        else {\r\n            mediaObject.on('load.lg error.lg', function () {\r\n                onLoad && onLoad();\r\n            });\r\n            mediaObject.on('error.lg', function () {\r\n                onError && onError();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param $el Current slide item\r\n     * @param index\r\n     * @param delay Delay is 0 except first time\r\n     * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin\r\n     * @param isFirstSlide\r\n     */\r\n    LightGallery.prototype.onLgObjectLoad = function (currentSlide, index, delay, speed, isFirstSlide, isHTML5VideoWithoutPoster) {\r\n        var _this = this;\r\n        this.onSlideObjectLoad(currentSlide, isHTML5VideoWithoutPoster, function () {\r\n            _this.triggerSlideItemLoad(currentSlide, index, delay, speed, isFirstSlide);\r\n        }, function () {\r\n            currentSlide.addClass('lg-complete lg-complete_');\r\n            currentSlide.html('<span class=\"lg-error-msg\">' +\r\n                _this.settings.strings['mediaLoadingFailed'] +\r\n                '</span>');\r\n        });\r\n    };\r\n    LightGallery.prototype.triggerSlideItemLoad = function ($currentSlide, index, delay, speed, isFirstSlide) {\r\n        var _this = this;\r\n        var currentGalleryItem = this.galleryItems[index];\r\n        // Adding delay for video slides without poster for better performance and user experience\r\n        // Videos should start playing once once the gallery is completely loaded\r\n        var _speed = isFirstSlide &&\r\n            this.getSlideType(currentGalleryItem) === 'video' &&\r\n            !currentGalleryItem.poster\r\n            ? speed\r\n            : 0;\r\n        setTimeout(function () {\r\n            $currentSlide.addClass('lg-complete lg-complete_');\r\n            _this.LGel.trigger(lGEvents.slideItemLoad, {\r\n                index: index,\r\n                delay: delay || 0,\r\n                isFirstSlide: isFirstSlide,\r\n            });\r\n        }, _speed);\r\n    };\r\n    LightGallery.prototype.isFirstSlideWithZoomAnimation = function () {\r\n        return !!(!this.lGalleryOn &&\r\n            this.zoomFromOrigin &&\r\n            this.currentImageSize);\r\n    };\r\n    // Add video slideInfo\r\n    LightGallery.prototype.addSlideVideoInfo = function (items) {\r\n        var _this = this;\r\n        items.forEach(function (element, index) {\r\n            element.__slideVideoInfo = utils.isVideo(element.src, !!element.video, index);\r\n            if (element.__slideVideoInfo &&\r\n                _this.settings.loadYouTubePoster &&\r\n                !element.poster &&\r\n                element.__slideVideoInfo.youtube) {\r\n                element.poster = \"//img.youtube.com/vi/\" + element.__slideVideoInfo.youtube[1] + \"/maxresdefault.jpg\";\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     *  Load slide content into slide.\r\n     *  This is used to load content into slides that is not visible too\r\n     *  @param {Number} index - index of the slide.\r\n     *  @param {Boolean} rec - if true call loadcontent() function again.\r\n     */\r\n    LightGallery.prototype.loadContent = function (index, rec) {\r\n        var _this = this;\r\n        var currentGalleryItem = this.galleryItems[index];\r\n        var $currentSlide = $LG(this.getSlideItemId(index));\r\n        var poster = currentGalleryItem.poster, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n        var src = currentGalleryItem.src;\r\n        var video = currentGalleryItem.video;\r\n        var _html5Video = video && typeof video === 'string' ? JSON.parse(video) : video;\r\n        if (currentGalleryItem.responsive) {\r\n            var srcDyItms = currentGalleryItem.responsive.split(',');\r\n            src = utils.getResponsiveSrc(srcDyItms) || src;\r\n        }\r\n        var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n        var lgVideoStyle = '';\r\n        var iframe = !!currentGalleryItem.iframe;\r\n        var isFirstSlide = !this.lGalleryOn;\r\n        // delay for adding complete class. it is 0 except first time.\r\n        var delay = 0;\r\n        if (isFirstSlide) {\r\n            if (this.zoomFromOrigin && this.currentImageSize) {\r\n                delay = this.settings.startAnimationDuration + 10;\r\n            }\r\n            else {\r\n                delay = this.settings.backdropDuration + 10;\r\n            }\r\n        }\r\n        if (!$currentSlide.hasClass('lg-loaded')) {\r\n            if (videoInfo) {\r\n                var _a = this.mediaContainerPosition, top_2 = _a.top, bottom = _a.bottom;\r\n                var videoSize = utils.getSize(this.items[index], this.outer, top_2 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                lgVideoStyle = this.getVideoContStyle(videoSize);\r\n            }\r\n            if (iframe) {\r\n                var markup = utils.getIframeMarkup(this.settings.iframeWidth, this.settings.iframeHeight, this.settings.iframeMaxWidth, this.settings.iframeMaxHeight, src, currentGalleryItem.iframeTitle);\r\n                $currentSlide.prepend(markup);\r\n            }\r\n            else if (poster) {\r\n                var dummyImg = '';\r\n                var hasStartAnimation = isFirstSlide &&\r\n                    this.zoomFromOrigin &&\r\n                    this.currentImageSize;\r\n                if (hasStartAnimation) {\r\n                    dummyImg = this.getDummyImageContent($currentSlide, index, '');\r\n                }\r\n                var markup = utils.getVideoPosterMarkup(poster, dummyImg || '', lgVideoStyle, this.settings.strings['playVideo'], videoInfo);\r\n                $currentSlide.prepend(markup);\r\n            }\r\n            else if (videoInfo) {\r\n                var markup = \"<div class=\\\"lg-video-cont \\\" style=\\\"\" + lgVideoStyle + \"\\\"></div>\";\r\n                $currentSlide.prepend(markup);\r\n            }\r\n            else {\r\n                this.setImgMarkup(src, $currentSlide, index);\r\n                if (srcset || sources) {\r\n                    var $img = $currentSlide.find('.lg-object');\r\n                    this.initPictureFill($img);\r\n                }\r\n            }\r\n            if (poster || videoInfo) {\r\n                this.LGel.trigger(lGEvents.hasVideo, {\r\n                    index: index,\r\n                    src: src,\r\n                    html5Video: _html5Video,\r\n                    hasPoster: !!poster,\r\n                });\r\n            }\r\n            this.LGel.trigger(lGEvents.afterAppendSlide, { index: index });\r\n            if (this.lGalleryOn &&\r\n                this.settings.appendSubHtmlTo === '.lg-item') {\r\n                this.addHtml(index);\r\n            }\r\n        }\r\n        // For first time add some delay for displaying the start animation.\r\n        var _speed = 0;\r\n        // Do not change the delay value because it is required for zoom plugin.\r\n        // If gallery opened from direct url (hash) speed value should be 0\r\n        if (delay && !$LG(document.body).hasClass('lg-from-hash')) {\r\n            _speed = delay;\r\n        }\r\n        // Only for first slide and zoomFromOrigin is enabled\r\n        if (this.isFirstSlideWithZoomAnimation()) {\r\n            setTimeout(function () {\r\n                $currentSlide\r\n                    .removeClass('lg-start-end-progress lg-start-progress')\r\n                    .removeAttr('style');\r\n            }, this.settings.startAnimationDuration + 100);\r\n            if (!$currentSlide.hasClass('lg-loaded')) {\r\n                setTimeout(function () {\r\n                    if (_this.getSlideType(currentGalleryItem) === 'image') {\r\n                        var alt = currentGalleryItem.alt;\r\n                        var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n                        $currentSlide\r\n                            .find('.lg-img-wrap')\r\n                            .append(utils.getImgMarkup(index, src, altAttr, srcset, sizes, currentGalleryItem.sources));\r\n                        if (srcset || sources) {\r\n                            var $img = $currentSlide.find('.lg-object');\r\n                            _this.initPictureFill($img);\r\n                        }\r\n                    }\r\n                    if (_this.getSlideType(currentGalleryItem) === 'image' ||\r\n                        (_this.getSlideType(currentGalleryItem) === 'video' &&\r\n                            poster)) {\r\n                        _this.onLgObjectLoad($currentSlide, index, delay, _speed, true, false);\r\n                        // load remaining slides once the slide is completely loaded\r\n                        _this.onSlideObjectLoad($currentSlide, !!(videoInfo && videoInfo.html5 && !poster), function () {\r\n                            _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\r\n                        }, function () {\r\n                            _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\r\n                        });\r\n                    }\r\n                }, this.settings.startAnimationDuration + 100);\r\n            }\r\n        }\r\n        // SLide content has been added to dom\r\n        $currentSlide.addClass('lg-loaded');\r\n        if (!this.isFirstSlideWithZoomAnimation() ||\r\n            (this.getSlideType(currentGalleryItem) === 'video' && !poster)) {\r\n            this.onLgObjectLoad($currentSlide, index, delay, _speed, isFirstSlide, !!(videoInfo && videoInfo.html5 && !poster));\r\n        }\r\n        // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\r\n        if ((!this.zoomFromOrigin || !this.currentImageSize) &&\r\n            $currentSlide.hasClass('lg-complete_') &&\r\n            !this.lGalleryOn) {\r\n            setTimeout(function () {\r\n                $currentSlide.addClass('lg-complete');\r\n            }, this.settings.backdropDuration);\r\n        }\r\n        // Content loaded\r\n        // Need to set lGalleryOn before calling preload function\r\n        this.lGalleryOn = true;\r\n        if (rec === true) {\r\n            if (!$currentSlide.hasClass('lg-complete_')) {\r\n                $currentSlide\r\n                    .find('.lg-object')\r\n                    .first()\r\n                    .on('load.lg error.lg', function () {\r\n                    _this.preload(index);\r\n                });\r\n            }\r\n            else {\r\n                this.preload(index);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @desc Remove dummy image content and load next slides\r\n     * Called only for the first time if zoomFromOrigin animation is enabled\r\n     * @param index\r\n     * @param $currentSlide\r\n     * @param speed\r\n     */\r\n    LightGallery.prototype.loadContentOnFirstSlideLoad = function (index, $currentSlide, speed) {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            $currentSlide.find('.lg-dummy-img').remove();\r\n            $currentSlide.removeClass('lg-first-slide');\r\n            _this.outer.removeClass('lg-first-slide-loading');\r\n            _this.isDummyImageRemoved = true;\r\n            _this.preload(index);\r\n        }, speed + 300);\r\n    };\r\n    LightGallery.prototype.getItemsToBeInsertedToDom = function (index, prevIndex, numberOfItems) {\r\n        var _this = this;\r\n        if (numberOfItems === void 0) { numberOfItems = 0; }\r\n        var itemsToBeInsertedToDom = [];\r\n        // Minimum 2 items should be there\r\n        var possibleNumberOfItems = Math.max(numberOfItems, 3);\r\n        possibleNumberOfItems = Math.min(possibleNumberOfItems, this.galleryItems.length);\r\n        var prevIndexItem = \"lg-item-\" + this.lgId + \"-\" + prevIndex;\r\n        if (this.galleryItems.length <= 3) {\r\n            this.galleryItems.forEach(function (_element, index) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + _this.lgId + \"-\" + index);\r\n            });\r\n            return itemsToBeInsertedToDom;\r\n        }\r\n        if (index < (this.galleryItems.length - 1) / 2) {\r\n            for (var idx = index; idx > index - possibleNumberOfItems / 2 && idx >= 0; idx--) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n            }\r\n            var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n            for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index + idx + 1));\r\n            }\r\n        }\r\n        else {\r\n            for (var idx = index; idx <= this.galleryItems.length - 1 &&\r\n                idx < index + possibleNumberOfItems / 2; idx++) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n            }\r\n            var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n            for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index - idx - 1));\r\n            }\r\n        }\r\n        if (this.settings.loop) {\r\n            if (index === this.galleryItems.length - 1) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + 0);\r\n            }\r\n            else if (index === 0) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (this.galleryItems.length - 1));\r\n            }\r\n        }\r\n        if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {\r\n            itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + prevIndex);\r\n        }\r\n        return itemsToBeInsertedToDom;\r\n    };\r\n    LightGallery.prototype.organizeSlideItems = function (index, prevIndex) {\r\n        var _this = this;\r\n        var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, prevIndex, this.settings.numberOfSlideItemsInDom);\r\n        itemsToBeInsertedToDom.forEach(function (item) {\r\n            if (_this.currentItemsInDom.indexOf(item) === -1) {\r\n                _this.$inner.append(\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n            }\r\n        });\r\n        this.currentItemsInDom.forEach(function (item) {\r\n            if (itemsToBeInsertedToDom.indexOf(item) === -1) {\r\n                $LG(\"#\" + item).remove();\r\n            }\r\n        });\r\n        return itemsToBeInsertedToDom;\r\n    };\r\n    /**\r\n     * Get previous index of the slide\r\n     */\r\n    LightGallery.prototype.getPreviousSlideIndex = function () {\r\n        var prevIndex = 0;\r\n        try {\r\n            var currentItemId = this.outer\r\n                .find('.lg-current')\r\n                .first()\r\n                .attr('id');\r\n            prevIndex = parseInt(currentItemId.split('-')[3]) || 0;\r\n        }\r\n        catch (error) {\r\n            prevIndex = 0;\r\n        }\r\n        return prevIndex;\r\n    };\r\n    LightGallery.prototype.setDownloadValue = function (index) {\r\n        if (this.settings.download) {\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var hideDownloadBtn = currentGalleryItem.downloadUrl === false ||\r\n                currentGalleryItem.downloadUrl === 'false';\r\n            if (hideDownloadBtn) {\r\n                this.outer.addClass('lg-hide-download');\r\n            }\r\n            else {\r\n                var $download = this.getElementById('lg-download');\r\n                this.outer.removeClass('lg-hide-download');\r\n                $download.attr('href', currentGalleryItem.downloadUrl ||\r\n                    currentGalleryItem.src);\r\n                if (currentGalleryItem.download) {\r\n                    $download.attr('download', currentGalleryItem.download);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.makeSlideAnimation = function (direction, currentSlideItem, previousSlideItem) {\r\n        var _this = this;\r\n        if (this.lGalleryOn) {\r\n            previousSlideItem.addClass('lg-slide-progress');\r\n        }\r\n        setTimeout(function () {\r\n            // remove all transitions\r\n            _this.outer.addClass('lg-no-trans');\r\n            _this.outer\r\n                .find('.lg-item')\r\n                .removeClass('lg-prev-slide lg-next-slide');\r\n            if (direction === 'prev') {\r\n                //prevslide\r\n                currentSlideItem.addClass('lg-prev-slide');\r\n                previousSlideItem.addClass('lg-next-slide');\r\n            }\r\n            else {\r\n                // next slide\r\n                currentSlideItem.addClass('lg-next-slide');\r\n                previousSlideItem.addClass('lg-prev-slide');\r\n            }\r\n            // give 50 ms for browser to add/remove class\r\n            setTimeout(function () {\r\n                _this.outer.find('.lg-item').removeClass('lg-current');\r\n                currentSlideItem.addClass('lg-current');\r\n                // reset all transitions\r\n                _this.outer.removeClass('lg-no-trans');\r\n            }, 50);\r\n        }, this.lGalleryOn ? this.settings.slideDelay : 0);\r\n    };\r\n    /**\r\n     * Goto a specific slide.\r\n     * @param {Number} index - index of the slide\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\r\n     * @param {Boolean} fromThumb - true if slide function called via thumbnail click\r\n     * @param {String} direction - Direction of the slide(next/prev)\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  // to go to 3rd slide\r\n     *  plugin.slide(2);\r\n     *\r\n     */\r\n    LightGallery.prototype.slide = function (index, fromTouch, fromThumb, direction) {\r\n        var _this = this;\r\n        var prevIndex = this.getPreviousSlideIndex();\r\n        this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\r\n        // Prevent multiple call, Required for hsh plugin\r\n        if (this.lGalleryOn && prevIndex === index) {\r\n            return;\r\n        }\r\n        var numberOfGalleryItems = this.galleryItems.length;\r\n        if (!this.lgBusy) {\r\n            if (this.settings.counter) {\r\n                this.updateCurrentCounter(index);\r\n            }\r\n            var currentSlideItem = this.getSlideItem(index);\r\n            var previousSlideItem_1 = this.getSlideItem(prevIndex);\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n            this.outer.attr('data-lg-slide-type', this.getSlideType(currentGalleryItem));\r\n            this.setDownloadValue(index);\r\n            if (videoInfo) {\r\n                var _a = this.mediaContainerPosition, top_3 = _a.top, bottom = _a.bottom;\r\n                var videoSize = utils.getSize(this.items[index], this.outer, top_3 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                this.resizeVideoSlide(index, videoSize);\r\n            }\r\n            this.LGel.trigger(lGEvents.beforeSlide, {\r\n                prevIndex: prevIndex,\r\n                index: index,\r\n                fromTouch: !!fromTouch,\r\n                fromThumb: !!fromThumb,\r\n            });\r\n            this.lgBusy = true;\r\n            clearTimeout(this.hideBarTimeout);\r\n            this.arrowDisable(index);\r\n            if (!direction) {\r\n                if (index < prevIndex) {\r\n                    direction = 'prev';\r\n                }\r\n                else if (index > prevIndex) {\r\n                    direction = 'next';\r\n                }\r\n            }\r\n            if (!fromTouch) {\r\n                this.makeSlideAnimation(direction, currentSlideItem, previousSlideItem_1);\r\n            }\r\n            else {\r\n                this.outer\r\n                    .find('.lg-item')\r\n                    .removeClass('lg-prev-slide lg-current lg-next-slide');\r\n                var touchPrev = void 0;\r\n                var touchNext = void 0;\r\n                if (numberOfGalleryItems > 2) {\r\n                    touchPrev = index - 1;\r\n                    touchNext = index + 1;\r\n                    if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\r\n                        // next slide\r\n                        touchNext = 0;\r\n                        touchPrev = numberOfGalleryItems - 1;\r\n                    }\r\n                    else if (index === numberOfGalleryItems - 1 &&\r\n                        prevIndex === 0) {\r\n                        // prev slide\r\n                        touchNext = 0;\r\n                        touchPrev = numberOfGalleryItems - 1;\r\n                    }\r\n                }\r\n                else {\r\n                    touchPrev = 0;\r\n                    touchNext = 1;\r\n                }\r\n                if (direction === 'prev') {\r\n                    this.getSlideItem(touchNext).addClass('lg-next-slide');\r\n                }\r\n                else {\r\n                    this.getSlideItem(touchPrev).addClass('lg-prev-slide');\r\n                }\r\n                currentSlideItem.addClass('lg-current');\r\n            }\r\n            // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\r\n            if (!this.lGalleryOn) {\r\n                this.loadContent(index, true);\r\n            }\r\n            else {\r\n                setTimeout(function () {\r\n                    _this.loadContent(index, true);\r\n                    // Add title if this.settings.appendSubHtmlTo === lg-sub-html\r\n                    if (_this.settings.appendSubHtmlTo !== '.lg-item') {\r\n                        _this.addHtml(index);\r\n                    }\r\n                }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));\r\n            }\r\n            setTimeout(function () {\r\n                _this.lgBusy = false;\r\n                previousSlideItem_1.removeClass('lg-slide-progress');\r\n                _this.LGel.trigger(lGEvents.afterSlide, {\r\n                    prevIndex: prevIndex,\r\n                    index: index,\r\n                    fromTouch: fromTouch,\r\n                    fromThumb: fromThumb,\r\n                });\r\n            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\r\n        }\r\n        this.index = index;\r\n    };\r\n    LightGallery.prototype.updateCurrentCounter = function (index) {\r\n        this.getElementById('lg-counter-current').html(index + 1 + '');\r\n    };\r\n    LightGallery.prototype.updateCounterTotal = function () {\r\n        this.getElementById('lg-counter-all').html(this.galleryItems.length + '');\r\n    };\r\n    LightGallery.prototype.getSlideType = function (item) {\r\n        if (item.__slideVideoInfo) {\r\n            return 'video';\r\n        }\r\n        else if (item.iframe) {\r\n            return 'iframe';\r\n        }\r\n        else {\r\n            return 'image';\r\n        }\r\n    };\r\n    LightGallery.prototype.touchMove = function (startCoords, endCoords, e) {\r\n        var distanceX = endCoords.pageX - startCoords.pageX;\r\n        var distanceY = endCoords.pageY - startCoords.pageY;\r\n        var allowSwipe = false;\r\n        if (this.swipeDirection) {\r\n            allowSwipe = true;\r\n        }\r\n        else {\r\n            if (Math.abs(distanceX) > 15) {\r\n                this.swipeDirection = 'horizontal';\r\n                allowSwipe = true;\r\n            }\r\n            else if (Math.abs(distanceY) > 15) {\r\n                this.swipeDirection = 'vertical';\r\n                allowSwipe = true;\r\n            }\r\n        }\r\n        if (!allowSwipe) {\r\n            return;\r\n        }\r\n        var $currentSlide = this.getSlideItem(this.index);\r\n        if (this.swipeDirection === 'horizontal') {\r\n            e === null || e === void 0 ? void 0 : e.preventDefault();\r\n            // reset opacity and transition duration\r\n            this.outer.addClass('lg-dragging');\r\n            // move current slide\r\n            this.setTranslate($currentSlide, distanceX, 0);\r\n            // move next and prev slide with current slide\r\n            var width = $currentSlide.get().offsetWidth;\r\n            var slideWidthAmount = (width * 15) / 100;\r\n            var gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);\r\n            this.setTranslate(this.outer.find('.lg-prev-slide').first(), -width + distanceX - gutter, 0);\r\n            this.setTranslate(this.outer.find('.lg-next-slide').first(), width + distanceX + gutter, 0);\r\n        }\r\n        else if (this.swipeDirection === 'vertical') {\r\n            if (this.settings.swipeToClose) {\r\n                e === null || e === void 0 ? void 0 : e.preventDefault();\r\n                this.$container.addClass('lg-dragging-vertical');\r\n                var opacity = 1 - Math.abs(distanceY) / window.innerHeight;\r\n                this.$backdrop.css('opacity', opacity);\r\n                var scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\r\n                this.setTranslate($currentSlide, 0, distanceY, scale, scale);\r\n                if (Math.abs(distanceY) > 100) {\r\n                    this.outer\r\n                        .addClass('lg-hide-items')\r\n                        .removeClass('lg-components-open');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.touchEnd = function (endCoords, startCoords, event) {\r\n        var _this = this;\r\n        var distance;\r\n        // keep slide animation for any mode while dragg/swipe\r\n        if (this.settings.mode !== 'lg-slide') {\r\n            this.outer.addClass('lg-slide');\r\n        }\r\n        // set transition duration\r\n        setTimeout(function () {\r\n            _this.$container.removeClass('lg-dragging-vertical');\r\n            _this.outer\r\n                .removeClass('lg-dragging lg-hide-items')\r\n                .addClass('lg-components-open');\r\n            var triggerClick = true;\r\n            if (_this.swipeDirection === 'horizontal') {\r\n                distance = endCoords.pageX - startCoords.pageX;\r\n                var distanceAbs = Math.abs(endCoords.pageX - startCoords.pageX);\r\n                if (distance < 0 &&\r\n                    distanceAbs > _this.settings.swipeThreshold) {\r\n                    _this.goToNextSlide(true);\r\n                    triggerClick = false;\r\n                }\r\n                else if (distance > 0 &&\r\n                    distanceAbs > _this.settings.swipeThreshold) {\r\n                    _this.goToPrevSlide(true);\r\n                    triggerClick = false;\r\n                }\r\n            }\r\n            else if (_this.swipeDirection === 'vertical') {\r\n                distance = Math.abs(endCoords.pageY - startCoords.pageY);\r\n                if (_this.settings.closable &&\r\n                    _this.settings.swipeToClose &&\r\n                    distance > 100) {\r\n                    _this.closeGallery();\r\n                    return;\r\n                }\r\n                else {\r\n                    _this.$backdrop.css('opacity', 1);\r\n                }\r\n            }\r\n            _this.outer.find('.lg-item').removeAttr('style');\r\n            if (triggerClick &&\r\n                Math.abs(endCoords.pageX - startCoords.pageX) < 5) {\r\n                // Trigger click if distance is less than 5 pix\r\n                var target = $LG(event.target);\r\n                if (_this.isPosterElement(target)) {\r\n                    _this.LGel.trigger(lGEvents.posterClick);\r\n                }\r\n            }\r\n            _this.swipeDirection = undefined;\r\n        });\r\n        // remove slide class once drag/swipe is completed if mode is not slide\r\n        setTimeout(function () {\r\n            if (!_this.outer.hasClass('lg-dragging') &&\r\n                _this.settings.mode !== 'lg-slide') {\r\n                _this.outer.removeClass('lg-slide');\r\n            }\r\n        }, this.settings.speed + 100);\r\n    };\r\n    LightGallery.prototype.enableSwipe = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isMoved = false;\r\n        var isSwiping = false;\r\n        if (this.settings.enableSwipe) {\r\n            this.$inner.on('touchstart.lg', function (e) {\r\n                _this.dragOrSwipeEnabled = true;\r\n                var $item = _this.getSlideItem(_this.index);\r\n                if (($LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) &&\r\n                    !_this.outer.hasClass('lg-zoomed') &&\r\n                    !_this.lgBusy &&\r\n                    e.touches.length === 1) {\r\n                    isSwiping = true;\r\n                    _this.touchAction = 'swipe';\r\n                    _this.manageSwipeClass();\r\n                    startCoords = {\r\n                        pageX: e.touches[0].pageX,\r\n                        pageY: e.touches[0].pageY,\r\n                    };\r\n                }\r\n            });\r\n            this.$inner.on('touchmove.lg', function (e) {\r\n                if (isSwiping &&\r\n                    _this.touchAction === 'swipe' &&\r\n                    e.touches.length === 1) {\r\n                    endCoords = {\r\n                        pageX: e.touches[0].pageX,\r\n                        pageY: e.touches[0].pageY,\r\n                    };\r\n                    _this.touchMove(startCoords, endCoords, e);\r\n                    isMoved = true;\r\n                }\r\n            });\r\n            this.$inner.on('touchend.lg', function (event) {\r\n                if (_this.touchAction === 'swipe') {\r\n                    if (isMoved) {\r\n                        isMoved = false;\r\n                        _this.touchEnd(endCoords, startCoords, event);\r\n                    }\r\n                    else if (isSwiping) {\r\n                        var target = $LG(event.target);\r\n                        if (_this.isPosterElement(target)) {\r\n                            _this.LGel.trigger(lGEvents.posterClick);\r\n                        }\r\n                    }\r\n                    _this.touchAction = undefined;\r\n                    isSwiping = false;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    LightGallery.prototype.enableDrag = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isDraging = false;\r\n        var isMoved = false;\r\n        if (this.settings.enableDrag) {\r\n            this.outer.on('mousedown.lg', function (e) {\r\n                _this.dragOrSwipeEnabled = true;\r\n                var $item = _this.getSlideItem(_this.index);\r\n                if ($LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) {\r\n                    if (!_this.outer.hasClass('lg-zoomed') && !_this.lgBusy) {\r\n                        e.preventDefault();\r\n                        if (!_this.lgBusy) {\r\n                            _this.manageSwipeClass();\r\n                            startCoords = {\r\n                                pageX: e.pageX,\r\n                                pageY: e.pageY,\r\n                            };\r\n                            isDraging = true;\r\n                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                            _this.outer.get().scrollLeft += 1;\r\n                            _this.outer.get().scrollLeft -= 1;\r\n                            // *\r\n                            _this.outer\r\n                                .removeClass('lg-grab')\r\n                                .addClass('lg-grabbing');\r\n                            _this.LGel.trigger(lGEvents.dragStart);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            $LG(window).on(\"mousemove.lg.global\" + this.lgId, function (e) {\r\n                if (isDraging && _this.lgOpened) {\r\n                    isMoved = true;\r\n                    endCoords = {\r\n                        pageX: e.pageX,\r\n                        pageY: e.pageY,\r\n                    };\r\n                    _this.touchMove(startCoords, endCoords);\r\n                    _this.LGel.trigger(lGEvents.dragMove);\r\n                }\r\n            });\r\n            $LG(window).on(\"mouseup.lg.global\" + this.lgId, function (event) {\r\n                if (!_this.lgOpened) {\r\n                    return;\r\n                }\r\n                var target = $LG(event.target);\r\n                if (isMoved) {\r\n                    isMoved = false;\r\n                    _this.touchEnd(endCoords, startCoords, event);\r\n                    _this.LGel.trigger(lGEvents.dragEnd);\r\n                }\r\n                else if (_this.isPosterElement(target)) {\r\n                    _this.LGel.trigger(lGEvents.posterClick);\r\n                }\r\n                // Prevent execution on click\r\n                if (isDraging) {\r\n                    isDraging = false;\r\n                    _this.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    LightGallery.prototype.triggerPosterClick = function () {\r\n        var _this = this;\r\n        this.$inner.on('click.lg', function (event) {\r\n            if (!_this.dragOrSwipeEnabled &&\r\n                _this.isPosterElement($LG(event.target))) {\r\n                _this.LGel.trigger(lGEvents.posterClick);\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.manageSwipeClass = function () {\r\n        var _touchNext = this.index + 1;\r\n        var _touchPrev = this.index - 1;\r\n        if (this.settings.loop && this.galleryItems.length > 2) {\r\n            if (this.index === 0) {\r\n                _touchPrev = this.galleryItems.length - 1;\r\n            }\r\n            else if (this.index === this.galleryItems.length - 1) {\r\n                _touchNext = 0;\r\n            }\r\n        }\r\n        this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');\r\n        if (_touchPrev > -1) {\r\n            this.getSlideItem(_touchPrev).addClass('lg-prev-slide');\r\n        }\r\n        this.getSlideItem(_touchNext).addClass('lg-next-slide');\r\n    };\r\n    /**\r\n     * Go to next slide\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.goToNextSlide();\r\n     * @see <a href=\"/demos/methods/\">Demo</a>\r\n     */\r\n    LightGallery.prototype.goToNextSlide = function (fromTouch) {\r\n        var _this = this;\r\n        var _loop = this.settings.loop;\r\n        if (fromTouch && this.galleryItems.length < 3) {\r\n            _loop = false;\r\n        }\r\n        if (!this.lgBusy) {\r\n            if (this.index + 1 < this.galleryItems.length) {\r\n                this.index++;\r\n                this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                    index: this.index,\r\n                });\r\n                this.slide(this.index, !!fromTouch, false, 'next');\r\n            }\r\n            else {\r\n                if (_loop) {\r\n                    this.index = 0;\r\n                    this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                        index: this.index,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'next');\r\n                }\r\n                else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                    this.outer.addClass('lg-right-end');\r\n                    setTimeout(function () {\r\n                        _this.outer.removeClass('lg-right-end');\r\n                    }, 400);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Go to previous slides\r\n     * @param {Boolean} fromTouch - true if slide function called via touch event\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery({});\r\n     *  plugin.goToPrevSlide();\r\n     * @see <a href=\"/demos/methods/\">Demo</a>\r\n     *\r\n     */\r\n    LightGallery.prototype.goToPrevSlide = function (fromTouch) {\r\n        var _this = this;\r\n        var _loop = this.settings.loop;\r\n        if (fromTouch && this.galleryItems.length < 3) {\r\n            _loop = false;\r\n        }\r\n        if (!this.lgBusy) {\r\n            if (this.index > 0) {\r\n                this.index--;\r\n                this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                    index: this.index,\r\n                    fromTouch: fromTouch,\r\n                });\r\n                this.slide(this.index, !!fromTouch, false, 'prev');\r\n            }\r\n            else {\r\n                if (_loop) {\r\n                    this.index = this.galleryItems.length - 1;\r\n                    this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                        index: this.index,\r\n                        fromTouch: fromTouch,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'prev');\r\n                }\r\n                else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                    this.outer.addClass('lg-left-end');\r\n                    setTimeout(function () {\r\n                        _this.outer.removeClass('lg-left-end');\r\n                    }, 400);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.keyPress = function () {\r\n        var _this = this;\r\n        $LG(window).on(\"keydown.lg.global\" + this.lgId, function (e) {\r\n            if (_this.lgOpened &&\r\n                _this.settings.escKey === true &&\r\n                e.keyCode === 27) {\r\n                e.preventDefault();\r\n                if (_this.settings.allowMediaOverlap &&\r\n                    _this.outer.hasClass('lg-can-toggle') &&\r\n                    _this.outer.hasClass('lg-components-open')) {\r\n                    _this.outer.removeClass('lg-components-open');\r\n                }\r\n                else {\r\n                    _this.closeGallery();\r\n                }\r\n            }\r\n            if (_this.lgOpened && _this.galleryItems.length > 1) {\r\n                if (e.keyCode === 37) {\r\n                    e.preventDefault();\r\n                    _this.goToPrevSlide();\r\n                }\r\n                if (e.keyCode === 39) {\r\n                    e.preventDefault();\r\n                    _this.goToNextSlide();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.arrow = function () {\r\n        var _this = this;\r\n        this.getElementById('lg-prev').on('click.lg', function () {\r\n            _this.goToPrevSlide();\r\n        });\r\n        this.getElementById('lg-next').on('click.lg', function () {\r\n            _this.goToNextSlide();\r\n        });\r\n    };\r\n    LightGallery.prototype.arrowDisable = function (index) {\r\n        // Disable arrows if settings.hideControlOnEnd is true\r\n        if (!this.settings.loop && this.settings.hideControlOnEnd) {\r\n            var $prev = this.getElementById('lg-prev');\r\n            var $next = this.getElementById('lg-next');\r\n            if (index + 1 === this.galleryItems.length) {\r\n                $next.attr('disabled', 'disabled').addClass('disabled');\r\n            }\r\n            else {\r\n                $next.removeAttr('disabled').removeClass('disabled');\r\n            }\r\n            if (index === 0) {\r\n                $prev.attr('disabled', 'disabled').addClass('disabled');\r\n            }\r\n            else {\r\n                $prev.removeAttr('disabled').removeClass('disabled');\r\n            }\r\n        }\r\n    };\r\n    LightGallery.prototype.setTranslate = function ($el, xValue, yValue, scaleX, scaleY) {\r\n        if (scaleX === void 0) { scaleX = 1; }\r\n        if (scaleY === void 0) { scaleY = 1; }\r\n        $el.css('transform', 'translate3d(' +\r\n            xValue +\r\n            'px, ' +\r\n            yValue +\r\n            'px, 0px) scale3d(' +\r\n            scaleX +\r\n            ', ' +\r\n            scaleY +\r\n            ', 1)');\r\n    };\r\n    LightGallery.prototype.mousewheel = function () {\r\n        var _this = this;\r\n        var lastCall = 0;\r\n        this.outer.on('wheel.lg', function (e) {\r\n            if (!e.deltaY || _this.galleryItems.length < 2) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            var now = new Date().getTime();\r\n            if (now - lastCall < 1000) {\r\n                return;\r\n            }\r\n            lastCall = now;\r\n            if (e.deltaY > 0) {\r\n                _this.goToNextSlide();\r\n            }\r\n            else if (e.deltaY < 0) {\r\n                _this.goToPrevSlide();\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.isSlideElement = function (target) {\r\n        return (target.hasClass('lg-outer') ||\r\n            target.hasClass('lg-item') ||\r\n            target.hasClass('lg-img-wrap') ||\r\n            target.hasClass('lg-img-rotate'));\r\n    };\r\n    LightGallery.prototype.isPosterElement = function (target) {\r\n        var playButton = this.getSlideItem(this.index)\r\n            .find('.lg-video-play-button')\r\n            .get();\r\n        return (target.hasClass('lg-video-poster') ||\r\n            target.hasClass('lg-video-play-button') ||\r\n            (playButton && playButton.contains(target.get())));\r\n    };\r\n    /**\r\n     * Maximize minimize inline gallery.\r\n     * @category lGPublicMethods\r\n     */\r\n    LightGallery.prototype.toggleMaximize = function () {\r\n        var _this = this;\r\n        this.getElementById('lg-maximize').on('click.lg', function () {\r\n            _this.$container.toggleClass('lg-inline');\r\n            _this.refreshOnResize();\r\n        });\r\n    };\r\n    LightGallery.prototype.invalidateItems = function () {\r\n        for (var index = 0; index < this.items.length; index++) {\r\n            var element = this.items[index];\r\n            var $element = $LG(element);\r\n            $element.off(\"click.lgcustom-item-\" + $element.attr('data-lg-id'));\r\n        }\r\n    };\r\n    LightGallery.prototype.trapFocus = function () {\r\n        var _this = this;\r\n        this.$container.get().focus({\r\n            preventScroll: true,\r\n        });\r\n        $LG(window).on(\"keydown.lg.global\" + this.lgId, function (e) {\r\n            if (!_this.lgOpened) {\r\n                return;\r\n            }\r\n            var isTabPressed = e.key === 'Tab' || e.keyCode === 9;\r\n            if (!isTabPressed) {\r\n                return;\r\n            }\r\n            var focusableEls = utils.getFocusableElements(_this.$container.get());\r\n            var firstFocusableEl = focusableEls[0];\r\n            var lastFocusableEl = focusableEls[focusableEls.length - 1];\r\n            if (e.shiftKey) {\r\n                if (document.activeElement === firstFocusableEl) {\r\n                    lastFocusableEl.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n            else {\r\n                if (document.activeElement === lastFocusableEl) {\r\n                    firstFocusableEl.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.manageCloseGallery = function () {\r\n        var _this = this;\r\n        if (!this.settings.closable)\r\n            return;\r\n        var mousedown = false;\r\n        this.getElementById('lg-close').on('click.lg', function () {\r\n            _this.closeGallery();\r\n        });\r\n        if (this.settings.closeOnTap) {\r\n            // If you drag the slide and release outside gallery gets close on chrome\r\n            // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\r\n            this.outer.on('mousedown.lg', function (e) {\r\n                var target = $LG(e.target);\r\n                if (_this.isSlideElement(target)) {\r\n                    mousedown = true;\r\n                }\r\n                else {\r\n                    mousedown = false;\r\n                }\r\n            });\r\n            this.outer.on('mousemove.lg', function () {\r\n                mousedown = false;\r\n            });\r\n            this.outer.on('mouseup.lg', function (e) {\r\n                var target = $LG(e.target);\r\n                if (_this.isSlideElement(target) && mousedown) {\r\n                    if (!_this.outer.hasClass('lg-dragging')) {\r\n                        _this.closeGallery();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Close lightGallery if it is opened.\r\n     *\r\n     * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\r\n     * @return returns the estimated time to close gallery completely including the close animation duration\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.closeGallery();\r\n     *\r\n     */\r\n    LightGallery.prototype.closeGallery = function (force) {\r\n        var _this = this;\r\n        if (!this.lgOpened || (!this.settings.closable && !force)) {\r\n            return 0;\r\n        }\r\n        this.LGel.trigger(lGEvents.beforeClose);\r\n        if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) {\r\n            $LG(window).scrollTop(this.prevScrollTop);\r\n        }\r\n        var currentItem = this.items[this.index];\r\n        var transform;\r\n        if (this.zoomFromOrigin && currentItem) {\r\n            var _a = this.mediaContainerPosition, top_4 = _a.top, bottom = _a.bottom;\r\n            var _b = this.galleryItems[this.index], __slideVideoInfo = _b.__slideVideoInfo, poster = _b.poster;\r\n            var imageSize = utils.getSize(currentItem, this.outer, top_4 + bottom, __slideVideoInfo && poster && this.settings.videoMaxSize);\r\n            transform = utils.getTransform(currentItem, this.outer, top_4, bottom, imageSize);\r\n        }\r\n        if (this.zoomFromOrigin && transform) {\r\n            this.outer.addClass('lg-closing lg-zoom-from-image');\r\n            this.getSlideItem(this.index)\r\n                .addClass('lg-start-end-progress')\r\n                .css('transition-duration', this.settings.startAnimationDuration + 'ms')\r\n                .css('transform', transform);\r\n        }\r\n        else {\r\n            this.outer.addClass('lg-hide-items');\r\n            // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\r\n            // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\r\n            this.outer.removeClass('lg-zoom-from-image');\r\n        }\r\n        // Unbind all events added by lightGallery\r\n        // @todo\r\n        //this.$el.off('.lg.tm');\r\n        this.destroyModules();\r\n        this.lGalleryOn = false;\r\n        this.isDummyImageRemoved = false;\r\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n        clearTimeout(this.hideBarTimeout);\r\n        this.hideBarTimeout = false;\r\n        $LG('html').removeClass('lg-on');\r\n        this.outer.removeClass('lg-visible lg-components-open');\r\n        // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\r\n        this.$backdrop.removeClass('in').css('opacity', 0);\r\n        var removeTimeout = this.zoomFromOrigin && transform\r\n            ? Math.max(this.settings.startAnimationDuration, this.settings.backdropDuration)\r\n            : this.settings.backdropDuration;\r\n        this.$container.removeClass('lg-show-in');\r\n        // Once the closign animation is completed and gallery is invisible\r\n        setTimeout(function () {\r\n            if (_this.zoomFromOrigin && transform) {\r\n                _this.outer.removeClass('lg-zoom-from-image');\r\n            }\r\n            _this.$container.removeClass('lg-show');\r\n            // Reset scrollbar\r\n            _this.resetScrollBar();\r\n            // Need to remove inline opacity as it is used in the stylesheet as well\r\n            _this.$backdrop\r\n                .removeAttr('style')\r\n                .css('transition-duration', _this.settings.backdropDuration + 'ms');\r\n            _this.outer.removeClass(\"lg-closing \" + _this.settings.startClass);\r\n            _this.getSlideItem(_this.index).removeClass('lg-start-end-progress');\r\n            _this.$inner.empty();\r\n            if (_this.lgOpened) {\r\n                _this.LGel.trigger(lGEvents.afterClose, {\r\n                    instance: _this,\r\n                });\r\n            }\r\n            if (_this.$container.get()) {\r\n                _this.$container.get().blur();\r\n            }\r\n            _this.lgOpened = false;\r\n        }, removeTimeout + 100);\r\n        return removeTimeout + 100;\r\n    };\r\n    LightGallery.prototype.initModules = function () {\r\n        this.plugins.forEach(function (module) {\r\n            try {\r\n                module.init();\r\n            }\r\n            catch (err) {\r\n                console.warn(\"lightGallery:- make sure lightGallery module is properly initiated\");\r\n            }\r\n        });\r\n    };\r\n    LightGallery.prototype.destroyModules = function (destroy) {\r\n        this.plugins.forEach(function (module) {\r\n            try {\r\n                if (destroy) {\r\n                    module.destroy();\r\n                }\r\n                else {\r\n                    module.closeGallery && module.closeGallery();\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.warn(\"lightGallery:- make sure lightGallery module is properly destroyed\");\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Refresh lightGallery with new set of children.\r\n     *\r\n     * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\r\n     *\r\n     * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\r\n     * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  // Delete or add children, then call\r\n     *  plugin.refresh();\r\n     *\r\n     */\r\n    LightGallery.prototype.refresh = function (galleryItems) {\r\n        if (!this.settings.dynamic) {\r\n            this.invalidateItems();\r\n        }\r\n        if (galleryItems) {\r\n            this.galleryItems = galleryItems;\r\n        }\r\n        else {\r\n            this.galleryItems = this.getItems();\r\n        }\r\n        this.updateControls();\r\n        this.openGalleryOnItemClick();\r\n        this.LGel.trigger(lGEvents.updateSlides);\r\n    };\r\n    LightGallery.prototype.updateControls = function () {\r\n        this.addSlideVideoInfo(this.galleryItems);\r\n        this.updateCounterTotal();\r\n        this.manageSingleSlideClassName();\r\n    };\r\n    LightGallery.prototype.destroyGallery = function () {\r\n        this.destroyModules(true);\r\n        if (!this.settings.dynamic) {\r\n            this.invalidateItems();\r\n        }\r\n        $LG(window).off(\".lg.global\" + this.lgId);\r\n        this.LGel.off('.lg');\r\n        this.$container.remove();\r\n    };\r\n    /**\r\n     * Destroy lightGallery.\r\n     * Destroy lightGallery and its plugin instances completely\r\n     *\r\n     * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.\r\n     * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.\r\n     * You can use refresh method most of the times.\r\n     * @category lGPublicMethods\r\n     * @example\r\n     *  const plugin = lightGallery();\r\n     *  plugin.destroy();\r\n     *\r\n     */\r\n    LightGallery.prototype.destroy = function () {\r\n        var closeTimeout = this.closeGallery(true);\r\n        if (closeTimeout) {\r\n            setTimeout(this.destroyGallery.bind(this), closeTimeout);\r\n        }\r\n        else {\r\n            this.destroyGallery();\r\n        }\r\n        return closeTimeout;\r\n    };\r\n    return LightGallery;\r\n}());\n\nfunction lightGallery(el, options) {\r\n    return new LightGallery(el, options);\r\n}\n\nexport default lightGallery;\n//# sourceMappingURL=lightgallery.es5.js.map\n","interface ThumbnailStrings {\n    toggleThumbnails: string;\n}\n\nexport interface ThumbnailsSettings {\n    /**\n     * Enable thumbnails for the gallery\n     */\n    thumbnail: boolean;\n\n    /*\n     * Enable thumbnail animation.\n     */\n    animateThumb: boolean;\n\n    /**\n     * Position of selected thumbnail.\n     */\n    currentPagerPosition: 'left' | 'middle' | 'right';\n\n    /**\n     * Position of thumbnails when the width of all thumbnails combined is less than the gallery's width.\n     *\n     */\n    alignThumbnails: 'left' | 'middle' | 'right';\n\n    /**\n     * Width of each thumbnails.\n     */\n    thumbWidth: number;\n\n    /**\n     * Height of each thumbnails.\n     */\n    thumbHeight: string;\n\n    /**\n     * Spacing between each thumbnails\n     */\n    thumbMargin: number;\n\n    /**\n     * control where the thumbnails should be appended.\n     * By default, thumbnails are appended to '.lg-components' which has inbuilt open close transitions\n     * If you don't want initial thumbnails transitions, or want to do more customization,\n     * you can append thumbnails to the lightGalley outer div -\n     * <a href=\"/demos/thumbnails/#static-thumbnails\">Demo</a>\n     */\n    appendThumbnailsTo: '.lg-outer' | '.lg-components';\n\n    /**\n     * Enable toggle captions and thumbnails.\n     * @description not applicable if allowMediaOverlap is false\n     */\n    toggleThumb: boolean;\n\n    /**\n     * Enables desktop mouse drag support for thumbnails.\n     */\n    enableThumbDrag: boolean;\n\n    /**\n     * Enables thumbnail touch/swipe support for touch devices\n     */\n    enableThumbSwipe: boolean;\n\n    /**\n     * By setting the thumbnailSwipeThreshold (in px) you can set how far the user must swipe for the next/prev slide.\n     */\n    thumbnailSwipeThreshold: number;\n\n    /**\n     * You can automatically load thumbnails for YouTube videos from YouTube by setting loadYouTubeThumbnail true\n     */\n    loadYouTubeThumbnail: boolean;\n\n    /**\n     * You can specify the thumbnail size by setting respective number.\n     */\n    //@todo add demo\n    youTubeThumbSize: number;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    thumbnailPluginStrings: ThumbnailStrings;\n}\n\nexport const thumbnailsSettings: ThumbnailsSettings = {\n    thumbnail: true,\n\n    animateThumb: true,\n    currentPagerPosition: 'middle',\n    alignThumbnails: 'middle',\n\n    thumbWidth: 100,\n    thumbHeight: '80px',\n    thumbMargin: 5,\n\n    appendThumbnailsTo: '.lg-components',\n    toggleThumb: false,\n\n    enableThumbDrag: true,\n    enableThumbSwipe: true,\n    thumbnailSwipeThreshold: 10,\n\n    loadYouTubeThumbnail: true,\n    youTubeThumbSize: 1,\n\n    thumbnailPluginStrings: {\n        toggleThumbnails: 'Toggle thumbnails',\n    } as ThumbnailStrings,\n};\n","import { LightGallery } from './lightgallery';\nimport { VideoSource } from './plugins/video/types';\n\n/**\n * List of lightGallery events\n * All events should be documented here\n * Below interfaces are used to build the website documentations\n * */\nexport const lGEvents: {\n    [key: string]: string;\n} = {\n    afterAppendSlide: 'lgAfterAppendSlide',\n    init: 'lgInit',\n    hasVideo: 'lgHasVideo',\n    containerResize: 'lgContainerResize',\n    updateSlides: 'lgUpdateSlides',\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\n    beforeOpen: 'lgBeforeOpen',\n    afterOpen: 'lgAfterOpen',\n    slideItemLoad: 'lgSlideItemLoad',\n    beforeSlide: 'lgBeforeSlide',\n    afterSlide: 'lgAfterSlide',\n    posterClick: 'lgPosterClick',\n    dragStart: 'lgDragStart',\n    dragMove: 'lgDragMove',\n    dragEnd: 'lgDragEnd',\n    beforeNextSlide: 'lgBeforeNextSlide',\n    beforePrevSlide: 'lgBeforePrevSlide',\n    beforeClose: 'lgBeforeClose',\n    afterClose: 'lgAfterClose',\n    rotateLeft: 'lgRotateLeft',\n    rotateRight: 'lgRotateRight',\n    flipHorizontal: 'lgFlipHorizontal',\n    flipVertical: 'lgFlipVertical',\n    autoplay: 'lgAutoplay',\n    autoplayStart: 'lgAutoplayStart',\n    autoplayStop: 'lgAutoplayStop',\n};\n\n// Follow the below format for the event documentation\n// @method is the method name when event is used with Angular/React components\n\n/**\n * Fired only once when lightGallery is initialized\n * @name lgInit\n * @method onInit\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action on lightGallery initialization.\n *   // Init event returns the plugin instance that can be used to call any lightGalley public method\n *   let pluginInstance = null;\n *   lg.addEventListener('lgInit', (event) => {\n *      pluginInstance = event.detail.instance;\n *   });\n *   lightGallery(lg);\n * @see <a href=\"/docs/methods\">Methods<a>\n */\nexport interface InitDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired when the slide content has been inserted into it's slide container.\n * @name lgAfterAppendSlide\n * @method onAfterAppendSlide\n */\nexport interface AfterAppendSlideEventDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired immediately before opening the gallery\n * @name lgBeforeOpen\n * @method onBeforeOpen\n */\nexport interface BeforeOpenDetail {}\n\n/**\n * Fired immediately after opening the gallery\n * @name lgAfterOpen\n * @method onAfterOpen\n */\nexport interface AfterOpenDetail {}\n\n/**\n * Fired once the media inside the slide has been completely loaded .\n * @name lgSlideItemLoad\n * @method onSlideItemLoad\n */\nexport interface SlideItemLoadDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * For the first slide, lightGallery adds some delay for displaying the loaded slide item.\n     * This delay is required for the transition effect when the slide item is displayed\n     * Respect the delay when you use this event\n     */\n    delay: number;\n\n    // Will be true for the first slide\n    isFirstSlide: boolean;\n}\n\n/**\n * Fired immediately before each slide transition.\n * @name lgBeforeSlide\n * @method onBeforeSlide\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action before each slide transition\n *   lg.addEventListener('lgBeforeSlide', (event) => {\n *       const { index, prevIndex } = event.detail;\n *       alert(index, prevIndex);\n *   });\n *   lightGallery(lg);\n */\nexport interface BeforeSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired immediately after each slide transition.\n * @name lgAfterSlide\n * @method onAfterSlide\n */\nexport interface AfterSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired when the video poster is clicked.\n * @name lgPosterClick\n * @method onPosterClick\n */\nexport interface PosterClickDetail {}\n\n/**\n * Fired when the drag event to move to different slide starts.\n * @name lgDragStart\n * @method onDragStart\n */\nexport interface DragStartDetail {}\n\n/**\n * Fired periodically during the drag operation.\n * @name lgDragMove\n * @method onDragMove\n */\nexport interface DragMoveDetail {}\n\n/**\n * Fired when the user has finished the drag operation\n * @name lgDragEnd\n * @method onDragEnd\n */\nexport interface DragEndDetail {}\n\n/**\n * Fired immediately before the start of the close process.\n * @name lgBeforeClose\n * @method onBeforeClose\n */\nexport interface BeforeCloseDetail {}\n\n/**\n * Fired immediately once lightGallery is closed.\n * @name lgAfterClose\n * @method onAfterClose\n */\nexport interface AfterCloseDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired immediately before each \"next\" slide transition\n * @name lgBeforeNextSlide\n * @method onBeforeNextSlide\n */\nexport interface BeforeNextSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired immediately before each \"prev\" slide transition\n * @name lgBeforePrevSlide\n * @method onBeforePrevSlide\n */\nexport interface BeforePrevSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired when the sub-html content (ex : title/ description) has been appended into the slide.\n * @name lgAfterAppendSubHtml\n * @method onAfterAppendSubHtml\n */\nexport interface AfterAppendSubHtmlDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the lightGallery container has been resized.\n * @name lgContainerResize\n * @method onContainerResize\n */\nexport interface ContainerResizeDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when lightGallery detects video slide\n * @name lgHasVideo\n * @method onHasVideo\n */\nexport interface HasVideoDetail {\n    /**\n     * Index of the slide,\n     */\n    index: number;\n    /**\n     * Video source\n     */\n    src: string;\n    /**\n     * HTML5 video source if available\n     * <p>\n       HTML5 video source = source: {\n            src: string;\n            type: string;\n        }[];\n        attributes: HTMLVideoElement;\n     * </p>\n     */\n    html5Video: VideoSource;\n    /**\n     * True if video has poster\n     */\n    hasPoster: boolean;\n}\n\n/**\n * Fired when the image is rotated in anticlockwise direction\n * @name lgRotateLeft\n * @method onRotateLeft\n */\nexport interface RotateLeftDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is rotated in clockwise direction\n * @name lgRotateRight\n * @method onRotateRight\n */\nexport interface RotateRightDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped horizontally\n * @name lgFlipHorizontal\n * @method onFlipHorizontal\n */\nexport interface FlipHorizontalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped vertically\n * @name lgFlipVertical\n * @method onFlipVertical\n */\nexport interface FlipVerticalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n","import {\n    ThumbnailsSettings,\n    thumbnailsSettings,\n} from './lg-thumbnail-settings';\nimport { LgQuery, lgQuery } from '../../lgQuery';\nimport { LightGallery } from '../../lightgallery';\nimport { GalleryItem } from '../../lg-utils';\nimport { lGEvents } from '../../lg-events';\n\ninterface ThumbDragUtils {\n    cords: {\n        startX: number;\n        endX: number;\n    };\n    isMoved: boolean;\n    newTranslateX: number;\n    startTime: Date;\n    endTime: Date;\n    touchMoveTime: number;\n}\ninterface ThumbnailGalleryItem extends GalleryItem {\n    thumb: string;\n}\nexport default class Thumbnail {\n    private core: LightGallery;\n    private $thumbOuter!: lgQuery;\n    private $lgThumb!: lgQuery;\n    private thumbOuterWidth = 0;\n    private thumbTotalWidth = 0;\n    private translateX = 0;\n    private thumbClickable = false;\n    private settings!: ThumbnailsSettings;\n    private $LG!: LgQuery;\n    constructor(instance: LightGallery, $LG: LgQuery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n\n        return this;\n    }\n\n    init(): void {\n        // extend module default settings with lightGallery core settings\n        this.settings = {\n            ...thumbnailsSettings,\n            ...this.core.settings,\n        };\n        this.thumbOuterWidth = 0;\n        this.thumbTotalWidth =\n            this.core.galleryItems.length *\n            (this.settings.thumbWidth + this.settings.thumbMargin);\n\n        // Thumbnail animation value\n        this.translateX = 0;\n\n        this.setAnimateThumbStyles();\n\n        if (!this.core.settings.allowMediaOverlap) {\n            this.settings.toggleThumb = false;\n        }\n\n        if (this.settings.thumbnail) {\n            this.build();\n            if (this.settings.animateThumb) {\n                if (this.settings.enableThumbDrag) {\n                    this.enableThumbDrag();\n                }\n\n                if (this.settings.enableThumbSwipe) {\n                    this.enableThumbSwipe();\n                }\n\n                this.thumbClickable = false;\n            } else {\n                this.thumbClickable = true;\n            }\n\n            this.toggleThumbBar();\n            this.thumbKeyPress();\n        }\n    }\n\n    build(): void {\n        this.setThumbMarkup();\n        this.manageActiveClassOnSlideChange();\n        this.$lgThumb.first().on('click.lg touchend.lg', (e: CustomEvent) => {\n            const $target = this.$LG(e.target);\n            if (!$target.hasAttribute('data-lg-item-id')) {\n                return;\n            }\n            setTimeout(() => {\n                // In IE9 and bellow touch does not support\n                // Go to slide if browser does not support css transitions\n                if (this.thumbClickable && !this.core.lgBusy) {\n                    const index = parseInt($target.attr('data-lg-item-id'));\n                    this.core.slide(index, false, true, false);\n                }\n            }, 50);\n        });\n\n        this.core.LGel.on(`${lGEvents.beforeSlide}.thumb`, (event) => {\n            const { index } = event.detail;\n            this.animateThumb(index);\n        });\n        this.core.LGel.on(`${lGEvents.beforeOpen}.thumb`, () => {\n            this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n        });\n\n        this.core.LGel.on(`${lGEvents.updateSlides}.thumb`, () => {\n            this.rebuildThumbnails();\n        });\n        this.core.LGel.on(`${lGEvents.containerResize}.thumb`, () => {\n            if (!this.core.lgOpened) return;\n            setTimeout(() => {\n                this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n                this.animateThumb(this.core.index);\n                this.thumbOuterWidth = this.core.outer.get().offsetWidth;\n            }, 50);\n        });\n    }\n\n    setThumbMarkup(): void {\n        let thumbOuterClassNames = 'lg-thumb-outer ';\n\n        if (this.settings.alignThumbnails) {\n            thumbOuterClassNames += `lg-thumb-align-${this.settings.alignThumbnails}`;\n        }\n\n        const html = `<div class=\"${thumbOuterClassNames}\">\n        <div class=\"lg-thumb lg-group\">\n        </div>\n        </div>`;\n\n        this.core.outer.addClass('lg-has-thumb');\n\n        if (this.settings.appendThumbnailsTo === '.lg-components') {\n            this.core.$lgComponents.append(html);\n        } else {\n            this.core.outer.append(html);\n        }\n\n        this.$thumbOuter = this.core.outer.find('.lg-thumb-outer').first();\n        this.$lgThumb = this.core.outer.find('.lg-thumb').first();\n\n        if (this.settings.animateThumb) {\n            this.core.outer\n                .find('.lg-thumb')\n                .css('transition-duration', this.core.settings.speed + 'ms')\n                .css('width', this.thumbTotalWidth + 'px')\n                .css('position', 'relative');\n        }\n\n        this.setThumbItemHtml(\n            (this.core.galleryItems as unknown) as ThumbnailGalleryItem[],\n        );\n    }\n\n    enableThumbDrag(): void {\n        let thumbDragUtils: ThumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0,\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0,\n        };\n\n        let isDragging = false;\n\n        this.$thumbOuter.addClass('lg-grab');\n\n        this.core.outer\n            .find('.lg-thumb')\n            .first()\n            .on('mousedown.lg.thumb', (e) => {\n                if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                    // execute only on .lg-object\n                    e.preventDefault();\n                    thumbDragUtils.cords.startX = e.pageX;\n\n                    thumbDragUtils.startTime = new Date();\n                    this.thumbClickable = false;\n\n                    isDragging = true;\n\n                    // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                    this.core.outer.get().scrollLeft += 1;\n                    this.core.outer.get().scrollLeft -= 1;\n\n                    // *\n                    this.$thumbOuter\n                        .removeClass('lg-grab')\n                        .addClass('lg-grabbing');\n                }\n            });\n\n        this.$LG(window).on(\n            `mousemove.lg.thumb.global${this.core.lgId}`,\n            (e) => {\n                if (!this.core.lgOpened) return;\n                if (isDragging) {\n                    thumbDragUtils.cords.endX = e.pageX;\n\n                    thumbDragUtils = this.onThumbTouchMove(thumbDragUtils);\n                }\n            },\n        );\n\n        this.$LG(window).on(`mouseup.lg.thumb.global${this.core.lgId}`, () => {\n            if (!this.core.lgOpened) return;\n            if (thumbDragUtils.isMoved) {\n                thumbDragUtils = this.onThumbTouchEnd(thumbDragUtils);\n            } else {\n                this.thumbClickable = true;\n            }\n\n            if (isDragging) {\n                isDragging = false;\n                this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');\n            }\n        });\n    }\n\n    enableThumbSwipe(): void {\n        let thumbDragUtils: ThumbDragUtils = {\n            cords: {\n                startX: 0,\n                endX: 0,\n            },\n            isMoved: false,\n            newTranslateX: 0,\n            startTime: new Date(),\n            endTime: new Date(),\n            touchMoveTime: 0,\n        };\n\n        this.$lgThumb.on('touchstart.lg', (e: TouchEvent) => {\n            if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.startX = e.targetTouches[0].pageX;\n                this.thumbClickable = false;\n                thumbDragUtils.startTime = new Date();\n            }\n        });\n\n        this.$lgThumb.on('touchmove.lg', (e: TouchEvent) => {\n            if (this.thumbTotalWidth > this.thumbOuterWidth) {\n                e.preventDefault();\n                thumbDragUtils.cords.endX = e.targetTouches[0].pageX;\n                thumbDragUtils = this.onThumbTouchMove(thumbDragUtils);\n            }\n        });\n\n        this.$lgThumb.on('touchend.lg', () => {\n            if (thumbDragUtils.isMoved) {\n                thumbDragUtils = this.onThumbTouchEnd(thumbDragUtils);\n            } else {\n                this.thumbClickable = true;\n            }\n        });\n    }\n\n    // Rebuild thumbnails\n    rebuildThumbnails(): void {\n        // Remove transitions\n        this.$thumbOuter.addClass('lg-rebuilding-thumbnails');\n        setTimeout(() => {\n            this.thumbTotalWidth =\n                this.core.galleryItems.length *\n                (this.settings.thumbWidth + this.settings.thumbMargin);\n            this.$lgThumb.css('width', this.thumbTotalWidth + 'px');\n            this.$lgThumb.empty();\n            this.setThumbItemHtml(\n                (this.core.galleryItems as unknown) as ThumbnailGalleryItem[],\n            );\n            this.animateThumb(this.core.index);\n        }, 50);\n        setTimeout(() => {\n            this.$thumbOuter.removeClass('lg-rebuilding-thumbnails');\n        }, 200);\n    }\n\n    // @ts-check\n\n    setTranslate(value: number): void {\n        this.$lgThumb.css(\n            'transform',\n            'translate3d(-' + value + 'px, 0px, 0px)',\n        );\n    }\n\n    getPossibleTransformX(left: number): number {\n        if (left > this.thumbTotalWidth - this.thumbOuterWidth) {\n            left = this.thumbTotalWidth - this.thumbOuterWidth;\n        }\n\n        if (left < 0) {\n            left = 0;\n        }\n        return left;\n    }\n\n    animateThumb(index: number): void {\n        this.$lgThumb.css(\n            'transition-duration',\n            this.core.settings.speed + 'ms',\n        );\n        if (this.settings.animateThumb) {\n            let position = 0;\n            switch (this.settings.currentPagerPosition) {\n                case 'left':\n                    position = 0;\n                    break;\n                case 'middle':\n                    position =\n                        this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;\n                    break;\n                case 'right':\n                    position = this.thumbOuterWidth - this.settings.thumbWidth;\n            }\n            this.translateX =\n                (this.settings.thumbWidth + this.settings.thumbMargin) * index -\n                1 -\n                position;\n            if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) {\n                this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;\n            }\n\n            if (this.translateX < 0) {\n                this.translateX = 0;\n            }\n\n            this.setTranslate(this.translateX);\n        }\n    }\n\n    onThumbTouchMove(thumbDragUtils: ThumbDragUtils): ThumbDragUtils {\n        thumbDragUtils.newTranslateX = this.translateX;\n        thumbDragUtils.isMoved = true;\n\n        thumbDragUtils.touchMoveTime = new Date().valueOf();\n\n        thumbDragUtils.newTranslateX -=\n            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n\n        thumbDragUtils.newTranslateX = this.getPossibleTransformX(\n            thumbDragUtils.newTranslateX,\n        );\n\n        // move current slide\n        this.setTranslate(thumbDragUtils.newTranslateX);\n        this.$thumbOuter.addClass('lg-dragging');\n\n        return thumbDragUtils;\n    }\n\n    onThumbTouchEnd(thumbDragUtils: ThumbDragUtils): ThumbDragUtils {\n        thumbDragUtils.isMoved = false;\n        thumbDragUtils.endTime = new Date();\n        this.$thumbOuter.removeClass('lg-dragging');\n\n        const touchDuration =\n            thumbDragUtils.endTime.valueOf() -\n            thumbDragUtils.startTime.valueOf();\n        let distanceXnew =\n            thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\n        let speedX = Math.abs(distanceXnew) / touchDuration;\n        // Some magical numbers\n        // Can be improved\n        if (\n            speedX > 0.15 &&\n            thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30\n        ) {\n            speedX += 1;\n\n            if (speedX > 2) {\n                speedX += 1;\n            }\n            speedX =\n                speedX +\n                speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);\n            this.$lgThumb.css(\n                'transition-duration',\n                Math.min(speedX - 1, 2) + 'settings',\n            );\n\n            distanceXnew = distanceXnew * speedX;\n\n            this.translateX = this.getPossibleTransformX(\n                this.translateX - distanceXnew,\n            );\n            this.setTranslate(this.translateX);\n        } else {\n            this.translateX = thumbDragUtils.newTranslateX;\n        }\n        if (\n            Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) <\n            this.settings.thumbnailSwipeThreshold\n        ) {\n            this.thumbClickable = true;\n        }\n\n        return thumbDragUtils;\n    }\n\n    getThumbHtml(thumb: string, index: number, alt?: string): HTMLElement {\n        const slideVideoInfo =\n            this.core.galleryItems[index].__slideVideoInfo || {};\n        let thumbImg;\n\n        if (slideVideoInfo.youtube) {\n            if (this.settings.loadYouTubeThumbnail) {\n                thumbImg =\n                    '//img.youtube.com/vi/' +\n                    slideVideoInfo.youtube[1] +\n                    '/' +\n                    this.settings.youTubeThumbSize +\n                    '.jpg';\n            } else {\n                thumbImg = thumb;\n            }\n        } else {\n            thumbImg = thumb;\n        }\n\n        const div = document.createElement('div');\n        div.setAttribute('data-lg-item-id', index + '');\n        div.className = `lg-thumb-item ${\n            index === this.core.index ? 'active' : ''\n        }`;\n        div.style.cssText = `width: ${this.settings.thumbWidth}px; height: ${this.settings.thumbHeight}; margin-right: ${this.settings.thumbMargin}px;`;\n        const img = document.createElement('img');\n        img.alt = alt || '';\n        img.setAttribute('data-lg-item-id', index + '');\n        img.src = thumbImg;\n        div.appendChild(img);\n        return div;\n    }\n\n    setThumbItemHtml(items: ThumbnailGalleryItem[]): void {\n        for (let i = 0; i < items.length; i++) {\n            const thumb = this.getThumbHtml(items[i].thumb, i, items[i].alt);\n            this.$lgThumb.append(thumb);\n        }\n    }\n\n    setAnimateThumbStyles(): void {\n        if (this.settings.animateThumb) {\n            this.core.outer.addClass('lg-animate-thumb');\n        }\n    }\n\n    // Manage thumbnail active calss\n    manageActiveClassOnSlideChange(): void {\n        // manage active class for thumbnail\n        this.core.LGel.on(\n            `${lGEvents.beforeSlide}.thumb`,\n            (event: CustomEvent) => {\n                const $thumb = this.core.outer.find('.lg-thumb-item');\n                const { index } = event.detail;\n                $thumb.removeClass('active');\n                $thumb.eq(index).addClass('active');\n            },\n        );\n    }\n\n    // Toggle thumbnail bar\n    toggleThumbBar(): void {\n        if (this.settings.toggleThumb) {\n            this.core.outer.addClass('lg-can-toggle');\n            this.core.$toolbar.append(\n                '<button type=\"button\" aria-label=\"' +\n                    this.settings.thumbnailPluginStrings['toggleThumbnails'] +\n                    '\" class=\"lg-toggle-thumb lg-icon\"></button>',\n            );\n            this.core.outer\n                .find('.lg-toggle-thumb')\n                .first()\n                .on('click.lg', () => {\n                    this.core.outer.toggleClass('lg-components-open');\n                });\n        }\n    }\n\n    thumbKeyPress(): void {\n        this.$LG(window).on(`keydown.lg.thumb.global${this.core.lgId}`, (e) => {\n            if (!this.core.lgOpened || !this.settings.toggleThumb) return;\n\n            if (e.keyCode === 38) {\n                e.preventDefault();\n                this.core.outer.addClass('lg-components-open');\n            } else if (e.keyCode === 40) {\n                e.preventDefault();\n                this.core.outer.removeClass('lg-components-open');\n            }\n        });\n    }\n\n    destroy(): void {\n        if (this.settings.thumbnail) {\n            this.$LG(window).off(`.lg.thumb.global${this.core.lgId}`);\n            this.core.LGel.off('.lg.thumb');\n            this.core.LGel.off('.thumb');\n            this.$thumbOuter.remove();\n            this.core.outer.removeClass('lg-has-thumb');\n        }\n    }\n}\n","export interface ActualSizeIcons {\n    zoomIn: 'lg-zoom-in' | 'lg-actual-size';\n    zoomOut: 'lg-zoom-out' | 'lg-actual-size';\n}\n\nexport interface ZoomStrings {\n    zoomIn: string;\n    zoomOut: string;\n    viewActualSize: string;\n}\n\nexport interface ZoomSettings {\n    /**\n     * Value of zoom should be incremented/decremented\n     */\n    scale: number;\n\n    /**\n     * Enable/Disable zoom option\n     */\n    zoom: boolean;\n\n    /**\n     * Enable/Disable infinite zoom\n     * @description If you set this to true, you can zoom in more than the original size of the image.\n     */\n    infiniteZoom: boolean;\n\n    /**\n     * Enable actual size icon.\n     */\n    actualSize: boolean;\n\n    /**\n     * Once the slide transition is completed, how much time should take zoom plugin to activate\n     * @description Some css styles will be added to the images if zoom is enabled.\n     * So it might conflict if you add any custom styles to the images such as the initial transition while opening the gallery.\n     * So you can delay adding zoom related styles to the images by changing the value of enableZoomAfter.\n     */\n    enableZoomAfter: number;\n\n    /**\n     * Show zoom in, zoom out icons\n     */\n    showZoomInOutIcons: boolean;\n\n    /**\n     * Actual size icons classnames.\n     * Specify classnames for both ZoomIn and ZoomOut states\n     * You can use `actualSizeIcons: { zoomIn: 'lg-actual-size', zoomOut: 'lg-zoom-out' }`\n     * to show actual size icons instead of zoom in and zoom out icons.\n     */\n    actualSizeIcons: ActualSizeIcons;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    zoomPluginStrings: ZoomStrings;\n}\n\nexport const zoomSettings: ZoomSettings = {\n    scale: 1,\n    zoom: true,\n    infiniteZoom: true,\n    actualSize: true,\n    showZoomInOutIcons: false,\n    actualSizeIcons: {\n        zoomIn: 'lg-zoom-in',\n        zoomOut: 'lg-zoom-out',\n    } as ActualSizeIcons,\n    enableZoomAfter: 300,\n    zoomPluginStrings: {\n        zoomIn: 'Zoom in',\n        zoomOut: 'Zoom out',\n        viewActualSize: 'View actual size',\n    } as ZoomStrings,\n};\n","import { ZoomSettings, zoomSettings } from './lg-zoom-settings';\nimport { LgQuery, lgQuery } from '../../lgQuery';\nimport { LightGallery } from '../../lightgallery';\nimport { lGEvents } from '../../lg-events';\n\ninterface Coords {\n    x: number;\n    y: number;\n}\n\ninterface DragAllowedAxises {\n    allowX: boolean;\n    allowY: boolean;\n}\ninterface ZoomTouchEvent {\n    pageX: number;\n    touches: { pageY: number; pageX: number }[];\n    pageY: number;\n}\ninterface PossibleCords {\n    minX: number;\n    minY: number;\n    maxX: number;\n    maxY: number;\n}\n\nconst ZOOM_TRANSITION_DURATION = 500;\n\nexport default class Zoom {\n    private core: LightGallery;\n    private settings: ZoomSettings;\n    private $LG!: LgQuery;\n    private imageReset!: number | boolean;\n    zoomableTimeout: any;\n    positionChanged!: boolean;\n    zoomInProgress!: boolean;\n    pageX!: number;\n    pageY!: number;\n    scale!: number;\n\n    containerRect!: ClientRect;\n    dragAllowedAxises!: DragAllowedAxises;\n    top!: number;\n    left!: number;\n    scrollTop!: number;\n    constructor(instance: LightGallery, $LG: LgQuery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n\n        this.settings = { ...zoomSettings, ...this.core.settings };\n\n        return this;\n    }\n\n    // Append Zoom controls. Actual size, Zoom-in, Zoom-out\n    buildTemplates(): void {\n        let zoomIcons = this.settings.showZoomInOutIcons\n            ? `<button id=\"${this.core.getIdName(\n                  'lg-zoom-in',\n              )}\" type=\"button\" aria-label=\"${\n                  this.settings.zoomPluginStrings['zoomIn']\n              }\" class=\"lg-zoom-in lg-icon\"></button><button id=\"${this.core.getIdName(\n                  'lg-zoom-out',\n              )}\" type=\"button\" aria-label=\"${\n                  this.settings.zoomPluginStrings['zoomOut']\n              }\" class=\"lg-zoom-out lg-icon\"></button>`\n            : '';\n\n        if (this.settings.actualSize) {\n            zoomIcons += `<button id=\"${this.core.getIdName(\n                'lg-actual-size',\n            )}\" type=\"button\" aria-label=\"${\n                this.settings.zoomPluginStrings['viewActualSize']\n            }\" class=\"${\n                this.settings.actualSizeIcons.zoomIn\n            } lg-icon\"></button>`;\n        }\n\n        this.core.outer.addClass('lg-use-transition-for-zoom');\n\n        this.core.$toolbar.first().append(zoomIcons);\n    }\n\n    /**\n     * @desc Enable zoom option only once the image is completely loaded\n     * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\n     *\n     * Zoom styles are defined under lg-zoomable CSS class.\n     */\n    enableZoom(event: CustomEvent): void {\n        // delay will be 0 except first time\n        let _speed = this.settings.enableZoomAfter + event.detail.delay;\n\n        // set _speed value 0 if gallery opened from direct url and if it is first slide\n        if (\n            this.$LG('body').first().hasClass('lg-from-hash') &&\n            event.detail.delay\n        ) {\n            // will execute only once\n            _speed = 0;\n        } else {\n            // Remove lg-from-hash to enable starting animation.\n            this.$LG('body').first().removeClass('lg-from-hash');\n        }\n\n        this.zoomableTimeout = setTimeout(() => {\n            if (!this.isImageSlide(this.core.index)) {\n                return;\n            }\n            this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\n            if (event.detail.index === this.core.index) {\n                this.setZoomEssentials();\n            }\n        }, _speed + 30);\n    }\n\n    enableZoomOnSlideItemLoad(): void {\n        // Add zoomable class\n        this.core.LGel.on(\n            `${lGEvents.slideItemLoad}.zoom`,\n            this.enableZoom.bind(this),\n        );\n    }\n\n    getDragCords(e: MouseEvent): Coords {\n        return {\n            x: e.pageX,\n            y: e.pageY,\n        };\n    }\n    getSwipeCords(e: TouchEvent): Coords {\n        const x = e.touches[0].pageX;\n        const y = e.touches[0].pageY;\n        return {\n            x,\n            y,\n        };\n    }\n\n    getDragAllowedAxises(scale: number, scaleDiff?: number): DragAllowedAxises {\n        if (!this.containerRect) {\n            return {\n                allowX: false,\n                allowY: false,\n            };\n        }\n        const $image = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-image')\n            .first()\n            .get();\n\n        let height = 0;\n        let width = 0;\n        const rect = $image.getBoundingClientRect();\n        if (scale) {\n            height = $image.offsetHeight * scale;\n            width = $image.offsetWidth * scale;\n        } else if (scaleDiff) {\n            height = rect.height + scaleDiff * rect.height;\n            width = rect.width + scaleDiff * rect.width;\n        } else {\n            height = rect.height;\n            width = rect.width;\n        }\n        const allowY = height > this.containerRect.height;\n        const allowX = width > this.containerRect.width;\n        return {\n            allowX,\n            allowY,\n        };\n    }\n\n    setZoomEssentials(): void {\n        this.containerRect = this.core.$content.get().getBoundingClientRect();\n    }\n\n    /**\n     * @desc Image zoom\n     * Translate the wrap and scale the image to get better user experience\n     *\n     * @param {String} scale - Zoom decrement/increment value\n     */\n    zoomImage(\n        scale: number,\n        scaleDiff: number,\n        reposition: boolean,\n        resetToMax: boolean,\n    ): void {\n        if (Math.abs(scaleDiff) <= 0) return;\n\n        const offsetX = this.containerRect.width / 2 + this.containerRect.left;\n\n        const offsetY =\n            this.containerRect.height / 2 +\n            this.containerRect.top +\n            this.scrollTop;\n\n        let originalX;\n        let originalY;\n\n        if (scale === 1) {\n            this.positionChanged = false;\n        }\n\n        const dragAllowedAxises = this.getDragAllowedAxises(0, scaleDiff);\n\n        const { allowY, allowX } = dragAllowedAxises;\n        if (this.positionChanged) {\n            originalX = this.left / (this.scale - scaleDiff);\n            originalY = this.top / (this.scale - scaleDiff);\n            this.pageX = offsetX - originalX;\n            this.pageY = offsetY - originalY;\n\n            this.positionChanged = false;\n        }\n\n        const possibleSwipeCords = this.getPossibleSwipeDragCords(scaleDiff);\n\n        let x;\n        let y;\n        let _x = offsetX - this.pageX;\n        let _y = offsetY - this.pageY;\n\n        if (scale - scaleDiff > 1) {\n            const scaleVal = (scale - scaleDiff) / Math.abs(scaleDiff);\n            _x =\n                (scaleDiff < 0 ? -_x : _x) +\n                this.left * (scaleVal + (scaleDiff < 0 ? -1 : 1));\n            _y =\n                (scaleDiff < 0 ? -_y : _y) +\n                this.top * (scaleVal + (scaleDiff < 0 ? -1 : 1));\n            x = _x / scaleVal;\n            y = _y / scaleVal;\n        } else {\n            const scaleVal = (scale - scaleDiff) * scaleDiff;\n            x = _x * scaleVal;\n            y = _y * scaleVal;\n        }\n\n        if (reposition) {\n            if (allowX) {\n                if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {\n                    x = possibleSwipeCords.minX;\n                } else if (\n                    this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)\n                ) {\n                    x = possibleSwipeCords.maxX;\n                }\n            } else {\n                if (scale > 1) {\n                    if (x < possibleSwipeCords.minX) {\n                        x = possibleSwipeCords.minX;\n                    } else if (x > possibleSwipeCords.maxX) {\n                        x = possibleSwipeCords.maxX;\n                    }\n                }\n            }\n            // @todo fix this\n            if (allowY) {\n                if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {\n                    y = possibleSwipeCords.minY;\n                } else if (\n                    this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)\n                ) {\n                    y = possibleSwipeCords.maxY;\n                }\n            } else {\n                // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out\n                if (scale > 1) {\n                    //If image goes beyond viewport top, use the minim possible translate value\n                    if (y < possibleSwipeCords.minY) {\n                        y = possibleSwipeCords.minY;\n                    } else if (y > possibleSwipeCords.maxY) {\n                        y = possibleSwipeCords.maxY;\n                    }\n                }\n            }\n        }\n\n        this.setZoomStyles({\n            x: x,\n            y: y,\n            scale,\n        });\n\n        this.left = x;\n        this.top = y;\n\n        if (resetToMax) {\n            this.setZoomImageSize();\n        }\n    }\n\n    resetImageTranslate(index: number): void {\n        if (!this.isImageSlide(index)) {\n            return;\n        }\n        const $image = this.core.getSlideItem(index).find('.lg-image').first();\n        this.imageReset = false;\n        $image.removeClass(\n            'reset-transition reset-transition-y reset-transition-x',\n        );\n        this.core.outer.removeClass('lg-actual-size');\n        $image.css('width', 'auto').css('height', 'auto');\n        setTimeout(() => {\n            $image.removeClass('no-transition');\n        }, 10);\n    }\n\n    setZoomImageSize(): void {\n        const $image = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-image')\n            .first();\n\n        setTimeout(() => {\n            const actualSizeScale = this.getCurrentImageActualSizeScale();\n\n            if (this.scale >= actualSizeScale) {\n                $image.addClass('no-transition');\n                this.imageReset = true;\n            }\n        }, ZOOM_TRANSITION_DURATION);\n\n        setTimeout(() => {\n            const actualSizeScale = this.getCurrentImageActualSizeScale();\n\n            if (this.scale >= actualSizeScale) {\n                const dragAllowedAxises = this.getDragAllowedAxises(this.scale);\n\n                $image\n                    .css(\n                        'width',\n                        ($image.get() as HTMLImageElement).naturalWidth + 'px',\n                    )\n                    .css(\n                        'height',\n                        ($image.get() as HTMLImageElement).naturalHeight + 'px',\n                    );\n\n                this.core.outer.addClass('lg-actual-size');\n\n                if (dragAllowedAxises.allowX && dragAllowedAxises.allowY) {\n                    $image.addClass('reset-transition');\n                } else if (\n                    dragAllowedAxises.allowX &&\n                    !dragAllowedAxises.allowY\n                ) {\n                    $image.addClass('reset-transition-x');\n                } else if (\n                    !dragAllowedAxises.allowX &&\n                    dragAllowedAxises.allowY\n                ) {\n                    $image.addClass('reset-transition-y');\n                }\n            }\n        }, ZOOM_TRANSITION_DURATION + 50);\n    }\n\n    /**\n     * @desc apply scale3d to image and translate to image wrap\n     * @param {style} X,Y and scale\n     */\n    setZoomStyles(style: { x: number; y: number; scale: number }): void {\n        const $imageWrap = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-img-wrap')\n            .first();\n        const $image = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-image')\n            .first();\n        const $dummyImage = this.core.outer\n            .find('.lg-current .lg-dummy-img')\n            .first();\n        this.scale = style.scale;\n        $image.css(\n            'transform',\n            'scale3d(' + style.scale + ', ' + style.scale + ', 1)',\n        );\n\n        $dummyImage.css(\n            'transform',\n            'scale3d(' + style.scale + ', ' + style.scale + ', 1)',\n        );\n\n        const transform =\n            'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';\n        $imageWrap.css('transform', transform);\n    }\n\n    /**\n     * @param index - Index of the current slide\n     * @param event - event will be available only if the function is called on clicking/taping the imags\n     */\n    setActualSize(index: number, event?: ZoomTouchEvent): void {\n        if (this.zoomInProgress) {\n            return;\n        }\n        this.zoomInProgress = true;\n        const currentItem = this.core.galleryItems[this.core.index];\n        this.resetImageTranslate(index);\n        setTimeout(() => {\n            // Allow zoom only on image\n            if (\n                !currentItem.src ||\n                this.core.outer.hasClass('lg-first-slide-loading')\n            ) {\n                return;\n            }\n            const scale = this.getCurrentImageActualSizeScale();\n            const prevScale = this.scale;\n            if (this.core.outer.hasClass('lg-zoomed')) {\n                this.scale = 1;\n            } else {\n                this.scale = this.getScale(scale);\n            }\n            this.setPageCords(event);\n\n            this.beginZoom(this.scale);\n            this.zoomImage(this.scale, this.scale - prevScale, true, true);\n        }, 50);\n        setTimeout(() => {\n            this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\n        }, 60);\n        setTimeout(() => {\n            this.zoomInProgress = false;\n        }, ZOOM_TRANSITION_DURATION + 110);\n    }\n\n    getNaturalWidth(index: number): number {\n        const $image = this.core.getSlideItem(index).find('.lg-image').first();\n\n        const naturalWidth = this.core.galleryItems[index].width;\n        return naturalWidth\n            ? parseFloat(naturalWidth)\n            : undefined || ($image.get() as any).naturalWidth;\n    }\n\n    getActualSizeScale(naturalWidth: number, width: number): number {\n        let _scale;\n        let scale;\n        if (naturalWidth >= width) {\n            _scale = naturalWidth / width;\n            scale = _scale || 2;\n        } else {\n            scale = 1;\n        }\n        return scale;\n    }\n\n    getCurrentImageActualSizeScale(): number {\n        const $image = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-image')\n            .first();\n        const width = $image.get().offsetWidth;\n        const naturalWidth = this.getNaturalWidth(this.core.index) || width;\n        return this.getActualSizeScale(naturalWidth, width);\n    }\n\n    getPageCords(event?: ZoomTouchEvent): Coords {\n        const cords: Coords = {} as Coords;\n        if (event) {\n            cords.x = event.pageX || event.touches[0].pageX;\n            cords.y = event.pageY || event.touches[0].pageY;\n        } else {\n            const containerRect = this.core.$content\n                .get()\n                .getBoundingClientRect();\n            cords.x = containerRect.width / 2 + containerRect.left;\n            cords.y =\n                containerRect.height / 2 + this.scrollTop + containerRect.top;\n        }\n        return cords;\n    }\n\n    setPageCords(event?: ZoomTouchEvent): void {\n        const pageCords = this.getPageCords(event);\n\n        this.pageX = pageCords.x;\n        this.pageY = pageCords.y;\n    }\n\n    manageActualPixelClassNames(): void {\n        const $actualSize = this.core.getElementById('lg-actual-size');\n        $actualSize\n            .removeClass(this.settings.actualSizeIcons.zoomIn)\n            .addClass(this.settings.actualSizeIcons.zoomOut);\n    }\n\n    // If true, zoomed - in else zoomed out\n    beginZoom(scale: number): boolean {\n        this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\n        if (scale > 1) {\n            this.core.outer.addClass('lg-zoomed');\n            this.manageActualPixelClassNames();\n        } else {\n            this.resetZoom();\n        }\n        return scale > 1;\n    }\n\n    getScale(scale: number): number {\n        const actualSizeScale = this.getCurrentImageActualSizeScale();\n        if (scale < 1) {\n            scale = 1;\n        } else if (scale > actualSizeScale) {\n            scale = actualSizeScale;\n        }\n        return scale;\n    }\n\n    init(): void {\n        if (!this.settings.zoom) {\n            return;\n        }\n        this.buildTemplates();\n        this.enableZoomOnSlideItemLoad();\n\n        let tapped: ReturnType<typeof setTimeout> | null = null;\n\n        this.core.outer.on('dblclick.lg', (event) => {\n            if (!this.$LG(event.target).hasClass('lg-image')) {\n                return;\n            }\n            this.setActualSize(this.core.index, event);\n        });\n\n        this.core.outer.on('touchstart.lg', (event) => {\n            const $target = this.$LG(event.target);\n            if (event.touches.length === 1 && $target.hasClass('lg-image')) {\n                if (!tapped) {\n                    tapped = setTimeout(() => {\n                        tapped = null;\n                    }, 300);\n                } else {\n                    clearTimeout(tapped);\n                    tapped = null;\n                    event.preventDefault();\n                    this.setActualSize(this.core.index, event);\n                }\n            }\n        });\n\n        this.core.LGel.on(\n            `${lGEvents.containerResize}.zoom ${lGEvents.rotateRight}.zoom ${lGEvents.rotateLeft}.zoom ${lGEvents.flipHorizontal}.zoom ${lGEvents.flipVertical}.zoom`,\n            () => {\n                if (\n                    !this.core.lgOpened ||\n                    !this.isImageSlide(this.core.index) ||\n                    this.core.touchAction\n                ) {\n                    return;\n                }\n                const _LGel = this.core\n                    .getSlideItem(this.core.index)\n                    .find('.lg-img-wrap')\n                    .first();\n                this.top = 0;\n                this.left = 0;\n                this.setZoomEssentials();\n                this.setZoomSwipeStyles(_LGel, { x: 0, y: 0 });\n                this.positionChanged = true;\n            },\n        );\n        // Update zoom on resize and orientationchange\n        this.$LG(window).on(`scroll.lg.zoom.global${this.core.lgId}`, () => {\n            if (!this.core.lgOpened) return;\n            this.scrollTop = this.$LG(window).scrollTop();\n        });\n\n        this.core.getElementById('lg-zoom-out').on('click.lg', () => {\n            // Allow zoom only on image\n            if (!this.isImageSlide(this.core.index)) {\n                return;\n            }\n\n            let timeout = 0;\n            if (this.imageReset) {\n                this.resetImageTranslate(this.core.index);\n                timeout = 50;\n            }\n            setTimeout(() => {\n                let scale = this.scale - this.settings.scale;\n\n                if (scale < 1) {\n                    scale = 1;\n                }\n                this.beginZoom(scale);\n                this.zoomImage(\n                    scale,\n                    -this.settings.scale,\n                    true,\n                    !this.settings.infiniteZoom,\n                );\n            }, timeout);\n        });\n\n        this.core.getElementById('lg-zoom-in').on('click.lg', () => {\n            this.zoomIn();\n        });\n\n        this.core.getElementById('lg-actual-size').on('click.lg', () => {\n            this.setActualSize(this.core.index);\n        });\n\n        this.core.LGel.on(`${lGEvents.beforeOpen}.zoom`, () => {\n            this.core.outer.find('.lg-item').removeClass('lg-zoomable');\n        });\n        this.core.LGel.on(`${lGEvents.afterOpen}.zoom`, () => {\n            this.scrollTop = this.$LG(window).scrollTop();\n\n            // Set the initial value center\n            this.pageX = this.core.outer.width() / 2;\n            this.pageY = this.core.outer.height() / 2 + this.scrollTop;\n\n            this.scale = 1;\n        });\n\n        // Reset zoom on slide change\n        this.core.LGel.on(\n            `${lGEvents.afterSlide}.zoom`,\n            (event: CustomEvent) => {\n                const { prevIndex } = event.detail;\n                this.scale = 1;\n                this.positionChanged = false;\n                this.zoomInProgress = false;\n                this.resetZoom(prevIndex);\n                this.resetImageTranslate(prevIndex);\n                if (this.isImageSlide(this.core.index)) {\n                    this.setZoomEssentials();\n                }\n            },\n        );\n\n        // Drag option after zoom\n        this.zoomDrag();\n\n        this.pinchZoom();\n\n        this.zoomSwipe();\n\n        // Store the zoomable timeout value just to clear it while closing\n        this.zoomableTimeout = false;\n        this.positionChanged = false;\n        this.zoomInProgress = false;\n    }\n\n    zoomIn(): void {\n        // Allow zoom only on image\n        if (!this.isImageSlide(this.core.index)) {\n            return;\n        }\n\n        let scale = this.scale + this.settings.scale;\n\n        if (!this.settings.infiniteZoom) {\n            scale = this.getScale(scale);\n        }\n        this.beginZoom(scale);\n        this.zoomImage(\n            scale,\n            Math.min(this.settings.scale, scale - this.scale),\n            true,\n            !this.settings.infiniteZoom,\n        );\n    }\n\n    // Reset zoom effect\n    resetZoom(index?: number): void {\n        this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\n        const $actualSize = this.core.getElementById('lg-actual-size');\n        const $item = this.core.getSlideItem(\n            index !== undefined ? index : this.core.index,\n        );\n        $actualSize\n            .removeClass(this.settings.actualSizeIcons.zoomOut)\n            .addClass(this.settings.actualSizeIcons.zoomIn);\n        $item.find('.lg-img-wrap').first().removeAttr('style');\n        $item.find('.lg-image').first().removeAttr('style');\n        this.scale = 1;\n        this.left = 0;\n        this.top = 0;\n\n        // Reset pagx pagy values to center\n        this.setPageCords();\n    }\n\n    getTouchDistance(e: TouchEvent): number {\n        return Math.sqrt(\n            (e.touches[0].pageX - e.touches[1].pageX) *\n                (e.touches[0].pageX - e.touches[1].pageX) +\n                (e.touches[0].pageY - e.touches[1].pageY) *\n                    (e.touches[0].pageY - e.touches[1].pageY),\n        );\n    }\n\n    pinchZoom(): void {\n        let startDist = 0;\n        let pinchStarted = false;\n        let initScale = 1;\n        let prevScale = 0;\n\n        let $item = this.core.getSlideItem(this.core.index);\n\n        this.core.outer.on('touchstart.lg', (e) => {\n            $item = this.core.getSlideItem(this.core.index);\n            if (!this.isImageSlide(this.core.index)) {\n                return;\n            }\n            if (e.touches.length === 2) {\n                e.preventDefault();\n                if (this.core.outer.hasClass('lg-first-slide-loading')) {\n                    return;\n                }\n                initScale = this.scale || 1;\n                this.core.outer.removeClass(\n                    'lg-zoom-drag-transition lg-zoom-dragging',\n                );\n\n                this.setPageCords(e);\n                this.resetImageTranslate(this.core.index);\n\n                this.core.touchAction = 'pinch';\n\n                startDist = this.getTouchDistance(e);\n            }\n        });\n\n        this.core.$inner.on('touchmove.lg', (e) => {\n            if (\n                e.touches.length === 2 &&\n                this.core.touchAction === 'pinch' &&\n                (this.$LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target))\n            ) {\n                e.preventDefault();\n                const endDist = this.getTouchDistance(e);\n\n                const distance = startDist - endDist;\n                if (!pinchStarted && Math.abs(distance) > 5) {\n                    pinchStarted = true;\n                }\n                if (pinchStarted) {\n                    prevScale = this.scale;\n                    const _scale = Math.max(1, initScale + -distance * 0.02);\n                    this.scale =\n                        Math.round((_scale + Number.EPSILON) * 100) / 100;\n                    const diff = this.scale - prevScale;\n                    this.zoomImage(\n                        this.scale,\n                        Math.round((diff + Number.EPSILON) * 100) / 100,\n                        false,\n                        false,\n                    );\n                }\n            }\n        });\n\n        this.core.$inner.on('touchend.lg', (e) => {\n            if (\n                this.core.touchAction === 'pinch' &&\n                (this.$LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target))\n            ) {\n                pinchStarted = false;\n                startDist = 0;\n                if (this.scale <= 1) {\n                    this.resetZoom();\n                } else {\n                    const actualSizeScale = this.getCurrentImageActualSizeScale();\n\n                    if (this.scale >= actualSizeScale) {\n                        let scaleDiff = actualSizeScale - this.scale;\n                        if (scaleDiff === 0) {\n                            scaleDiff = 0.01;\n                        }\n                        this.zoomImage(actualSizeScale, scaleDiff, false, true);\n                    }\n                    this.manageActualPixelClassNames();\n\n                    this.core.outer.addClass('lg-zoomed');\n                }\n                this.core.touchAction = undefined;\n            }\n        });\n    }\n\n    touchendZoom(\n        startCoords: Coords,\n        endCoords: Coords,\n        allowX: boolean,\n        allowY: boolean,\n        touchDuration: number,\n    ): void {\n        let distanceXnew = endCoords.x - startCoords.x;\n        let distanceYnew = endCoords.y - startCoords.y;\n\n        let speedX = Math.abs(distanceXnew) / touchDuration + 1;\n        let speedY = Math.abs(distanceYnew) / touchDuration + 1;\n\n        if (speedX > 2) {\n            speedX += 1;\n        }\n\n        if (speedY > 2) {\n            speedY += 1;\n        }\n\n        distanceXnew = distanceXnew * speedX;\n        distanceYnew = distanceYnew * speedY;\n\n        const _LGel = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-img-wrap')\n            .first();\n        const distance: Coords = {} as Coords;\n\n        distance.x = this.left + distanceXnew;\n        distance.y = this.top + distanceYnew;\n\n        const possibleSwipeCords = this.getPossibleSwipeDragCords();\n\n        if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\n            if (allowY) {\n                if (\n                    this.isBeyondPossibleTop(\n                        distance.y,\n                        possibleSwipeCords.minY,\n                    )\n                ) {\n                    distance.y = possibleSwipeCords.minY;\n                } else if (\n                    this.isBeyondPossibleBottom(\n                        distance.y,\n                        possibleSwipeCords.maxY,\n                    )\n                ) {\n                    distance.y = possibleSwipeCords.maxY;\n                }\n            }\n\n            if (allowX) {\n                if (\n                    this.isBeyondPossibleLeft(\n                        distance.x,\n                        possibleSwipeCords.minX,\n                    )\n                ) {\n                    distance.x = possibleSwipeCords.minX;\n                } else if (\n                    this.isBeyondPossibleRight(\n                        distance.x,\n                        possibleSwipeCords.maxX,\n                    )\n                ) {\n                    distance.x = possibleSwipeCords.maxX;\n                }\n            }\n\n            if (allowY) {\n                this.top = distance.y;\n            } else {\n                distance.y = this.top;\n            }\n\n            if (allowX) {\n                this.left = distance.x;\n            } else {\n                distance.x = this.left;\n            }\n\n            this.setZoomSwipeStyles(_LGel, distance);\n\n            this.positionChanged = true;\n        }\n    }\n\n    getZoomSwipeCords(\n        startCoords: Coords,\n        endCoords: Coords,\n        allowX: boolean,\n        allowY: boolean,\n        possibleSwipeCords: PossibleCords,\n    ): Coords {\n        const distance: Coords = {} as Coords;\n        if (allowY) {\n            distance.y = this.top + (endCoords.y - startCoords.y);\n            if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\n                const diffMinY = possibleSwipeCords.minY - distance.y;\n                distance.y = possibleSwipeCords.minY - diffMinY / 6;\n            } else if (\n                this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)\n            ) {\n                const diffMaxY = distance.y - possibleSwipeCords.maxY;\n                distance.y = possibleSwipeCords.maxY + diffMaxY / 6;\n            }\n        } else {\n            distance.y = this.top;\n        }\n\n        if (allowX) {\n            distance.x = this.left + (endCoords.x - startCoords.x);\n            if (\n                this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)\n            ) {\n                const diffMinX = possibleSwipeCords.minX - distance.x;\n                distance.x = possibleSwipeCords.minX - diffMinX / 6;\n            } else if (\n                this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)\n            ) {\n                const difMaxX = distance.x - possibleSwipeCords.maxX;\n                distance.x = possibleSwipeCords.maxX + difMaxX / 6;\n            }\n        } else {\n            distance.x = this.left;\n        }\n\n        return distance;\n    }\n\n    private isBeyondPossibleLeft(x: number, minX: number) {\n        return x >= minX;\n    }\n    private isBeyondPossibleRight(x: number, maxX: number) {\n        return x <= maxX;\n    }\n    private isBeyondPossibleTop(y: number, minY: number) {\n        return y >= minY;\n    }\n    private isBeyondPossibleBottom(y: number, maxY: number) {\n        return y <= maxY;\n    }\n\n    isImageSlide(index: number): boolean {\n        const currentItem = this.core.galleryItems[index];\n        return this.core.getSlideType(currentItem) === 'image';\n    }\n\n    getPossibleSwipeDragCords(scale?: number): PossibleCords {\n        const $image = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-image')\n            .first();\n\n        const { bottom } = this.core.mediaContainerPosition;\n\n        const imgRect = $image.get().getBoundingClientRect();\n\n        let imageHeight = imgRect.height;\n        let imageWidth = imgRect.width;\n\n        if (scale) {\n            imageHeight = imageHeight + scale * imageHeight;\n            imageWidth = imageWidth + scale * imageWidth;\n        }\n\n        const minY = (imageHeight - this.containerRect.height) / 2;\n        const maxY = (this.containerRect.height - imageHeight) / 2 + bottom;\n\n        const minX = (imageWidth - this.containerRect.width) / 2;\n\n        const maxX = (this.containerRect.width - imageWidth) / 2;\n\n        const possibleSwipeCords = {\n            minY: minY,\n            maxY: maxY,\n            minX: minX,\n            maxX: maxX,\n        };\n        return possibleSwipeCords;\n    }\n\n    setZoomSwipeStyles(\n        LGel: lgQuery,\n        distance: { x: number; y: number },\n    ): void {\n        LGel.css(\n            'transform',\n            'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)',\n        );\n    }\n\n    zoomSwipe(): void {\n        let startCoords = {} as Coords;\n        let endCoords = {} as Coords;\n        let isMoved = false;\n\n        // Allow x direction drag\n        let allowX = false;\n\n        // Allow Y direction drag\n        let allowY = false;\n\n        let startTime: Date = new Date();\n        let endTime: Date = new Date();\n        let possibleSwipeCords: PossibleCords;\n\n        let _LGel: lgQuery;\n\n        let $item = this.core.getSlideItem(this.core.index);\n\n        this.core.$inner.on('touchstart.lg', (e) => {\n            // Allow zoom only on image\n            if (!this.isImageSlide(this.core.index)) {\n                return;\n            }\n            $item = this.core.getSlideItem(this.core.index);\n            if (\n                (this.$LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target)) &&\n                e.touches.length === 1 &&\n                this.core.outer.hasClass('lg-zoomed')\n            ) {\n                e.preventDefault();\n                startTime = new Date();\n                this.core.touchAction = 'zoomSwipe';\n                _LGel = this.core\n                    .getSlideItem(this.core.index)\n                    .find('.lg-img-wrap')\n                    .first();\n\n                const dragAllowedAxises = this.getDragAllowedAxises(0);\n\n                allowY = dragAllowedAxises.allowY;\n                allowX = dragAllowedAxises.allowX;\n                if (allowX || allowY) {\n                    startCoords = this.getSwipeCords(e);\n                }\n\n                possibleSwipeCords = this.getPossibleSwipeDragCords();\n\n                // reset opacity and transition duration\n                this.core.outer.addClass(\n                    'lg-zoom-dragging lg-zoom-drag-transition',\n                );\n            }\n        });\n\n        this.core.$inner.on('touchmove.lg', (e) => {\n            if (\n                e.touches.length === 1 &&\n                this.core.touchAction === 'zoomSwipe' &&\n                (this.$LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target))\n            ) {\n                e.preventDefault();\n                this.core.touchAction = 'zoomSwipe';\n\n                endCoords = this.getSwipeCords(e);\n\n                const distance = this.getZoomSwipeCords(\n                    startCoords,\n                    endCoords,\n                    allowX,\n                    allowY,\n                    possibleSwipeCords,\n                );\n\n                if (\n                    Math.abs(endCoords.x - startCoords.x) > 15 ||\n                    Math.abs(endCoords.y - startCoords.y) > 15\n                ) {\n                    isMoved = true;\n                    this.setZoomSwipeStyles(_LGel, distance);\n                }\n            }\n        });\n\n        this.core.$inner.on('touchend.lg', (e) => {\n            if (\n                this.core.touchAction === 'zoomSwipe' &&\n                (this.$LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target))\n            ) {\n                e.preventDefault();\n                this.core.touchAction = undefined;\n                this.core.outer.removeClass('lg-zoom-dragging');\n                if (!isMoved) {\n                    return;\n                }\n                isMoved = false;\n                endTime = new Date();\n                const touchDuration = endTime.valueOf() - startTime.valueOf();\n                this.touchendZoom(\n                    startCoords,\n                    endCoords,\n                    allowX,\n                    allowY,\n                    touchDuration,\n                );\n            }\n        });\n    }\n\n    zoomDrag(): void {\n        let startCoords: Coords = {} as Coords;\n        let endCoords: Coords = {} as Coords;\n        let isDragging = false;\n        let isMoved = false;\n\n        // Allow x direction drag\n        let allowX = false;\n\n        // Allow Y direction drag\n        let allowY = false;\n\n        let startTime: number | Date;\n        let endTime;\n\n        let possibleSwipeCords: PossibleCords;\n\n        let _LGel: lgQuery;\n\n        this.core.outer.on('mousedown.lg.zoom', (e) => {\n            // Allow zoom only on image\n            if (!this.isImageSlide(this.core.index)) {\n                return;\n            }\n            const $item = this.core.getSlideItem(this.core.index);\n            if (\n                this.$LG(e.target).hasClass('lg-item') ||\n                $item.get().contains(e.target)\n            ) {\n                startTime = new Date();\n                _LGel = this.core\n                    .getSlideItem(this.core.index)\n                    .find('.lg-img-wrap')\n                    .first();\n\n                const dragAllowedAxises = this.getDragAllowedAxises(0);\n\n                allowY = dragAllowedAxises.allowY;\n                allowX = dragAllowedAxises.allowX;\n\n                if (this.core.outer.hasClass('lg-zoomed')) {\n                    if (\n                        this.$LG(e.target).hasClass('lg-object') &&\n                        (allowX || allowY)\n                    ) {\n                        e.preventDefault();\n                        startCoords = this.getDragCords(e);\n\n                        possibleSwipeCords = this.getPossibleSwipeDragCords();\n\n                        isDragging = true;\n\n                        this.core.outer\n                            .removeClass('lg-grab')\n                            .addClass(\n                                'lg-grabbing lg-zoom-drag-transition lg-zoom-dragging',\n                            );\n                        // reset opacity and transition duration\n                    }\n                }\n            }\n        });\n\n        this.$LG(window).on(\n            `mousemove.lg.zoom.global${this.core.lgId}`,\n            (e) => {\n                if (isDragging) {\n                    isMoved = true;\n                    endCoords = this.getDragCords(e);\n\n                    const distance = this.getZoomSwipeCords(\n                        startCoords,\n                        endCoords,\n                        allowX,\n                        allowY,\n                        possibleSwipeCords,\n                    );\n\n                    this.setZoomSwipeStyles(_LGel, distance);\n                }\n            },\n        );\n\n        this.$LG(window).on(`mouseup.lg.zoom.global${this.core.lgId}`, (e) => {\n            if (isDragging) {\n                endTime = new Date();\n                isDragging = false;\n                this.core.outer.removeClass('lg-zoom-dragging');\n\n                // Fix for chrome mouse move on click\n                if (\n                    isMoved &&\n                    (startCoords.x !== endCoords.x ||\n                        startCoords.y !== endCoords.y)\n                ) {\n                    endCoords = this.getDragCords(e);\n\n                    const touchDuration =\n                        endTime.valueOf() - startTime.valueOf();\n                    this.touchendZoom(\n                        startCoords,\n                        endCoords,\n                        allowX,\n                        allowY,\n                        touchDuration,\n                    );\n                }\n\n                isMoved = false;\n            }\n\n            this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\n        });\n    }\n\n    closeGallery(): void {\n        this.resetZoom();\n        this.zoomInProgress = false;\n    }\n\n    destroy(): void {\n        // Unbind all events added by lightGallery zoom plugin\n        this.$LG(window).off(`.lg.zoom.global${this.core.lgId}`);\n        this.core.LGel.off('.lg.zoom');\n        this.core.LGel.off('.zoom');\n        clearTimeout(this.zoomableTimeout);\n        this.zoomableTimeout = false;\n    }\n}\n","export interface AutoplayStrings {\n    toggleAutoplay: string;\n}\n\nexport interface AutoplaySettings {\n    /**\n     * Enable autoplay plugin\n     */\n    autoplay: boolean;\n\n    /**\n     * Enable slideshow autoplay\n     */\n    slideShowAutoplay: boolean;\n\n    /**\n     * The time (in ms) between each auto transition.\n     */\n    slideShowInterval: number;\n\n    /**\n     * Show autoplay progressBar\n     */\n    progressBar: boolean;\n\n    /**\n     * If false autoplay will be stopped after first user action\n     */\n    forceSlideShowAutoplay: boolean;\n\n    /**\n     * Show/hide autoplay controls.\n     */\n    autoplayControls: boolean;\n\n    /**\n     * Specify where the autoplay controls should be appended.\n     */\n    appendAutoplayControlsTo: string;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    autoplayPluginStrings: AutoplayStrings;\n}\nexport const autoplaySettings: AutoplaySettings = {\n    autoplay: true,\n    slideShowAutoplay: false,\n    slideShowInterval: 5000,\n    progressBar: true,\n    forceSlideShowAutoplay: false,\n    autoplayControls: true,\n    appendAutoplayControlsTo: '.lg-toolbar',\n    autoplayPluginStrings: {\n        toggleAutoplay: 'Toggle Autoplay',\n    } as AutoplayStrings,\n};\n","import { lGEvents } from '../../lg-events';\nimport { LightGallery } from '../../lightgallery';\nimport { AutoplaySettings, autoplaySettings } from './lg-autoplay-settings';\n\n/**\n * Creates the autoplay plugin.\n * @param {object} element - lightGallery element\n */\nexport default class Autoplay {\n    core: LightGallery;\n    settings: AutoplaySettings;\n    interval!: any;\n    fromAuto!: boolean;\n    pausedOnTouchDrag!: boolean;\n    pausedOnSlideChange!: boolean;\n\n    constructor(instance: LightGallery) {\n        this.core = instance;\n\n        // extend module default settings with lightGallery core settings\n        this.settings = { ...autoplaySettings, ...this.core.settings };\n\n        return this;\n    }\n\n    public init(): void {\n        if (!this.settings.autoplay) {\n            return;\n        }\n\n        this.interval = false;\n\n        // Identify if slide happened from autoplay\n        this.fromAuto = true;\n\n        // Identify if autoplay canceled from touch/drag\n        this.pausedOnTouchDrag = false;\n\n        this.pausedOnSlideChange = false;\n\n        // append autoplay controls\n        if (this.settings.autoplayControls) {\n            this.controls();\n        }\n\n        // Create progress bar\n        if (this.settings.progressBar) {\n            this.core.outer.append(\n                '<div class=\"lg-progress-bar\"><div class=\"lg-progress\"></div></div>',\n            );\n        }\n\n        // Start autoplay\n        if (this.settings.slideShowAutoplay) {\n            this.core.LGel.once(`${lGEvents.slideItemLoad}.autoplay`, () => {\n                this.startAutoPlay();\n            });\n        }\n\n        // cancel interval on touchstart and dragstart\n        this.core.LGel.on(\n            `${lGEvents.dragStart}.autoplay touchstart.lg.autoplay`,\n            () => {\n                if (this.interval) {\n                    this.stopAutoPlay();\n                    this.pausedOnTouchDrag = true;\n                }\n            },\n        );\n\n        // restore autoplay if autoplay canceled from touchstart / dragstart\n        this.core.LGel.on(\n            `${lGEvents.dragEnd}.autoplay touchend.lg.autoplay`,\n            () => {\n                if (!this.interval && this.pausedOnTouchDrag) {\n                    this.startAutoPlay();\n                    this.pausedOnTouchDrag = false;\n                }\n            },\n        );\n\n        this.core.LGel.on(`${lGEvents.beforeSlide}.autoplay`, () => {\n            this.showProgressBar();\n            if (!this.fromAuto && this.interval) {\n                this.stopAutoPlay();\n                this.pausedOnSlideChange = true;\n            } else {\n                this.pausedOnSlideChange = false;\n            }\n            this.fromAuto = false;\n        });\n\n        // restore autoplay if autoplay canceled from touchstart / dragstart\n        this.core.LGel.on(`${lGEvents.afterSlide}.autoplay`, () => {\n            if (\n                this.pausedOnSlideChange &&\n                !this.interval &&\n                this.settings.forceSlideShowAutoplay\n            ) {\n                this.startAutoPlay();\n                this.pausedOnSlideChange = false;\n            }\n        });\n\n        // set progress\n        this.showProgressBar();\n    }\n\n    private showProgressBar() {\n        if (this.settings.progressBar && this.fromAuto) {\n            const _$progressBar = this.core.outer.find('.lg-progress-bar');\n            const _$progress = this.core.outer.find('.lg-progress');\n            if (this.interval) {\n                _$progress.removeAttr('style');\n                _$progressBar.removeClass('lg-start');\n                setTimeout(() => {\n                    _$progress.css(\n                        'transition',\n                        'width ' +\n                            (this.core.settings.speed +\n                                this.settings.slideShowInterval) +\n                            'ms ease 0s',\n                    );\n                    _$progressBar.addClass('lg-start');\n                }, 20);\n            }\n        }\n    }\n\n    // Manage autoplay via play/stop buttons\n    private controls() {\n        const _html = `<button aria-label=\"${this.settings.autoplayPluginStrings['toggleAutoplay']}\" type=\"button\" class=\"lg-autoplay-button lg-icon\"></button>`;\n\n        // Append autoplay controls\n        this.core.outer\n            .find(this.settings.appendAutoplayControlsTo)\n            .append(_html);\n\n        this.core.outer\n            .find('.lg-autoplay-button')\n            .first()\n            .on('click.lg.autoplay', () => {\n                if (this.core.outer.hasClass('lg-show-autoplay')) {\n                    this.stopAutoPlay();\n                } else {\n                    if (!this.interval) {\n                        this.startAutoPlay();\n                    }\n                }\n            });\n    }\n\n    // Autostart gallery\n    public startAutoPlay(): void {\n        this.core.outer\n            .find('.lg-progress')\n            .css(\n                'transition',\n                'width ' +\n                    (this.core.settings.speed +\n                        this.settings.slideShowInterval) +\n                    'ms ease 0s',\n            );\n        this.core.outer.addClass('lg-show-autoplay');\n        this.core.outer.find('.lg-progress-bar').addClass('lg-start');\n        this.core.LGel.trigger(lGEvents.autoplayStart, {\n            index: this.core.index,\n        });\n\n        this.interval = setInterval(() => {\n            if (this.core.index + 1 < this.core.galleryItems.length) {\n                this.core.index++;\n            } else {\n                this.core.index = 0;\n            }\n\n            this.core.LGel.trigger(lGEvents.autoplay, {\n                index: this.core.index,\n            });\n\n            this.fromAuto = true;\n            this.core.slide(this.core.index, false, false, 'next');\n        }, this.core.settings.speed + this.settings.slideShowInterval);\n    }\n\n    // cancel Autostart\n    public stopAutoPlay(): void {\n        if (this.interval) {\n            this.core.LGel.trigger(lGEvents.autoplayStop, {\n                index: this.core.index,\n            });\n            this.core.outer.find('.lg-progress').removeAttr('style');\n            this.core.outer.removeClass('lg-show-autoplay');\n            this.core.outer.find('.lg-progress-bar').removeClass('lg-start');\n        }\n        clearInterval(this.interval);\n        this.interval = false;\n    }\n\n    public closeGallery(): void {\n        this.stopAutoPlay();\n    }\n    public destroy(): void {\n        if (this.settings.autoplay) {\n            this.core.outer.find('.lg-progress-bar').remove();\n        }\n        // Remove all event listeners added by autoplay plugin\n        this.core.LGel.off('.lg.autoplay');\n        this.core.LGel.off('.autoplay');\n    }\n}\n","export interface FullscreenStrings {\n    toggleFullscreen: string;\n}\nexport interface FullscreenSettings {\n    /**\n     * Enable/Disable fullscreen option\n     */\n    fullScreen: boolean;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    fullscreenPluginStrings: FullscreenStrings;\n}\n\nexport const fullscreenSettings: FullscreenSettings = {\n    fullScreen: true,\n    fullscreenPluginStrings: {\n        toggleFullscreen: 'Toggle Fullscreen',\n    } as FullscreenStrings,\n};\n","import { LgQuery } from '../../lgQuery';\nimport { LightGallery } from '../../lightgallery';\nimport {\n    FullscreenSettings,\n    fullscreenSettings,\n} from './lg-fullscreen-settings';\n\ndeclare let document: any;\n\nexport default class FullScreen {\n    core: LightGallery;\n    settings: FullscreenSettings;\n    private $LG!: LgQuery;\n    constructor(instance: LightGallery, $LG: LgQuery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n\n        // extend module default settings with lightGallery core settings\n        this.settings = { ...fullscreenSettings, ...this.core.settings };\n\n        return this;\n    }\n\n    public init(): void {\n        let fullScreen = '';\n        if (this.settings.fullScreen) {\n            // check for fullscreen browser support\n            if (\n                !document.fullscreenEnabled &&\n                !document.webkitFullscreenEnabled &&\n                !document.mozFullScreenEnabled &&\n                !document.msFullscreenEnabled\n            ) {\n                return;\n            } else {\n                fullScreen = `<button type=\"button\" aria-label=\"${this.settings.fullscreenPluginStrings['toggleFullscreen']}\" class=\"lg-fullscreen lg-icon\"></button>`;\n                this.core.$toolbar.append(fullScreen);\n                this.fullScreen();\n            }\n        }\n    }\n\n    private isFullScreen(): boolean {\n        return (\n            document.fullscreenElement ||\n            document.mozFullScreenElement ||\n            document.webkitFullscreenElement ||\n            document.msFullscreenElement\n        );\n    }\n\n    private requestFullscreen(): void {\n        const el = document.documentElement;\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        }\n    }\n\n    private exitFullscreen(): void {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\n    private fullScreen(): void {\n        this.$LG(document).on(\n            `fullscreenchange.lg.global${this.core.lgId} \n            webkitfullscreenchange.lg.global${this.core.lgId} \n            mozfullscreenchange.lg.global${this.core.lgId} \n            MSFullscreenChange.lg.global${this.core.lgId}`,\n            () => {\n                if (!this.core.lgOpened) return;\n                this.core.outer.toggleClass('lg-fullscreen-on');\n            },\n        );\n\n        this.core.outer\n            .find('.lg-fullscreen')\n            .first()\n            .on('click.lg', () => {\n                if (this.isFullScreen()) {\n                    this.exitFullscreen();\n                } else {\n                    this.requestFullscreen();\n                }\n            });\n    }\n\n    closeGallery(): void {\n        // exit from fullscreen if activated\n        if (this.isFullScreen()) {\n            this.exitFullscreen();\n        }\n    }\n\n    destroy(): void {\n        this.$LG(document).off(\n            `fullscreenchange.lg.global${this.core.lgId} \n            webkitfullscreenchange.lg.global${this.core.lgId} \n            mozfullscreenchange.lg.global${this.core.lgId} \n            MSFullscreenChange.lg.global${this.core.lgId}`,\n        );\n    }\n}\n","import { ShareOption } from './types';\n\nexport interface ShareStrings {\n    share: string;\n}\n\nexport interface ShareSettings {\n    /**\n     * Enable/Disable share options\n     */\n    share: boolean;\n\n    /**\n     * Enable Facebook share.\n     */\n    facebook: boolean;\n\n    /**\n     * Facebook dropdown text.\n     */\n    facebookDropdownText: string;\n\n    /**\n     * Enable twitter share.\n     */\n    twitter: boolean;\n\n    /**\n     * Twitter dropdown text\n     */\n    twitterDropdownText: string;\n\n    /**\n     * Enable pinterest share.\n     */\n    pinterest: boolean;\n\n    /**\n     * Pinterest dropdown text\n\n     */\n    pinterestDropdownText: string;\n\n    /**\n     * Array of additional share options\n     *\n     * This can be used to build additional share options.\n     * <a href=\"/demos/share/\">Demo</a>\n     */\n    additionalShareOptions: ShareOption[];\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    sharePluginStrings: ShareStrings;\n}\n\nexport const shareSettings = {\n    share: true,\n    facebook: true,\n    facebookDropdownText: 'Facebook',\n    twitter: true,\n    twitterDropdownText: 'Twitter',\n    pinterest: true,\n    pinterestDropdownText: 'Pinterest',\n    additionalShareOptions: [],\n    sharePluginStrings: { share: 'Share' } as ShareStrings,\n};\n","import { GalleryItem } from '../../lg-utils';\n\nexport function getFacebookShareLink(galleryItem: GalleryItem): string {\n    const facebookBaseUrl = '//www.facebook.com/sharer/sharer.php?u=';\n    return (\n        facebookBaseUrl +\n        encodeURIComponent(galleryItem.facebookShareUrl || window.location.href)\n    );\n}\n","import { GalleryItem } from '../../lg-utils';\n\nexport function getTwitterShareLink(galleryItem: GalleryItem): string {\n    const twitterBaseUrl = '//twitter.com/intent/tweet?text=';\n    const url = encodeURIComponent(\n        galleryItem.twitterShareUrl || window.location.href,\n    );\n    const text = galleryItem.tweetText;\n    return twitterBaseUrl + text + '&url=' + url;\n}\n","import { GalleryItem } from '../../lg-utils';\n\nexport function getPinterestShareLink(galleryItem: GalleryItem): string {\n    const pinterestBaseUrl = 'http://www.pinterest.com/pin/create/button/?url=';\n    const description = galleryItem.pinterestText;\n    const media = encodeURIComponent(galleryItem.src as string);\n    const url = encodeURIComponent(\n        galleryItem.pinterestShareUrl || window.location.href,\n    );\n    return (\n        pinterestBaseUrl +\n        url +\n        '&media=' +\n        media +\n        '&description=' +\n        description\n    );\n}\n","import { ShareSettings, shareSettings } from './lg-share-settings';\n\nimport { getFacebookShareLink } from './lg-fb-share-utils';\nimport { getTwitterShareLink } from './lg-twitter-share-utils';\nimport { getPinterestShareLink } from './lg-pinterest-share-utils';\nimport { LightGallery } from '../../lightgallery';\nimport { lGEvents } from '../../lg-events';\nimport { ShareOption } from './types';\n\ninterface DefaultShareOptions extends ShareOption {\n    type: string;\n}\nexport default class Share {\n    core: LightGallery;\n    settings: ShareSettings;\n    private shareOptions: ShareOption[] = [];\n    constructor(instance: LightGallery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n\n        // extend module default settings with lightGallery core settings\n        this.settings = { ...shareSettings, ...this.core.settings };\n        return this;\n    }\n\n    public init(): void {\n        if (!this.settings.share) {\n            return;\n        }\n        this.shareOptions = [\n            ...this.getDefaultShareOptions(),\n            ...this.settings.additionalShareOptions,\n        ];\n        this.setLgShareMarkup();\n        this.core.outer\n            .find('.lg-share .lg-dropdown')\n            .append(this.getShareListHtml());\n\n        this.core.LGel.on(\n            `${lGEvents.afterSlide}.share`,\n            this.onAfterSlide.bind(this),\n        );\n    }\n\n    private getShareListHtml() {\n        let shareHtml = '';\n        this.shareOptions.forEach((shareOption) => {\n            shareHtml += shareOption.dropdownHTML;\n        });\n\n        return shareHtml;\n    }\n\n    setLgShareMarkup(): void {\n        this.core.$toolbar.append(\n            `<button type=\"button\" aria-label=\"${this.settings.sharePluginStrings['share']}\" aria-haspopup=\"true\" aria-expanded=\"false\" class=\"lg-share lg-icon\">\n                <ul class=\"lg-dropdown\" style=\"position: absolute;\"></ul></button>`,\n        );\n\n        this.core.outer.append('<div class=\"lg-dropdown-overlay\"></div>');\n        const $shareButton = this.core.outer.find('.lg-share');\n        $shareButton.first().on('click.lg', () => {\n            this.core.outer.toggleClass('lg-dropdown-active');\n            if (this.core.outer.hasClass('lg-dropdown-active')) {\n                this.core.outer.attr('aria-expanded', true);\n            } else {\n                this.core.outer.attr('aria-expanded', false);\n            }\n        });\n\n        this.core.outer\n            .find('.lg-dropdown-overlay')\n            .first()\n            .on('click.lg', () => {\n                this.core.outer.removeClass('lg-dropdown-active');\n                this.core.outer.attr('aria-expanded', false);\n            });\n    }\n\n    private onAfterSlide(event: CustomEvent) {\n        const { index } = event.detail;\n        const currentItem = this.core.galleryItems[index];\n        setTimeout(() => {\n            this.shareOptions.forEach((shareOption) => {\n                const selector = shareOption.selector;\n                this.core.outer\n                    .find(selector)\n                    .attr('href', shareOption.generateLink(currentItem));\n            });\n        }, 100);\n    }\n\n    private getShareListItemHTML(type: string, text: string): string {\n        return `<li><a class=\"lg-share-${type}\" rel=\"noopener\" target=\"_blank\"><span class=\"lg-icon\"></span><span class=\"lg-dropdown-text\">${text}</span></a></li>`;\n    }\n\n    private getDefaultShareOptions(): DefaultShareOptions[] {\n        return [\n            ...(this.settings.facebook\n                ? [\n                      {\n                          type: 'facebook',\n                          generateLink: getFacebookShareLink,\n                          dropdownHTML: this.getShareListItemHTML(\n                              'facebook',\n                              this.settings.facebookDropdownText,\n                          ),\n                          selector: '.lg-share-facebook',\n                      },\n                  ]\n                : []),\n            ...(this.settings.twitter\n                ? [\n                      {\n                          type: 'twitter',\n                          generateLink: getTwitterShareLink,\n                          dropdownHTML: this.getShareListItemHTML(\n                              'twitter',\n                              this.settings.twitterDropdownText,\n                          ),\n                          selector: '.lg-share-twitter',\n                      },\n                  ]\n                : []),\n            ...(this.settings.pinterest\n                ? [\n                      {\n                          type: 'pinterest',\n                          generateLink: getPinterestShareLink,\n                          dropdownHTML: this.getShareListItemHTML(\n                              'pinterest',\n                              this.settings.pinterestDropdownText,\n                          ),\n                          selector: '.lg-share-pinterest',\n                      },\n                  ]\n                : []),\n        ];\n    }\n\n    public destroy(): void {\n        this.core.outer.find('.lg-dropdown-overlay').remove();\n        this.core.outer.find('.lg-share').remove();\n        this.core.LGel.off('.lg.share');\n        this.core.LGel.off('.share');\n    }\n}\n","export interface RotateStrings {\n    flipVertical: string;\n    flipHorizontal: string;\n    rotateLeft: string;\n    rotateRight: string;\n}\n\nexport interface RotateSettings {\n    /**\n     * Enable/Disable rotate option\n     */\n    rotate: boolean;\n\n    /**\n     * Rotate speed in milliseconds\n     */\n    rotateSpeed: number;\n\n    /**\n     * Enable rotate left.\n     */\n    rotateLeft: boolean;\n\n    /**\n     * Enable rotate right.\n     */\n    rotateRight: boolean;\n\n    /**\n     * Enable flip horizontal.\n     */\n    flipHorizontal: boolean;\n\n    /**\n     * Enable flip vertical.\n     */\n    flipVertical: boolean;\n\n    /**\n     * Custom translation strings for aria-labels\n     */\n    rotatePluginStrings: RotateStrings;\n}\nexport const rotateSettings = {\n    rotate: true,\n    rotateSpeed: 400,\n    rotateLeft: true,\n    rotateRight: true,\n    flipHorizontal: true,\n    flipVertical: true,\n    rotatePluginStrings: {\n        flipVertical: 'Flip vertical',\n        flipHorizontal: 'Flip horizontal',\n        rotateLeft: 'Rotate left',\n        rotateRight: 'Rotate right',\n    } as RotateStrings,\n};\n","import { lGEvents } from '../../lg-events';\nimport { LgQuery } from '../../lgQuery';\nimport { LightGallery } from '../../lightgallery';\nimport { rotateSettings, RotateSettings } from './lg-rotate-settings';\n\nexport default class Rotate {\n    core: LightGallery;\n    settings: RotateSettings;\n    rotateValuesList!: {\n        [key: string]: any;\n    };\n    private $LG!: LgQuery;\n    constructor(instance: LightGallery, $LG: LgQuery) {\n        // get lightGallery core plugin instance\n        this.core = instance;\n        this.$LG = $LG;\n\n        // extend module default settings with lightGallery core settings\n        this.settings = {\n            ...rotateSettings,\n            ...this.core.settings,\n        };\n\n        return this;\n    }\n    buildTemplates(): void {\n        let rotateIcons = '';\n        if (this.settings.flipVertical) {\n            rotateIcons += `<button type=\"button\" id=\"lg-flip-ver\" aria-label=\"${this.settings.rotatePluginStrings['flipVertical']}\" class=\"lg-flip-ver lg-icon\"></button>`;\n        }\n        if (this.settings.flipHorizontal) {\n            rotateIcons += `<button type=\"button\" id=\"lg-flip-hor\" aria-label=\"${this.settings.rotatePluginStrings['flipHorizontal']}\" class=\"lg-flip-hor lg-icon\"></button>`;\n        }\n        if (this.settings.rotateLeft) {\n            rotateIcons += `<button type=\"button\" id=\"lg-rotate-left\" aria-label=\"${this.settings.rotatePluginStrings['rotateLeft']}\" class=\"lg-rotate-left lg-icon\"></button>`;\n        }\n        if (this.settings.rotateRight) {\n            rotateIcons += `<button type=\"button\" id=\"lg-rotate-right\" aria-label=\"${this.settings.rotatePluginStrings['rotateRight']}\" class=\"lg-rotate-right lg-icon\"></button>`;\n        }\n        this.core.$toolbar.append(rotateIcons);\n    }\n\n    init(): void {\n        if (!this.settings.rotate) {\n            return;\n        }\n        this.buildTemplates();\n\n        // Save rotate config for each item to persist its rotate, flip values\n        // even after navigating to diferent slides\n        this.rotateValuesList = {};\n\n        // event triggered after appending slide content\n        this.core.LGel.on(`${lGEvents.slideItemLoad}.rotate`, (event) => {\n            const { index } = event.detail;\n\n            const rotateEl = this.core\n                .getSlideItem(index)\n                .find('.lg-img-rotate')\n                .get();\n            if (!rotateEl) {\n                const imageWrap = this.core\n                    .getSlideItem(index)\n                    .find('.lg-object')\n                    .first();\n\n                imageWrap.wrap('lg-img-rotate');\n                //this.rotateValuesList[this.core.index]\n                this.core\n                    .getSlideItem(this.core.index)\n                    .find('.lg-img-rotate')\n                    .css(\n                        'transition-duration',\n                        this.settings.rotateSpeed + 'ms',\n                    );\n            }\n        });\n\n        this.core.outer\n            .find('#lg-rotate-left')\n            .first()\n            .on('click.lg', this.rotateLeft.bind(this));\n\n        this.core.outer\n            .find('#lg-rotate-right')\n            .first()\n            .on('click.lg', this.rotateRight.bind(this));\n\n        this.core.outer\n            .find('#lg-flip-hor')\n            .first()\n            .on('click.lg', this.flipHorizontal.bind(this));\n\n        this.core.outer\n            .find('#lg-flip-ver')\n            .first()\n            .on('click.lg', this.flipVertical.bind(this));\n\n        // Reset rotate on slide change\n        this.core.LGel.on(`${lGEvents.beforeSlide}.rotate`, (event) => {\n            if (!this.rotateValuesList[event.detail.index]) {\n                this.rotateValuesList[event.detail.index] = {\n                    rotate: 0,\n                    flipHorizontal: 1,\n                    flipVertical: 1,\n                };\n            }\n        });\n    }\n\n    applyStyles(): void {\n        const $image = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-img-rotate')\n            .first();\n\n        $image.css(\n            'transform',\n            'rotate(' +\n                this.rotateValuesList[this.core.index].rotate +\n                'deg)' +\n                ' scale3d(' +\n                this.rotateValuesList[this.core.index].flipHorizontal +\n                ', ' +\n                this.rotateValuesList[this.core.index].flipVertical +\n                ', 1)',\n        );\n    }\n\n    rotateLeft(): void {\n        this.rotateValuesList[this.core.index].rotate -= 90;\n        this.applyStyles();\n        this.triggerEvents(lGEvents.rotateLeft, {\n            rotate: this.rotateValuesList[this.core.index].rotate,\n        });\n    }\n\n    rotateRight(): void {\n        this.rotateValuesList[this.core.index].rotate += 90;\n        this.applyStyles();\n        this.triggerEvents(lGEvents.rotateRight, {\n            rotate: this.rotateValuesList[this.core.index].rotate,\n        });\n    }\n\n    getCurrentRotation(el: HTMLElement): number {\n        if (!el) {\n            return 0;\n        }\n        const st = this.$LG(el).style();\n        const tm =\n            st.getPropertyValue('-webkit-transform') ||\n            st.getPropertyValue('-moz-transform') ||\n            st.getPropertyValue('-ms-transform') ||\n            st.getPropertyValue('-o-transform') ||\n            st.getPropertyValue('transform') ||\n            'none';\n        if (tm !== 'none') {\n            const values = tm.split('(')[1].split(')')[0].split(',') as any;\n            if (values) {\n                const angle = Math.round(\n                    Math.atan2(values[1], values[0]) * (180 / Math.PI),\n                );\n                return angle < 0 ? angle + 360 : angle;\n            }\n        }\n        return 0;\n    }\n\n    flipHorizontal(): void {\n        const rotateEl = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-img-rotate')\n            .first()\n            .get();\n        const currentRotation = this.getCurrentRotation(rotateEl);\n        let rotateAxis = 'flipHorizontal';\n        if (currentRotation === 90 || currentRotation === 270) {\n            rotateAxis = 'flipVertical';\n        }\n        this.rotateValuesList[this.core.index][rotateAxis] *= -1;\n        this.applyStyles();\n        this.triggerEvents(lGEvents.flipHorizontal, {\n            flipHorizontal: this.rotateValuesList[this.core.index][rotateAxis],\n        });\n    }\n\n    flipVertical(): void {\n        const rotateEl = this.core\n            .getSlideItem(this.core.index)\n            .find('.lg-img-rotate')\n            .first()\n            .get();\n        const currentRotation = this.getCurrentRotation(rotateEl);\n        let rotateAxis = 'flipVertical';\n        if (currentRotation === 90 || currentRotation === 270) {\n            rotateAxis = 'flipHorizontal';\n        }\n        this.rotateValuesList[this.core.index][rotateAxis] *= -1;\n\n        this.applyStyles();\n\n        this.triggerEvents(lGEvents.flipVertical, {\n            flipVertical: this.rotateValuesList[this.core.index][rotateAxis],\n        });\n    }\n\n    triggerEvents(event: string, detail: any): void {\n        setTimeout(() => {\n            this.core.LGel.trigger(event, detail);\n        }, this.settings.rotateSpeed + 10);\n    }\n\n    isImageOrientationChanged(): boolean {\n        const rotateValue = this.rotateValuesList[this.core.index];\n        const isRotated = Math.abs(rotateValue.rotate) % 360 !== 0;\n        const ifFlippedHor = rotateValue.flipHorizontal < 0;\n        const ifFlippedVer = rotateValue.flipVertical < 0;\n        return isRotated || ifFlippedHor || ifFlippedVer;\n    }\n\n    closeGallery(): void {\n        if (this.isImageOrientationChanged()) {\n            this.core.getSlideItem(this.core.index).css('opacity', 0);\n        }\n        this.rotateValuesList = {};\n    }\n\n    destroy(): void {\n        // Unbind all events added by lightGallery rotate plugin\n        this.core.LGel.off('.lg.rotate');\n        this.core.LGel.off('.rotate');\n    }\n}\n"],"sourceRoot":""}