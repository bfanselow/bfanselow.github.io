{"version":3,"sources":["core/config/layout.ts","software/components/AdminAppBar.tsx","software/components/AdminToolbar.tsx","software/components/ToolbarWidget.tsx","software/pages/SoftwarePlayground.tsx"],"names":["drawerCollapsedWidth","drawerWidth","AdminAppBar","_ref","children","collapsed","useSettings","width","_jsx","AppBar","color","position","sx","lg","marginLeft","AdminToolbar","title","toggleDrawer","_jsxs","Toolbar","px","xs","sm","IconButton","aria-label","edge","onClick","display","marginRight","MenuIcon","Typography","variant","component","flexGrow","ToolbarWidget","anchorEl","setAnchorEl","useState","open","Boolean","Box","id","aria-controls","aria-haspopup","aria-expanded","event","currentTarget","NotificationsIcon","Popover","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","SoftwarePlayground","React","Fragment","Grid","container","direction","spacing","item","justifyContent"],"mappings":"yHAAA,oEAAO,MAAMA,EAAuB,IACvBC,EAAc,K,iCCD3B,sCA0BeC,IAlBKC,IAAqC,IAApC,SAAEC,GAA4BD,EACjD,MAAM,UAAEE,GAAcC,cAChBC,EAAQF,EAAYL,IAAuBC,IAEjD,OACEO,cAACC,IAAM,CACLC,MAAM,UACNC,SAAS,QACTC,GAAI,CACFL,MAAO,CAAEM,GAAI,eAAeN,QAC5BO,WAAY,CAAED,GAAIN,IAClBH,SAEDA,M,iCCrBP,iEAoCeW,IAzBMZ,IAA6C,IAA5C,SAAEC,EAAQ,MAAEY,GAA0Bb,EAC1D,MAAM,aAAEc,GAAiBX,cAEzB,OACEY,eAACC,IAAO,CAACP,GAAI,CAAEQ,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAMlB,SAAA,CACpCI,cAACe,IAAU,CACTb,MAAM,UACNc,aAAW,cACXC,KAAK,QACLC,QAAST,EACTL,GAAI,CACFe,QAAS,CAAEd,GAAI,QACfe,YAAa,GACbxB,SAEFI,cAACqB,IAAQ,MAEXrB,cAACsB,IAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKpB,GAAI,CAAEqB,SAAU,GAAI7B,SACzDY,IAEFZ,O,iCC/BP,+DAuDe8B,IAjDOA,KAEpB,MAAOC,EAAUC,GAAeC,mBAA6B,MAEvDC,EAAOC,QAAQJ,GAUrB,OACEjB,eAACsB,IAAG,CAAApC,SAAA,CACFI,cAACe,IAAU,CACTkB,GAAG,uBACHC,gBAAc,wBACdC,gBAAc,OACdC,gBAAeN,EAAO,OAAS,QAC/Bd,aAAW,4BACXd,MAAM,UACNgB,QAjBemB,IACnBT,EAAYS,EAAMC,gBAgBO1C,SAEnBI,cAACuC,IAAiB,MAEtBvC,cAACwC,IAAO,CACNP,GAAG,wBACHH,KAAMA,EACNH,SAAUA,EACVc,QArBcC,KAClBd,EAAY,OAqBRe,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SACZjD,SAEFI,cAACgC,IAAG,CAAC5B,GAAI,CAAEL,MAAO,KAAMH,SAAC,6B,iCC/CjC,+EA4BemD,UAtBYA,IAEvBrC,eAACsC,IAAMC,SAAQ,CAAArD,SAAA,CACbI,cAACN,IAAW,CAAAE,SACVI,cAACO,IAAY,CAACC,MAAM,sBAAqBZ,SACvCI,cAAC0B,IAAa,QAGlBhB,eAACwC,IAAI,CAACC,WAAS,EAACC,UAAU,SAASC,QAAS,EAAEzD,SAAA,CAC1CI,cAACkD,IAAI,CAACI,MAAI,EAACnC,QAAQ,OAAOoC,eAAe,SAAQ3D,SAAC,2BAGpDI,cAACkD,IAAI,CAACI,MAAI,EAAA1D,SACNI,cAACsB,IAAU,CAACC,QAAQ,QAAO3B,SAAC","file":"static/js/40.3283b3bc.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminAppBarProps = {\n  children: React.ReactNode;\n};\n\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\n  const { collapsed } = useSettings();\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  return (\n    <AppBar\n      color=\"default\"\n      position=\"fixed\"\n      sx={{\n        width: { lg: `calc(100% - ${width}px)` },\n        marginLeft: { lg: width },\n      }}\n    >\n      {children}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminToolbarProps = {\n  children?: React.ReactNode;\n  title?: string;\n};\n\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\n  const { toggleDrawer } = useSettings();\n\n  return (\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        onClick={toggleDrawer}\n        sx={{\n          display: { lg: \"none\" },\n          marginRight: 2,\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\n        {title}\n      </Typography>\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default AdminToolbar;\n","import Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useState } from \"react\";\n\nconst ToolbarWidget = () => {\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <IconButton\n        id=\"notifications-button\"\n        aria-controls=\"notifications-popover\"\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : \"false\"}\n        aria-label=\"show recent notifications\"\n        color=\"inherit\"\n        onClick={handleClick}\n      >\n          <NotificationsIcon />\n      </IconButton>\n      <Popover\n        id=\"notifications-popover\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <Box sx={{ width: 360 }}>\n           Some Toolbar Data\n        </Box>\n      </Popover>\n    </Box>\n  );\n};\n\nexport default ToolbarWidget;\n","import React from \"react\";\nimport AdminAppBar from \"../components/AdminAppBar\";\nimport AdminToolbar from \"../components/AdminToolbar\";\nimport ToolbarWidget from \"../components/ToolbarWidget\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst SoftwarePlayground = () => {\n  return (\n    <React.Fragment>\n      <AdminAppBar>\n        <AdminToolbar title=\"Software Playground\">\n          <ToolbarWidget />\n        </AdminToolbar>\n      </AdminAppBar>\n      <Grid container direction=\"column\" spacing={2}>\n          <Grid item display=\"flex\" justifyContent=\"center\">\n            Playground Placeholder \n        </Grid>\n        <Grid item>\n            <Typography variant=\"body2\">\n                Placeholder \n            </Typography>\n          </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default SoftwarePlayground;\n"],"sourceRoot":""}