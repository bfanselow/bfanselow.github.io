{"version":3,"sources":["core/config/layout.ts","../node_modules/@material-ui/core/Card/cardClasses.js","../node_modules/@material-ui/core/Card/Card.js","../node_modules/@material-ui/core/CardMedia/cardMediaClasses.js","../node_modules/@material-ui/core/CardMedia/CardMedia.js","endurance/components/AdminAppBar.tsx","endurance/components/AdminToolbar.tsx","endurance/components/ToolbarWidget.tsx","endurance/pages/EnduranceHome.tsx"],"names":["drawerCollapsedWidth","drawerWidth","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","cardClasses","CardRoot","experimentalStyled","Paper","name","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","styleProps","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardMediaUtilityClass","cardMediaClasses","CardMediaRoot","isMediaComponent","isImageComponent","media","img","_ref","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","children","component","image","src","style","indexOf","composedStyle","backgroundImage","slots","as","AdminAppBar","collapsed","useSettings","AppBar","color","position","sx","lg","marginLeft","AdminToolbar","title","toggleDrawer","_jsxs","Toolbar","px","xs","sm","IconButton","aria-label","edge","onClick","marginRight","MenuIcon","Typography","variant","flexGrow","ToolbarWidget","anchorEl","setAnchorEl","useState","open","Boolean","Box","id","aria-controls","aria-haspopup","aria-expanded","event","currentTarget","NotificationsIcon","Popover","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","EnduranceHome","Fragment","Grid","container","direction","spacing","item","justifyContent","maxWidth"],"mappings":"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","file":"static/js/43.2823662c.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = experimentalStyled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  /* Styles applied to the root element. */\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"raised\"]);\n\n  const styleProps = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    styleProps: styleProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('Material-UI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = styleProps;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = experimentalStyled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = styleProps;\n    return _extends({}, styles.root, isMediaComponent && styles.media, isImageComponent && styles.img);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, styleProps.isMediaComponent && {\n  width: '100%'\n}, styleProps.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const styleProps = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    style: composedStyle,\n    styleProps: styleProps,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;","import AppBar from \"@material-ui/core/AppBar\";\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminAppBarProps = {\n  children: React.ReactNode;\n};\n\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\n  const { collapsed } = useSettings();\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  return (\n    <AppBar\n      color=\"default\"\n      position=\"fixed\"\n      sx={{\n        width: { lg: `calc(100% - ${width}px)` },\n        marginLeft: { lg: width },\n      }}\n    >\n      {children}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminToolbarProps = {\n  children?: React.ReactNode;\n  title?: string;\n};\n\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\n  const { toggleDrawer } = useSettings();\n\n  return (\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        onClick={toggleDrawer}\n        sx={{\n          display: { lg: \"none\" },\n          marginRight: 2,\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\n        {title}\n      </Typography>\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default AdminToolbar;\n","import Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useState } from \"react\";\n\nconst ToolbarWidget = () => {\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <IconButton\n        id=\"notifications-button\"\n        aria-controls=\"notifications-popover\"\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : \"false\"}\n        aria-label=\"show recent notifications\"\n        color=\"inherit\"\n        onClick={handleClick}\n      >\n          <NotificationsIcon />\n      </IconButton>\n      <Popover\n        id=\"notifications-popover\"\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <Box sx={{ width: 360 }}>\n           Some Toolbar Data\n        </Box>\n      </Popover>\n    </Box>\n  );\n};\n\nexport default ToolbarWidget;\n","import React from \"react\";\nimport AdminAppBar from \"../components/AdminAppBar\";\nimport AdminToolbar from \"../components/AdminToolbar\";\nimport ToolbarWidget from \"../components/ToolbarWidget\";\nimport { Card, CardMedia, Grid, Typography } from \"@material-ui/core\";\n\nconst EnduranceHome = () => {\n  return (\n    <React.Fragment>\n      <AdminAppBar>\n        <AdminToolbar title=\"Endurance\">\n          <ToolbarWidget />\n        </AdminToolbar>\n      </AdminAppBar>\n      <Grid container direction=\"column\" spacing={2}>\n          <Grid item display=\"flex\" justifyContent=\"center\">\n            <Card sx={{ maxWidth: 1200 }}>\n                <CardMedia\n                    component=\"img\"\n                    image=\"/img/prefontaine.webp\"\n                />\n            </Card>\n        </Grid>\n        <Grid item>\n            <Typography variant=\"body1\">\n      It is not the critic who counts; not the man who points out how the strong\nman stumbles, or where the doer of deeds could have done them better.\nThe credit belongs to the man who is actually in the arena, whose face is\nmarred by dust and sweat and blood; who strives valiantly; who errs, who\ncomes short again and again, because there is no effort without error and\nshortcoming; but who does actually strive to do the deeds; who knows\ngreat enthusiasms, the great devotions; who spends himself in a worthy\ncause; who at the best knows in the end the triumph of high achievement,\nand who at the worst, if he fails, at least fails while daring greatly, so that\nhis place shall never be with those cold and timid souls who neither know\nvictory nor defeat.\n            </Typography>\n            <Typography variant=\"body2\">\n                ~ Theodore Roosevelt\n            </Typography>\n          </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default EnduranceHome;\n"],"sourceRoot":""}